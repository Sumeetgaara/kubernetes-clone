{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","redis","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"acl\"","--cfg","feature=\"aio\"","--cfg","feature=\"async-std\"","--cfg","feature=\"async-std-comp\"","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"geospatial\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"script\"","--cfg","feature=\"sha1\"","--cfg","feature=\"streams\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-comp\"","--cfg","feature=\"tokio-util\"","-C","metadata=853b34a4bff2efe0","-C","extra-filename=-853b34a4bff2efe0","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps","--extern","async_std=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libasync_std-608375e7ebfed419.rmeta","--extern","async_trait=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\async_trait-9b8f193974d45f59.dll","--extern","bytes=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libbytes-aa74d759d4f44009.rmeta","--extern","combine=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libcombine-c84b6bf79fb14af1.rmeta","--extern","dtoa=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libdtoa-5ce207036d3814b5.rmeta","--extern","futures_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libfutures_util-5aac6491401bbbb3.rmeta","--extern","itoa=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libitoa-0e160a860a213415.rmeta","--extern","percent_encoding=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libpercent_encoding-b723eb148ddbf608.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libpin_project_lite-ea8df8112e804e24.rmeta","--extern","sha1=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libsha1-4368b15c28404adb.rmeta","--extern","tokio=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libtokio-a93b54547b168b43.rmeta","--extern","tokio_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libtokio_util-9fbfcbe8d2657079.rmeta","--extern","url=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\liburl-b9ad97e29326a6ab.rmeta","--cap-lints","allow","-L","native=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\build\\wepoll-sys-e6e3462ec406f968\\out\\wepoll-build","-L","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\build\\wepoll-sys-e6e3462ec406f968\\out\\wepoll-build","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\controller\\target\\rls\\debug\\deps\\libredis-853b34a4bff2efe0.rmeta"},"prelude":{"crate_id":{"name":"redis","disambiguator":[15226391648986873509,620869455813794793]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":13,"id":{"name":"async_trait","disambiguator":[826868617954479482,1922282571948681493]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":14,"id":{"name":"combine","disambiguator":[13947638618008743609,13535089120244214361]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":15,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":17,"id":{"name":"futures_util","disambiguator":[3851623361417525723,15075720611811374842]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":18,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":19,"id":{"name":"pin_utils","disambiguator":[16300649773639005160,2183150147065103287]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":20,"id":{"name":"futures_macro","disambiguator":[5683065257936351085,7515536367612293528]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":21,"id":{"name":"futures_task","disambiguator":[7711611736422884463,430324380527108256]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":22,"id":{"name":"futures_sink","disambiguator":[515912780452359249,12260783340991913177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":23,"id":{"name":"slab","disambiguator":[6325241530448311626,10372903147419273267]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":24,"id":{"name":"futures_io","disambiguator":[1236178160505726825,10601705116674456136]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":25,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":26,"id":{"name":"tokio","disambiguator":[17248547185099741691,16850346084374300856]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[17510333067247959268,17017547263955438103]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","num":28,"id":{"name":"bytes","disambiguator":[5820783073455330643,12970661177991392792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":29,"id":{"name":"mio","disambiguator":[4437319973475587906,10249360889806588167]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":30,"id":{"name":"net2","disambiguator":[16357475531324799824,6258239627484377111]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":31,"id":{"name":"winapi","disambiguator":[3107479993614844685,9879761320358468779]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":32,"id":{"name":"cfg_if","disambiguator":[10183188612241806738,3141981603649370946]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":33,"id":{"name":"iovec","disambiguator":[14939734292324289300,6136226544270168033]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":34,"id":{"name":"miow","disambiguator":[12636448290504770375,2861566918305594320]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":35,"id":{"name":"kernel32","disambiguator":[17082474735454774242,4591542647748319794]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":36,"id":{"name":"winapi","disambiguator":[9025474517276677421,6142900392020989985]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":37,"id":{"name":"ws2_32","disambiguator":[10357857738891575680,6064915076307861862]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":38,"id":{"name":"log","disambiguator":[12982907031981037824,5141090172081501113]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":39,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":40,"id":{"name":"value_bag","disambiguator":[10124774998366459614,13593667792098813783]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":41,"id":{"name":"ctor","disambiguator":[9167629638375066073,9293101725069284031]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":42,"id":{"name":"fnv","disambiguator":[4417970326195262275,14024324247791422672]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","num":43,"id":{"name":"tokio_util","disambiguator":[3033285192217998514,13944097041224329450]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":44,"id":{"name":"async_std","disambiguator":[10750823045818554928,3202084099213479290]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":45,"id":{"name":"kv_log_macro","disambiguator":[14284590456361832591,16929679460571884590]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":46,"id":{"name":"async_lock","disambiguator":[9674162324520145755,9408669803221321346]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":47,"id":{"name":"event_listener","disambiguator":[16718974153294965114,9414809684068953069]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":48,"id":{"name":"async_channel","disambiguator":[10392464564630602582,15122802017290283733]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":49,"id":{"name":"concurrent_queue","disambiguator":[13690883887734332756,2372090323394090042]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":50,"id":{"name":"cache_padded","disambiguator":[18430742370163598732,8934774445746586313]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":51,"id":{"name":"async_io","disambiguator":[2658292211584419433,6908477449945268381]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":52,"id":{"name":"futures_lite","disambiguator":[7929227947593562983,9688460980843640366]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":53,"id":{"name":"parking","disambiguator":[8629873100962434843,14837162830194983568]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":54,"id":{"name":"waker_fn","disambiguator":[2770740284744609405,5984161034792111341]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":55,"id":{"name":"fastrand","disambiguator":[12860178853366623945,16020401611787001140]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":56,"id":{"name":"socket2","disambiguator":[16067668866957574069,13848688402430285443]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":57,"id":{"name":"once_cell","disambiguator":[1318278357116249413,16031921589002200882]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":58,"id":{"name":"polling","disambiguator":[13066002102571883063,9336106181773667594]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":59,"id":{"name":"wepoll_sys","disambiguator":[18229083904412076562,9645197850149034627]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":60,"id":{"name":"async_global_executor","disambiguator":[13500605778030025235,2691450279119019083]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":61,"id":{"name":"async_executor","disambiguator":[1839053983854032921,5613372448894460421]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":62,"id":{"name":"async_task","disambiguator":[7819238269719097839,5536517737666979164]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":63,"id":{"name":"async_mutex","disambiguator":[12274310611474537075,6776734292810188048]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":64,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":65,"id":{"name":"blocking","disambiguator":[1552592885452346216,16626638199339996693]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","num":66,"id":{"name":"atomic_waker","disambiguator":[11167180425658754839,11143837923886538176]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","num":67,"id":{"name":"sha1","disambiguator":[16888322545950089269,13281797537102794219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","num":68,"id":{"name":"itoa","disambiguator":[11741280253805075010,2704109228158362469]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":69,"id":{"name":"url","disambiguator":[2420765382997054495,8338742729553175312]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":70,"id":{"name":"matches","disambiguator":[14949904096307642766,2517617068080244165]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":71,"id":{"name":"form_urlencoded","disambiguator":[2131293899114811763,2003199335985441037]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":72,"id":{"name":"percent_encoding","disambiguator":[14612011609199210034,10334071456787701777]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":73,"id":{"name":"idna","disambiguator":[14159155932121851321,10807165729459225254]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":74,"id":{"name":"unicode_bidi","disambiguator":[6484047981150100831,10192420418295851794]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":75,"id":{"name":"unicode_normalization","disambiguator":[10835524218481899114,6821307144502876620]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":76,"id":{"name":"tinyvec","disambiguator":[6300920138310372466,16795190105106960142]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","num":77,"id":{"name":"tinyvec_macros","disambiguator":[2754611380552878541,774889871944910723]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","num":78,"id":{"name":"dtoa","disambiguator":[1272589908937130907,17307579483981711092]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":13899,"line_start":1,"line_end":424,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12070,"byte_end":12076,"line_start":345,"line_end":345,"column_start":24,"column_end":30},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12099,"byte_end":12102,"line_start":346,"line_end":346,"column_start":22,"column_end":25},"alias_span":null,"name":"cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12104,"byte_end":12116,"line_start":346,"line_end":346,"column_start":27,"column_end":39},"alias_span":null,"name":"pack_command","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12118,"byte_end":12122,"line_start":346,"line_end":346,"column_start":41,"column_end":45},"alias_span":null,"name":"pipe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12124,"byte_end":12127,"line_start":346,"line_end":346,"column_start":47,"column_end":50},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12129,"byte_end":12132,"line_start":346,"line_end":346,"column_start":52,"column_end":55},"alias_span":null,"name":"Cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12134,"byte_end":12138,"line_start":346,"line_end":346,"column_start":57,"column_end":61},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12140,"byte_end":12148,"line_start":346,"line_end":346,"column_start":63,"column_end":71},"alias_span":null,"name":"Pipeline","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12177,"byte_end":12185,"line_start":347,"line_end":347,"column_start":27,"column_end":35},"alias_span":null,"name":"Commands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12187,"byte_end":12198,"line_start":347,"line_end":347,"column_start":37,"column_end":48},"alias_span":null,"name":"ControlFlow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12200,"byte_end":12214,"line_start":347,"line_end":347,"column_start":50,"column_end":64},"alias_span":null,"name":"PubSubCommands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12250,"byte_end":12265,"line_start":349,"line_end":349,"column_start":5,"column_end":20},"alias_span":null,"name":"parse_redis_url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12267,"byte_end":12278,"line_start":349,"line_end":349,"column_start":22,"column_end":33},"alias_span":null,"name":"transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12280,"byte_end":12290,"line_start":349,"line_end":349,"column_start":35,"column_end":45},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12292,"byte_end":12306,"line_start":349,"line_end":349,"column_start":47,"column_end":61},"alias_span":null,"name":"ConnectionAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12308,"byte_end":12322,"line_start":349,"line_end":349,"column_start":63,"column_end":77},"alias_span":null,"name":"ConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12324,"byte_end":12338,"line_start":349,"line_end":349,"column_start":79,"column_end":93},"alias_span":null,"name":"ConnectionLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12344,"byte_end":12362,"line_start":350,"line_end":350,"column_start":5,"column_end":23},"alias_span":null,"name":"IntoConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12364,"byte_end":12367,"line_start":350,"line_end":350,"column_start":25,"column_end":28},"alias_span":null,"name":"Msg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12369,"byte_end":12375,"line_start":350,"line_end":350,"column_start":30,"column_end":36},"alias_span":null,"name":"PubSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12404,"byte_end":12421,"line_start":352,"line_end":352,"column_start":25,"column_end":42},"alias_span":null,"name":"parse_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12423,"byte_end":12429,"line_start":352,"line_end":352,"column_start":44,"column_end":50},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12533,"byte_end":12539,"line_start":355,"line_end":355,"column_start":25,"column_end":31},"alias_span":null,"name":"Script","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12541,"byte_end":12557,"line_start":355,"line_end":355,"column_start":33,"column_end":49},"alias_span":null,"name":"ScriptInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12614,"byte_end":12630,"line_start":359,"line_end":359,"column_start":5,"column_end":21},"alias_span":null,"name":"from_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12656,"byte_end":12665,"line_start":362,"line_end":362,"column_start":5,"column_end":14},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12697,"byte_end":12711,"line_start":365,"line_end":365,"column_start":5,"column_end":19},"alias_span":null,"name":"FromRedisValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12739,"byte_end":12747,"line_start":368,"line_end":368,"column_start":5,"column_end":13},"alias_span":null,"name":"InfoDict","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4768},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12753,"byte_end":12768,"line_start":369,"line_end":369,"column_start":5,"column_end":20},"alias_span":null,"name":"NumericBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12805,"byte_end":12815,"line_start":372,"line_end":372,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12821,"byte_end":12832,"line_start":373,"line_end":373,"column_start":5,"column_end":16},"alias_span":null,"name":"RedisResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12838,"byte_end":12848,"line_start":374,"line_end":374,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12854,"byte_end":12865,"line_start":375,"line_end":375,"column_start":5,"column_end":16},"alias_span":null,"name":"ToRedisArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12896,"byte_end":12901,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13004,"byte_end":13013,"line_start":384,"line_end":384,"column_start":10,"column_end":19},"alias_span":null,"name":"AsyncIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13025,"byte_end":13038,"line_start":384,"line_end":384,"column_start":31,"column_end":44},"alias_span":null,"name":"AsyncCommands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13048,"byte_end":13071,"line_start":384,"line_end":384,"column_start":54,"column_end":77},"alias_span":null,"name":"parse_redis_value_async","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13080,"byte_end":13091,"line_start":384,"line_end":384,"column_start":86,"column_end":97},"alias_span":null,"name":"RedisFuture","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":13899,"line_start":1,"line_end":424,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":75},{"krate":0,"index":329},{"krate":0,"index":352},{"krate":0,"index":415},{"krate":0,"index":490},{"krate":0,"index":532},{"krate":0,"index":664},{"krate":0,"index":712},{"krate":0,"index":840},{"krate":0,"index":929},{"krate":0,"index":968}],"decl_id":null,"docs":" redis-rs is a rust implementation of a Redis client library.  It exposes\n a general purpose interface to Redis and also provides specific helpers for\n commonly used functionality.","sig":null,"attributes":[{"value":"/ redis-rs is a rust implementation of a Redis client library.  It exposes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ a general purpose interface to Redis and also provides specific helpers for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ commonly used functionality.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":157,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":190,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The crate is called `redis` and you can depend on it via cargo:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":194,"byte_end":261,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":262,"byte_end":265,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":266,"byte_end":276,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":277,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ version = \"*\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":302,"byte_end":319,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":320,"byte_end":327,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":328,"byte_end":331,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to use the git version:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":332,"byte_end":371,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":372,"byte_end":375,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":376,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":387,"byte_end":411,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/ git = \"https://github.com/mitsuhiko/redis-rs.git\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":412,"byte_end":465,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":466,"byte_end":473,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":474,"byte_end":477,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Basic Operation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":478,"byte_end":499,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":500,"byte_end":503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ redis-rs exposes two API levels: a low- and a high-level part.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":504,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ The high-level part does not expose all the functionality of redis and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":571,"byte_end":645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ might take some liberties in how it speaks the protocol.  The low-level","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":646,"byte_end":721,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ part of the API allows you to express any request on the redis level.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":722,"byte_end":795,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ You can fluently switch between both API levels at any point.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":796,"byte_end":861,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":862,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Connection Handling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":866,"byte_end":892,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":893,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For connecting to redis you can use a client object which then can produce","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":897,"byte_end":975,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ actual connections.  Connections and clients as well as results of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":976,"byte_end":1046,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ connections and clients are considered `ConnectionLike` objects and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1047,"byte_end":1118,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ can be used anywhere a request is made.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1119,"byte_end":1162,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1163,"byte_end":1166,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The full canonical way to get a connection is to create a client and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1167,"byte_end":1239,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ to ask for a connection from it:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1240,"byte_end":1276,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1277,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1281,"byte_end":1299,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1300,"byte_end":1323,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1328,"byte_end":1377,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/     let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1378,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/     let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1443,"byte_end":1490,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1491,"byte_end":1494,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     /* do something here */","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1495,"byte_end":1526,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1527,"byte_end":1530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1531,"byte_end":1545,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1546,"byte_end":1551,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1552,"byte_end":1559,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1560,"byte_end":1563,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1564,"byte_end":1588,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1589,"byte_end":1592,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ There are a few features defined that can enable additional functionality","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1593,"byte_end":1670,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ if so desired.  Some of them are turned on by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1671,"byte_end":1729,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1730,"byte_end":1733,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * `acl`: enables acl support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1734,"byte_end":1787,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/ * `aio`: enables async IO support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1788,"byte_end":1846,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ * `geospatial`: enables geospatial support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1847,"byte_end":1914,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ * `script`: enables script support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1915,"byte_end":1974,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/ * `r2d2`: enables r2d2 connection pool support (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":1975,"byte_end":2036,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ * `cluster`: enables redis cluster support (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2037,"byte_end":2094,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ * `tokio-rt-core`: enables support for tokio-rt (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2095,"byte_end":2157,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ * `connection-manager`: enables support for automatic reconnection (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2158,"byte_end":2239,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Connection Parameters","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2244,"byte_end":2272,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2273,"byte_end":2276,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ redis-rs knows different ways to define where a connection should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2277,"byte_end":2346,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ go.  The parameter to `Client::open` needs to implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2347,"byte_end":2410,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ `IntoConnectionInfo` trait of which there are three implementations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2411,"byte_end":2483,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2484,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * string slices in `redis://` URL format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2488,"byte_end":2533,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ * URL objects from the redis-url crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2534,"byte_end":2577,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ * `ConnectionInfo` objects.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2578,"byte_end":2609,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2610,"byte_end":2613,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The URL format is `redis://[<username>][:<passwd>@]<hostname>[:port][/<db>]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2614,"byte_end":2694,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2695,"byte_end":2698,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If Unix socket support is available you can use a unix URL in this format:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2699,"byte_end":2777,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2778,"byte_end":2781,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `redis+unix:///[:<passwd>@]<path>[?db=<db>]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2782,"byte_end":2830,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2831,"byte_end":2834,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ For compatibility with some other redis libraries, the \"unix\" scheme","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2835,"byte_end":2907,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ is also supported:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2908,"byte_end":2930,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2931,"byte_end":2934,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ `unix:///[:<passwd>@]<path>[?db=<db>]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2935,"byte_end":2977,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2978,"byte_end":2981,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Executing Low-Level Commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":2982,"byte_end":3017,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3018,"byte_end":3021,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ To execute low-level commands you can use the `cmd` function which allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3022,"byte_end":3099,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ you to build redis requests.  Once you have configured a command object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3100,"byte_end":3175,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ to your liking you can send a query into any `ConnectionLike` object:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3176,"byte_end":3249,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3250,"byte_end":3253,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3254,"byte_end":3272,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3273,"byte_end":3349,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/     let _ : () = redis::cmd(\"SET\").arg(\"my_key\").arg(42).query(con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3350,"byte_end":3423,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3424,"byte_end":3438,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3439,"byte_end":3444,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3445,"byte_end":3452,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3453,"byte_end":3456,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Upon querying the return value is a result object.  If you do not care","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3457,"byte_end":3531,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ about the actual return value (other than that it is not a failure)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3532,"byte_end":3603,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ you can always type annotate it to the unit type `()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3604,"byte_end":3662,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3663,"byte_end":3666,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Executing High-Level Commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3667,"byte_end":3703,"line_start":102,"line_end":102,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The high-level interface is similar.  For it to become available you","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3708,"byte_end":3780,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ need to use the `Commands` trait in which case all `ConnectionLike`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3781,"byte_end":3852,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ objects the library provides will also have high-level methods which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3853,"byte_end":3925,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ make working with the protocol easier:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3926,"byte_end":3968,"line_start":107,"line_end":107,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3969,"byte_end":3972,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3973,"byte_end":3991,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":3992,"byte_end":4015,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4016,"byte_end":4040,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4041,"byte_end":4044,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4045,"byte_end":4121,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/     let _ : () = con.set(\"my_key\", 42)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4122,"byte_end":4166,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4167,"byte_end":4181,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4182,"byte_end":4187,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4188,"byte_end":4195,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4196,"byte_end":4199,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Note that high-level commands are work in progress and many are still","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4200,"byte_end":4273,"line_start":119,"line_end":119,"column_start":1,"column_end":74}},{"value":"/ missing!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4274,"byte_end":4286,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4287,"byte_end":4290,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Type Conversions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4291,"byte_end":4314,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4315,"byte_end":4318,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Because redis inherently is mostly type-less and the protocol is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4319,"byte_end":4391,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ exactly friendly to developers, this library provides flexible support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4392,"byte_end":4466,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ for casting values to the intended results.  This is driven through the `FromRedisValue` and `ToRedisArgs` traits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4467,"byte_end":4585,"line_start":126,"line_end":126,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4586,"byte_end":4589,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The `arg` method of the command will accept a wide range of types through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4590,"byte_end":4667,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ the `ToRedisArgs` trait and the `query` method of a command can convert the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4668,"byte_end":4747,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/ value to what you expect the function to return through the `FromRedisValue`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4748,"byte_end":4828,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ trait.  This is quite flexible and allows vectors, tuples, hashsets, hashmaps","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4829,"byte_end":4910,"line_start":131,"line_end":131,"column_start":1,"column_end":82}},{"value":"/ as well as optional values:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4911,"byte_end":4942,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4943,"byte_end":4946,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4947,"byte_end":4965,"line_start":134,"line_end":134,"column_start":1,"column_end":19}},{"value":"/ # use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4966,"byte_end":4992,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ # use std::collections::{HashMap, HashSet};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":4993,"byte_end":5040,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5041,"byte_end":5092,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5093,"byte_end":5163,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5164,"byte_end":5217,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ let count : i32 = con.get(\"my_counter\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5218,"byte_end":5263,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let count = con.get(\"my_counter\").unwrap_or(0i32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5264,"byte_end":5318,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/ let k : Option<String> = con.get(\"missing_key\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5319,"byte_end":5372,"line_start":142,"line_end":142,"column_start":1,"column_end":54}},{"value":"/ let name : String = con.get(\"my_name\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5373,"byte_end":5417,"line_start":143,"line_end":143,"column_start":1,"column_end":45}},{"value":"/ let bin : Vec<u8> = con.get(\"my_binary\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5418,"byte_end":5464,"line_start":144,"line_end":144,"column_start":1,"column_end":47}},{"value":"/ let map : HashMap<String, i32> = con.hgetall(\"my_hash\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5465,"byte_end":5526,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/ let keys : Vec<String> = con.hkeys(\"my_hash\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5527,"byte_end":5578,"line_start":146,"line_end":146,"column_start":1,"column_end":52}},{"value":"/ let mems : HashSet<i32> = con.smembers(\"my_set\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5579,"byte_end":5633,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/ let (k1, k2) : (String, String) = con.get(&[\"k1\", \"k2\"])?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5634,"byte_end":5696,"line_start":148,"line_end":148,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5697,"byte_end":5709,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5710,"byte_end":5717,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5718,"byte_end":5725,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5726,"byte_end":5729,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Iteration Protocol","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5730,"byte_end":5754,"line_start":153,"line_end":153,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5755,"byte_end":5758,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ In addition to sending a single query you iterators are also supported.  When","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5759,"byte_end":5840,"line_start":155,"line_end":155,"column_start":1,"column_end":82}},{"value":"/ used with regular bulk responses they don't give you much over querying and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5841,"byte_end":5920,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"/ converting into a vector (both use a vector internally) but they can also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5921,"byte_end":5998,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ be used with `SCAN` like commands in which case iteration will send more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":5999,"byte_end":6075,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ queries until the cursor is exhausted:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6076,"byte_end":6118,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6119,"byte_end":6122,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6123,"byte_end":6141,"line_start":161,"line_end":161,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6142,"byte_end":6193,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6194,"byte_end":6264,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6265,"byte_end":6318,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/ let mut iter : redis::Iter<isize> = redis::cmd(\"SSCAN\").arg(\"my_set\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6319,"byte_end":6392,"line_start":165,"line_end":165,"column_start":1,"column_end":74}},{"value":"/     .cursor_arg(0).clone().iter(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6393,"byte_end":6440,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6441,"byte_end":6460,"line_start":167,"line_end":167,"column_start":1,"column_end":20}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6461,"byte_end":6498,"line_start":168,"line_end":168,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6499,"byte_end":6504,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6505,"byte_end":6519,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6520,"byte_end":6527,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6528,"byte_end":6531,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ As you can see the cursor argument needs to be defined with `cursor_arg`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6532,"byte_end":6608,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ instead of `arg` so that the library knows which argument needs updating","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6609,"byte_end":6685,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ as the query is run for more items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6686,"byte_end":6725,"line_start":175,"line_end":175,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6726,"byte_end":6729,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Pipelining","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6730,"byte_end":6746,"line_start":177,"line_end":177,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6747,"byte_end":6750,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ In addition to simple queries you can also send command pipelines.  This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6751,"byte_end":6827,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ is provided through the `pipe` function.  It works very similar to sending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6828,"byte_end":6906,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ individual commands but you can send more than one in one go.  This also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6907,"byte_end":6983,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ allows you to ignore individual results so that matching on the end result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":6984,"byte_end":7062,"line_start":182,"line_end":182,"column_start":1,"column_end":79}},{"value":"/ is easier:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7063,"byte_end":7077,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7078,"byte_end":7081,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7082,"byte_end":7100,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7101,"byte_end":7152,"line_start":186,"line_end":186,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7153,"byte_end":7223,"line_start":187,"line_end":187,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7224,"byte_end":7277,"line_start":188,"line_end":188,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7278,"byte_end":7323,"line_start":189,"line_end":189,"column_start":1,"column_end":46}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7324,"byte_end":7373,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7374,"byte_end":7423,"line_start":191,"line_end":191,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7424,"byte_end":7456,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7457,"byte_end":7507,"line_start":193,"line_end":193,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7508,"byte_end":7522,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7523,"byte_end":7530,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7531,"byte_end":7534,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ If you want the pipeline to be wrapped in a `MULTI`/`EXEC` block you can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7535,"byte_end":7611,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ easily do that by switching the pipeline into `atomic` mode.  From the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7612,"byte_end":7686,"line_start":198,"line_end":198,"column_start":1,"column_end":75}},{"value":"/ caller's point of view nothing changes, the pipeline itself will take","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7687,"byte_end":7760,"line_start":199,"line_end":199,"column_start":1,"column_end":74}},{"value":"/ care of the rest for you:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7761,"byte_end":7790,"line_start":200,"line_end":200,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7791,"byte_end":7794,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7795,"byte_end":7813,"line_start":202,"line_end":202,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7814,"byte_end":7865,"line_start":203,"line_end":203,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7866,"byte_end":7936,"line_start":204,"line_end":204,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7937,"byte_end":7990,"line_start":205,"line_end":205,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":7991,"byte_end":8036,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8037,"byte_end":8054,"line_start":207,"line_end":207,"column_start":1,"column_end":18}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8055,"byte_end":8104,"line_start":208,"line_end":208,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8105,"byte_end":8154,"line_start":209,"line_end":209,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8155,"byte_end":8187,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8188,"byte_end":8238,"line_start":211,"line_end":211,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8239,"byte_end":8253,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8254,"byte_end":8261,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8262,"byte_end":8265,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ You can also use high-level commands on pipelines:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8266,"byte_end":8320,"line_start":215,"line_end":215,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8321,"byte_end":8324,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8325,"byte_end":8343,"line_start":217,"line_end":217,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8344,"byte_end":8395,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8396,"byte_end":8466,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8467,"byte_end":8520,"line_start":220,"line_end":220,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8521,"byte_end":8566,"line_start":221,"line_end":221,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8567,"byte_end":8584,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/     .set(\"key_1\", 42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8585,"byte_end":8619,"line_start":223,"line_end":223,"column_start":1,"column_end":35}},{"value":"/     .set(\"key_2\", 43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8620,"byte_end":8654,"line_start":224,"line_end":224,"column_start":1,"column_end":35}},{"value":"/     .get(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8655,"byte_end":8676,"line_start":225,"line_end":225,"column_start":1,"column_end":22}},{"value":"/     .get(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8677,"byte_end":8716,"line_start":226,"line_end":226,"column_start":1,"column_end":40}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8717,"byte_end":8731,"line_start":227,"line_end":227,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8732,"byte_end":8739,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8740,"byte_end":8743,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ # Transactions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8744,"byte_end":8762,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8763,"byte_end":8766,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Transactions are available through atomic pipelines.  In order to use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8767,"byte_end":8840,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"/ them in a more simple way you can use the `transaction` function of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8841,"byte_end":8914,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ connection:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8915,"byte_end":8930,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8931,"byte_end":8934,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8935,"byte_end":8953,"line_start":236,"line_end":236,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":8954,"byte_end":9005,"line_start":237,"line_end":237,"column_start":1,"column_end":52}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9006,"byte_end":9030,"line_start":238,"line_end":238,"column_start":1,"column_end":25}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9031,"byte_end":9101,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9102,"byte_end":9155,"line_start":240,"line_end":240,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9156,"byte_end":9180,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9181,"byte_end":9263,"line_start":242,"line_end":242,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9264,"byte_end":9308,"line_start":243,"line_end":243,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9309,"byte_end":9321,"line_start":244,"line_end":244,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9322,"byte_end":9365,"line_start":245,"line_end":245,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9366,"byte_end":9398,"line_start":246,"line_end":246,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9399,"byte_end":9407,"line_start":247,"line_end":247,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9408,"byte_end":9463,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9464,"byte_end":9478,"line_start":249,"line_end":249,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9479,"byte_end":9486,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9487,"byte_end":9490,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ For more information see the `transaction` function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9491,"byte_end":9547,"line_start":252,"line_end":252,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9548,"byte_end":9551,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ # PubSub","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9552,"byte_end":9564,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9565,"byte_end":9568,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Pubsub is currently work in progress but provided through the `PubSub`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9569,"byte_end":9643,"line_start":256,"line_end":256,"column_start":1,"column_end":75}},{"value":"/ connection object.  Due to the fact that Rust does not have support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9644,"byte_end":9715,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/ for async IO in libnative yet, the API does not provide a way to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9716,"byte_end":9784,"line_start":258,"line_end":258,"column_start":1,"column_end":69}},{"value":"/ read messages with any form of timeout yet.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9785,"byte_end":9832,"line_start":259,"line_end":259,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9833,"byte_end":9836,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Example usage:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9837,"byte_end":9855,"line_start":261,"line_end":261,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9856,"byte_end":9859,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9860,"byte_end":9878,"line_start":263,"line_end":263,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9879,"byte_end":9930,"line_start":264,"line_end":264,"column_start":1,"column_end":52}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9931,"byte_end":9991,"line_start":265,"line_end":265,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":9992,"byte_end":10035,"line_start":266,"line_end":266,"column_start":1,"column_end":44}},{"value":"/ let mut pubsub = con.as_pubsub();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10036,"byte_end":10073,"line_start":267,"line_end":267,"column_start":1,"column_end":38}},{"value":"/ pubsub.subscribe(\"channel_1\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10074,"byte_end":10109,"line_start":268,"line_end":268,"column_start":1,"column_end":36}},{"value":"/ pubsub.subscribe(\"channel_2\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10110,"byte_end":10145,"line_start":269,"line_end":269,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10146,"byte_end":10149,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10150,"byte_end":10160,"line_start":271,"line_end":271,"column_start":1,"column_end":11}},{"value":"/     let msg = pubsub.get_message()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10161,"byte_end":10201,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/     let payload : String = msg.get_payload()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10202,"byte_end":10252,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/     println!(\"channel '{}': {}\", msg.get_channel_name(), payload);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10253,"byte_end":10323,"line_start":274,"line_end":274,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10324,"byte_end":10329,"line_start":275,"line_end":275,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10330,"byte_end":10337,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10338,"byte_end":10345,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10346,"byte_end":10349,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":10990,"byte_end":10993,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":11893,"byte_end":11896,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`futures`]:https://crates.io/crates/futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":11897,"byte_end":11945,"line_start":338,"line_end":338,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]:https://tokio.rs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":11946,"byte_end":11976,"line_start":339,"line_end":339,"column_start":1,"column_end":31}},{"value":"deny(non_camel_case_types)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":11978,"byte_end":12008,"line_start":341,"line_end":341,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":12009,"byte_end":12031,"line_start":342,"line_end":342,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"acl","qualname":"::acl","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":1188},{"krate":0,"index":1241},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":61},{"krate":0,"index":1243},{"krate":0,"index":1255},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":65}],"decl_id":null,"docs":" Defines types to use with the ACL commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13110,"byte_end":13133,"line_start":389,"line_end":389,"column_start":1,"column_end":24}},{"value":"/ Defines types to use with the ACL commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14205,"byte_end":14252,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14897,"byte_end":14899,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"On","qualname":"::acl::Rule::On","value":"Rule::On","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Enable the user: it is possible to authenticate as this user.\n","sig":null,"attributes":[{"value":"/ Enable the user: it is possible to authenticate as this user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14827,"byte_end":14892,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15058,"byte_end":15061,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Off","qualname":"::acl::Rule::Off","value":"Rule::Off","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Disable the user: it's no longer possible to authenticate with this\n user, however the already authenticated connections will still work.\n","sig":null,"attributes":[{"value":"/ Disable the user: it's no longer possible to authenticate with this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14905,"byte_end":14976,"line_start":23,"line_end":23,"column_start":5,"column_end":76}},{"value":"/ user, however the already authenticated connections will still work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14981,"byte_end":15053,"line_start":24,"line_end":24,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15135,"byte_end":15145,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"AddCommand","qualname":"::acl::Rule::AddCommand","value":"Rule::AddCommand(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Add the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Add the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15068,"byte_end":15130,"line_start":27,"line_end":27,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15229,"byte_end":15242,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"RemoveCommand","qualname":"::acl::Rule::RemoveCommand","value":"Rule::RemoveCommand(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Remove the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Remove the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15159,"byte_end":15224,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15328,"byte_end":15339,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"AddCategory","qualname":"::acl::Rule::AddCategory","value":"Rule::AddCategory(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Add all the commands in such category to be called by the user.\n","sig":null,"attributes":[{"value":"/ Add all the commands in such category to be called by the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15256,"byte_end":15323,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15421,"byte_end":15435,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"RemoveCategory","qualname":"::acl::Rule::RemoveCategory","value":"Rule::RemoveCategory(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Remove the commands from such category the client can call.\n","sig":null,"attributes":[{"value":"/ Remove the commands from such category the client can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15353,"byte_end":15416,"line_start":33,"line_end":33,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15583,"byte_end":15594,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"AllCommands","qualname":"::acl::Rule::AllCommands","value":"Rule::AllCommands","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Alias for `+@all`. Note that it implies the ability to execute all the\n future commands loaded via the modules system.\n","sig":null,"attributes":[{"value":"/ Alias for `+@all`. Note that it implies the ability to execute all the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15449,"byte_end":15523,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ future commands loaded via the modules system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15528,"byte_end":15578,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15627,"byte_end":15637,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"NoCommands","qualname":"::acl::Rule::NoCommands","value":"Rule::NoCommands","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Alias for `-@all`.\n","sig":null,"attributes":[{"value":"/ Alias for `-@all`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15600,"byte_end":15622,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15714,"byte_end":15721,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"AddPass","qualname":"::acl::Rule::AddPass","value":"Rule::AddPass(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Add this password to the list of valid password for the user.\n","sig":null,"attributes":[{"value":"/ Add this password to the list of valid password for the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15644,"byte_end":15709,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15798,"byte_end":15808,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"RemovePass","qualname":"::acl::Rule::RemovePass","value":"Rule::RemovePass(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Remove this password from the list of valid passwords.\n","sig":null,"attributes":[{"value":"/ Remove this password from the list of valid passwords.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15735,"byte_end":15793,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15903,"byte_end":15916,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"AddHashedPass","qualname":"::acl::Rule::AddHashedPass","value":"Rule::AddHashedPass(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Add this SHA-256 hash value to the list of valid passwords for the user.\n","sig":null,"attributes":[{"value":"/ Add this SHA-256 hash value to the list of valid passwords for the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15822,"byte_end":15898,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15999,"byte_end":16015,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"RemoveHashedPass","qualname":"::acl::Rule::RemoveHashedPass","value":"Rule::RemoveHashedPass(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Remove this hash value from from the list of valid passwords\n","sig":null,"attributes":[{"value":"/ Remove this hash value from from the list of valid passwords","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":15930,"byte_end":15994,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16208,"byte_end":16214,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"NoPass","qualname":"::acl::Rule::NoPass","value":"Rule::NoPass","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" All the set passwords of the user are removed, and the user is flagged\n as requiring no password: it means that every password will work\n against this user.\n","sig":null,"attributes":[{"value":"/ All the set passwords of the user are removed, and the user is flagged","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16029,"byte_end":16103,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ as requiring no password: it means that every password will work","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16108,"byte_end":16176,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ against this user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16181,"byte_end":16203,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16303,"byte_end":16312,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"ResetPass","qualname":"::acl::Rule::ResetPass","value":"Rule::ResetPass","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Flush the list of allowed passwords. Moreover removes the _nopass_ status.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed passwords. Moreover removes the _nopass_ status.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16220,"byte_end":16298,"line_start":53,"line_end":53,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16392,"byte_end":16399,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Pattern","qualname":"::acl::Rule::Pattern","value":"Rule::Pattern(String)","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Add a pattern of keys that can be mentioned as part of commands.\n","sig":null,"attributes":[{"value":"/ Add a pattern of keys that can be mentioned as part of commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16319,"byte_end":16387,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16437,"byte_end":16444,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"AllKeys","qualname":"::acl::Rule::AllKeys","value":"Rule::AllKeys","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Alias for `~*`.\n","sig":null,"attributes":[{"value":"/ Alias for `~*`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16413,"byte_end":16432,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16499,"byte_end":16508,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"ResetKeys","qualname":"::acl::Rule::ResetKeys","value":"Rule::ResetKeys","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Flush the list of allowed keys patterns.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed keys patterns.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16450,"byte_end":16494,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16679,"byte_end":16684,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Reset","qualname":"::acl::Rule::Reset","value":"Rule::Reset","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.\n The user returns to the same state it has immediately after its creation.\n","sig":null,"attributes":[{"value":"/ Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16515,"byte_end":16592,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"/ The user returns to the same state it has immediately after its creation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16597,"byte_end":16674,"line_start":64,"line_end":64,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14816,"byte_end":14820,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Rule","qualname":"::acl::Rule","value":"pub enum Rule {\n\n    /// Enable the user: it is possible to authenticate as this user.\n    On,\n\n    /// Disable the user: it's no longer possible to authenticate with this\n    /// user, however the already authenticated connections will still work.\n    Off,\n\n    /// Add the command to the list of commands the user can call.\n    AddCommand(String),\n\n    /// Remove the command to the list of commands the user can call.\n    RemoveCommand(String),\n\n    /// Add all the commands in such category to be called by the user.\n    AddCategory(String),\n\n    /// Remove the commands from such category the client can call.\n    RemoveCategory(String),\n\n    /// Alias for `+@all`. Note that it implies the ability to execute all the\n    /// future commands loaded via the modules system.\n    AllCommands,\n\n    /// Alias for `-@all`.\n    NoCommands,\n\n    /// Add this password to the list of valid password for the user.\n    AddPass(String),\n\n    /// Remove this password from the list of valid passwords.\n    RemovePass(String),\n\n    /// Add this SHA-256 hash value to the list of valid passwords for the user.\n    AddHashedPass(String),\n\n    /// Remove this hash value from from the list of valid passwords\n    RemoveHashedPass(String),\n\n    /// All the set passwords of the user are removed, and the user is flagged\n    /// as requiring no password: it means that every password will work\n    /// against this user.\n    NoPass,\n\n    /// Flush the list of allowed passwords. Moreover removes the _nopass_ status.\n    ResetPass,\n\n    /// Add a pattern of keys that can be mentioned as part of commands.\n    Pattern(String),\n\n    /// Alias for `~*`.\n    AllKeys,\n\n    /// Flush the list of allowed keys patterns.\n    ResetKeys,\n\n    /// Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.\n    /// The user returns to the same state it has immediately after its creation.\n    Reset,\n}","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232}],"decl_id":null,"docs":" ACL rules are used in order to activate or remove a flag, or to perform a\n given change to the user ACL, which under the hood are just single words.\n","sig":null,"attributes":[{"value":"/ ACL rules are used in order to activate or remove a flag, or to perform a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14619,"byte_end":14696,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ given change to the user ACL, which under the hood are just single words.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":14697,"byte_end":14774,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18292,"byte_end":18299,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"AclInfo","qualname":"::acl::AclInfo","value":"AclInfo { flags, passwords, commands, keys }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" An info dictionary type storing Redis ACL information as multiple `Rule`.\n This type collects key/value data returned by the [`ACL GETUSER`][1] command.","sig":null,"attributes":[{"value":"/ An info dictionary type storing Redis ACL information as multiple `Rule`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18038,"byte_end":18115,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ This type collects key/value data returned by the [`ACL GETUSER`][1] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18116,"byte_end":18197,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18198,"byte_end":18201,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/acl-getuser","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18202,"byte_end":18248,"line_start":105,"line_end":105,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18723,"byte_end":18728,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"flags","qualname":"::acl::AclInfo::flags","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Describes flag rules for the user. Represented by [`Rule::On`][1],\n [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and\n [`Rule::NoPass`][5].","sig":null,"attributes":[{"value":"/ Describes flag rules for the user. Represented by [`Rule::On`][1],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18306,"byte_end":18376,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18381,"byte_end":18453,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ [`Rule::NoPass`][5].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18458,"byte_end":18482,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18487,"byte_end":18490,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.On","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18495,"byte_end":18531,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ [2]: ./enum.Rule.html#variant.Off","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18536,"byte_end":18573,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ [3]: ./enum.Rule.html#variant.AllKeys","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18578,"byte_end":18619,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ [4]: ./enum.Rule.html#variant.AllCommands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18624,"byte_end":18669,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/ [5]: ./enum.Rule.html#variant.NoPass","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18674,"byte_end":18714,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18892,"byte_end":18901,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"name":"passwords","qualname":"::acl::AclInfo::passwords","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","sig":null,"attributes":[{"value":"/ Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18745,"byte_end":18823,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18828,"byte_end":18831,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddHashedPass","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18836,"byte_end":18883,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19344,"byte_end":19352,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"commands","qualname":"::acl::AclInfo::commands","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Describes capabilities of which commands the user can call.\n Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],\n [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","sig":null,"attributes":[{"value":"/ Describes capabilities of which commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18918,"byte_end":18981,"line_start":122,"line_end":122,"column_start":5,"column_end":68}},{"value":"/ Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":18986,"byte_end":19055,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19060,"byte_end":19123,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19128,"byte_end":19131,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddCommand","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19136,"byte_end":19180,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/ [2]: ./enum.Rule.html#variant.AddCategory","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19185,"byte_end":19230,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ [3]: ./enum.Rule.html#variant.RemoveCommand","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19235,"byte_end":19282,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ [4]: ./enum.Rule.html#variant.RemoveCategory","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19287,"byte_end":19335,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19534,"byte_end":19538,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"keys","qualname":"::acl::AclInfo::keys","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Describes patterns of keys which the user can access. Represented by\n [`Rule::Pattern`][1].","sig":null,"attributes":[{"value":"/ Describes patterns of keys which the user can access. Represented by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19369,"byte_end":19441,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ [`Rule::Pattern`][1].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19446,"byte_end":19471,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19476,"byte_end":19479,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.Pattern","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19484,"byte_end":19525,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aio","qualname":"::aio","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":1257},{"krate":0,"index":129},{"krate":0,"index":139},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":1264},{"krate":0,"index":1271},{"krate":0,"index":264},{"krate":0,"index":272},{"krate":0,"index":283},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":302},{"krate":0,"index":317}],"decl_id":null,"docs":" Adds experimental async IO support to redis.\n","sig":null,"attributes":[{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13195,"byte_end":13218,"line_start":393,"line_end":393,"column_start":1,"column_end":24}},{"value":"/ Adds experimental async IO support to redis.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":25794,"byte_end":25842,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34327,"byte_end":34333,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"PubSub","qualname":"::aio::PubSub","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a `PubSub` connection.\n","sig":null,"attributes":[{"value":"/ Represents a `PubSub` connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34278,"byte_end":34315,"line_start":236,"line_end":236,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34479,"byte_end":34488,"line_start":245,"line_end":245,"column_start":18,"column_end":27},"name":"subscribe","qualname":"<PubSub>::subscribe","value":"pub async fn subscribe<T: ToRedisArgs, '_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34429,"byte_end":34461,"line_start":244,"line_end":244,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34738,"byte_end":34748,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"name":"psubscribe","qualname":"<PubSub>::psubscribe","value":"pub async fn psubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34673,"byte_end":34720,"line_start":252,"line_end":252,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34986,"byte_end":34997,"line_start":261,"line_end":261,"column_start":18,"column_end":29},"name":"unsubscribe","qualname":"<PubSub>::unsubscribe","value":"pub async fn unsubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34936,"byte_end":34968,"line_start":260,"line_end":260,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35249,"byte_end":35261,"line_start":269,"line_end":269,"column_start":18,"column_end":30},"name":"punsubscribe","qualname":"<PubSub>::punsubscribe","value":"pub async fn punsubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35184,"byte_end":35231,"line_start":268,"line_end":268,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35674,"byte_end":35684,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"on_message","qualname":"<PubSub>::on_message","value":"pub fn on_message<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions.","sig":null,"attributes":[{"value":"/ Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35451,"byte_end":35522,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35527,"byte_end":35530,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an appropriate type through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35535,"byte_end":35628,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35633,"byte_end":35662,"line_start":279,"line_end":279,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36292,"byte_end":36307,"line_start":293,"line_end":293,"column_start":12,"column_end":27},"name":"into_on_message","qualname":"<PubSub>::into_on_message","value":"pub fn into_on_message(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions consuming it.","sig":null,"attributes":[{"value":"/ Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions consuming it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":35926,"byte_end":36010,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36015,"byte_end":36018,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an appropriate type through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36023,"byte_end":36116,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36121,"byte_end":36150,"line_start":290,"line_end":290,"column_start":5,"column_end":34}},{"value":"/ This can be useful in cases where the stream needs to be returned or held by something other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36155,"byte_end":36251,"line_start":291,"line_end":291,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36618,"byte_end":36633,"line_start":301,"line_end":301,"column_start":18,"column_end":33},"name":"into_connection","qualname":"<PubSub>::into_connection","value":"pub async fn into_connection(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Exits from `PubSub` mode and converts [`PubSub`] into [`Connection`].\n","sig":null,"attributes":[{"value":"/ Exits from `PubSub` mode and converts [`PubSub`] into [`Connection`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36527,"byte_end":36600,"line_start":300,"line_end":300,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36785,"byte_end":36795,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"Connection","qualname":"::aio::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Represents a stateful redis TCP connection.\n","sig":null,"attributes":[{"value":"/ Represents a stateful redis TCP connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":36726,"byte_end":36773,"line_start":308,"line_end":308,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":37412,"byte_end":37423,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"into_pubsub","qualname":"<Connection>::into_pubsub","value":"pub fn into_pubsub(Self) -> PubSub","parent":null,"children":[],"decl_id":null,"docs":" Converts this [`Connection`] into [`PubSub`].\n","sig":null,"attributes":[{"value":"/ Converts this [`Connection`] into [`PubSub`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":37351,"byte_end":37400,"line_start":330,"line_end":330,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40411,"byte_end":40424,"line_start":408,"line_end":408,"column_start":14,"column_end":27},"name":"connect_tokio","qualname":"::aio::connect_tokio","value":"pub async fn connect_tokio<'_>(&'_ ConnectionInfo) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a connection.\n","sig":null,"attributes":[{"value":"/ Opens a connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40343,"byte_end":40366,"line_start":406,"line_end":406,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40367,"byte_end":40397,"line_start":407,"line_end":407,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40689,"byte_end":40706,"line_start":416,"line_end":416,"column_start":14,"column_end":31},"name":"connect_async_std","qualname":"::aio::connect_async_std","value":"pub async fn connect_async_std<'_>(&'_ ConnectionInfo) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a connection.\n","sig":null,"attributes":[{"value":"/ Opens a connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40617,"byte_end":40640,"line_start":414,"line_end":414,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"async-std-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":40641,"byte_end":40675,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":43842,"byte_end":43856,"line_start":525,"line_end":525,"column_start":11,"column_end":25},"name":"ConnectionLike","qualname":"::aio::ConnectionLike","value":"ConnectionLike","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228}],"decl_id":null,"docs":" An async abstraction over connections.\n","sig":null,"attributes":[{"value":"/ An async abstraction over connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":43789,"byte_end":43831,"line_start":524,"line_end":524,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":43983,"byte_end":44001,"line_start":528,"line_end":528,"column_start":8,"column_end":26},"name":"req_packed_command","qualname":"::aio::ConnectionLike::req_packed_command","value":"pub fn req_packed_command<'a>(&'a mut Self, &'a Cmd) -> RedisFuture","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n reads the single response from it.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":43863,"byte_end":43932,"line_start":526,"line_end":526,"column_start":5,"column_end":74}},{"value":"/ reads the single response from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":43937,"byte_end":43975,"line_start":527,"line_end":527,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44237,"byte_end":44256,"line_start":533,"line_end":533,"column_start":8,"column_end":27},"name":"req_packed_commands","qualname":"::aio::ConnectionLike::req_packed_commands","value":"pub fn req_packed_commands<'a>(&'a mut Self, &'a crate::Pipeline, usize,\n                               usize) -> RedisFuture","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Sends multiple already encoded (packed) command into the TCP socket\n and reads `count` responses from it.  This is used to implement\n pipelining.\n","sig":null,"attributes":[{"value":"/ Sends multiple already encoded (packed) command into the TCP socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44066,"byte_end":44137,"line_start":530,"line_end":530,"column_start":5,"column_end":76}},{"value":"/ and reads `count` responses from it.  This is used to implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44142,"byte_end":44209,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/ pipelining.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44214,"byte_end":44229,"line_start":532,"line_end":532,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44654,"byte_end":44660,"line_start":544,"line_end":544,"column_start":8,"column_end":14},"name":"get_db","qualname":"::aio::ConnectionLike::get_db","value":"pub fn get_db(&Self) -> i64","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns the database this connection is bound to.  Note that this\n information might be unreliable because it's initially cached and\n also might be incorrect if the connection like object is not\n actually connected.\n","sig":null,"attributes":[{"value":"/ Returns the database this connection is bound to.  Note that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44406,"byte_end":44475,"line_start":540,"line_end":540,"column_start":5,"column_end":74}},{"value":"/ information might be unreliable because it's initially cached and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44480,"byte_end":44549,"line_start":541,"line_end":541,"column_start":5,"column_end":74}},{"value":"/ also might be incorrect if the connection like object is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44554,"byte_end":44618,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44623,"byte_end":44646,"line_start":543,"line_end":543,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":53495,"byte_end":53516,"line_start":834,"line_end":834,"column_start":12,"column_end":33},"name":"MultiplexedConnection","qualname":"::aio::MultiplexedConnection","value":"MultiplexedConnection {  }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":" A connection object which can be cloned, allowing requests to be be sent concurrently\n on the same underlying connection (tcp/unix socket).\n","sig":null,"attributes":[{"value":"/ A connection object which can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":53320,"byte_end":53409,"line_start":831,"line_end":831,"column_start":1,"column_end":90}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":53410,"byte_end":53466,"line_start":832,"line_end":832,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aio_async_std","qualname":"::aio_async_std","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":1327}],"decl_id":null,"docs":" Enables the async_std compatibility\n","sig":null,"attributes":[{"value":"/ Enables the async_std compatibility","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13280,"byte_end":13319,"line_start":397,"line_end":397,"column_start":1,"column_end":40}},{"value":"cfg(feature = \"async-std-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13320,"byte_end":13354,"line_start":398,"line_end":398,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":68166,"byte_end":68190,"line_start":16,"line_end":16,"column_start":12,"column_end":36},"name":"TcpStreamAsyncStdWrapped","qualname":"::aio_async_std::TcpStreamAsyncStdWrapped","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps the async_std TcpStream in order to implement the required Traits for it\n","sig":null,"attributes":[{"value":"/ Wraps the async_std TcpStream in order to implement the required Traits for it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":68072,"byte_end":68154,"line_start":15,"line_end":15,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":71799,"byte_end":71807,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"AsyncStd","qualname":"::aio_async_std::AsyncStd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents an AsyncStd connectable\n","sig":null,"attributes":[{"value":"/ Represents an AsyncStd connectable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":71749,"byte_end":71787,"line_start":132,"line_end":132,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geo","qualname":"::geo","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":371},{"krate":0,"index":1332},{"krate":0,"index":1342},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":385},{"krate":0,"index":392},{"krate":0,"index":1345},{"krate":0,"index":1352},{"krate":0,"index":394},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":413}],"decl_id":null,"docs":" Defines types to use with the geospatial commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13437,"byte_end":13467,"line_start":402,"line_end":402,"column_start":1,"column_end":31}},{"value":"/ Defines types to use with the geospatial commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73042,"byte_end":73096,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73655,"byte_end":73661,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Meters","qualname":"::geo::Unit::Meters","value":"Unit::Meters","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Represents meters.\n","sig":null,"attributes":[{"value":"/ Represents meters.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73628,"byte_end":73650,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73698,"byte_end":73708,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"Kilometers","qualname":"::geo::Unit::Kilometers","value":"Unit::Kilometers","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Represents kilometers.\n","sig":null,"attributes":[{"value":"/ Represents kilometers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73667,"byte_end":73693,"line_start":23,"line_end":23,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73740,"byte_end":73745,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Miles","qualname":"::geo::Unit::Miles","value":"Unit::Miles","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Represents miles.\n","sig":null,"attributes":[{"value":"/ Represents miles.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73714,"byte_end":73735,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73776,"byte_end":73780,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Feet","qualname":"::geo::Unit::Feet","value":"Unit::Feet","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Represents feed.\n","sig":null,"attributes":[{"value":"/ Represents feed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73751,"byte_end":73771,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73617,"byte_end":73621,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Unit","qualname":"::geo::Unit","value":"pub enum Unit {\n\n    /// Represents meters.\n    Meters,\n\n    /// Represents kilometers.\n    Kilometers,\n\n    /// Represents miles.\n    Miles,\n\n    /// Represents feed.\n    Feet,\n}","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369}],"decl_id":null,"docs":" Units used by [`geo_dist`][1] and [`geo_radius`][2].","sig":null,"attributes":[{"value":"/ Units used by [`geo_dist`][1] and [`geo_radius`][2].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73449,"byte_end":73505,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73506,"byte_end":73509,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_dist","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73510,"byte_end":73557,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73558,"byte_end":73607,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74531,"byte_end":74536,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"Coord","qualname":"::geo::Coord","value":"Coord { longitude, latitude }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"decl_id":null,"docs":" A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]\n to parse response from Redis.","sig":null,"attributes":[{"value":"/ A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74137,"byte_end":74208,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ to parse response from Redis.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74209,"byte_end":74242,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74243,"byte_end":74246,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_pos","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74247,"byte_end":74293,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74294,"byte_end":74297,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `T` is the type of the every value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74298,"byte_end":74337,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74338,"byte_end":74341,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * You may want to use either `f64` or `f32` if you want to perform mathematical operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74342,"byte_end":74437,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ * To keep the raw value from Redis, use `String`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74438,"byte_end":74491,"line_start":54,"line_end":54,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74568,"byte_end":74577,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"longitude","qualname":"::geo::Coord::longitude","value":"T","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Longitude\n","sig":null,"attributes":[{"value":"/ Longitude","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74546,"byte_end":74559,"line_start":57,"line_end":57,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74607,"byte_end":74615,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"latitude","qualname":"::geo::Coord::latitude","value":"T","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Latitude\n","sig":null,"attributes":[{"value":"/ Latitude","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74586,"byte_end":74598,"line_start":59,"line_end":59,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74711,"byte_end":74718,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"lon_lat","qualname":"<Coord<T>>::lon_lat","value":"pub fn lon_lat(T, T) -> Coord<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Coord with the (longitude, latitude)\n","sig":null,"attributes":[{"value":"/ Create a new Coord with the (longitude, latitude)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74646,"byte_end":74699,"line_start":64,"line_end":64,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75972,"byte_end":75980,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"Unsorted","qualname":"::geo::RadiusOrder::Unsorted","value":"RadiusOrder::Unsorted","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Don't sort the results\n","sig":null,"attributes":[{"value":"/ Don't sort the results","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75941,"byte_end":75967,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76073,"byte_end":76076,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"Asc","qualname":"::geo::RadiusOrder::Asc","value":"RadiusOrder::Asc","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Sort returned items from the nearest to the farthest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the nearest to the farthest, relative to the center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75987,"byte_end":76068,"line_start":110,"line_end":110,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76169,"byte_end":76173,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Desc","qualname":"::geo::RadiusOrder::Desc","value":"RadiusOrder::Desc","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Sort returned items from the farthest to the nearest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the farthest to the nearest, relative to the center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76083,"byte_end":76164,"line_start":113,"line_end":113,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75923,"byte_end":75934,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"name":"RadiusOrder","qualname":"::geo::RadiusOrder","value":"pub enum RadiusOrder {\n\n    /// Don't sort the results\n    Unsorted,\n\n    /// Sort returned items from the nearest to the farthest, relative to the center.\n    Asc,\n\n    /// Sort returned items from the farthest to the nearest, relative to the center.\n    Desc,\n}","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390}],"decl_id":null,"docs":" Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75728,"byte_end":75811,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75812,"byte_end":75815,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75816,"byte_end":75860,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75861,"byte_end":75913,"line_start":105,"line_end":105,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77061,"byte_end":77074,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"RadiusOptions","qualname":"::geo::RadiusOptions","value":"RadiusOptions {  }","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351}],"decl_id":null,"docs":" Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76282,"byte_end":76352,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76353,"byte_end":76356,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76357,"byte_end":76401,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76402,"byte_end":76454,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76455,"byte_end":76458,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76459,"byte_end":76472,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76473,"byte_end":76476,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76477,"byte_end":76495,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ use redis::{Commands, RedisResult};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76496,"byte_end":76535,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ use redis::geo::{RadiusSearchResult, RadiusOptions, RadiusOrder, Unit};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76536,"byte_end":76611,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ fn nearest_in_radius(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76612,"byte_end":76637,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/     con: &mut redis::Connection,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76638,"byte_end":76674,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/     key: &str,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76675,"byte_end":76693,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/     longitude: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76694,"byte_end":76717,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/     latitude: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76718,"byte_end":76740,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/     meters: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76741,"byte_end":76761,"line_start":138,"line_end":138,"column_start":1,"column_end":21}},{"value":"/     limit: usize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76762,"byte_end":76783,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ ) -> RedisResult<Vec<RadiusSearchResult>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76784,"byte_end":76831,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     let opts = RadiusOptions::default()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76832,"byte_end":76875,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/         .order(RadiusOrder::Asc)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76876,"byte_end":76912,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/         .limit(limit);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76913,"byte_end":76939,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/     con.geo_radius(key, longitude, latitude, meters, Unit::Meters, opts)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76940,"byte_end":77016,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77017,"byte_end":77022,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77023,"byte_end":77030,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77333,"byte_end":77338,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"limit","qualname":"<RadiusOptions>::limit","value":"pub fn limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the results to the first N matching items.\n","sig":null,"attributes":[{"value":"/ Limit the results to the first N matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77269,"byte_end":77321,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77626,"byte_end":77635,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"with_dist","qualname":"<RadiusOptions>::with_dist","value":"pub fn with_dist(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance of the returned items from the specified center.\n The distance is returned in the same unit as the unit specified as the\n radius argument of the command.\n","sig":null,"attributes":[{"value":"/ Return the distance of the returned items from the specified center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77423,"byte_end":77495,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ The distance is returned in the same unit as the unit specified as the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77500,"byte_end":77574,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ radius argument of the command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77579,"byte_end":77614,"line_start":166,"line_end":166,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77794,"byte_end":77804,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"with_coord","qualname":"<RadiusOptions>::with_coord","value":"pub fn with_coord(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the `longitude, latitude` coordinates of the matching items.\n","sig":null,"attributes":[{"value":"/ Return the `longitude, latitude` coordinates of the matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77711,"byte_end":77782,"line_start":172,"line_end":172,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77920,"byte_end":77925,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"order","qualname":"<RadiusOptions>::order","value":"pub fn order(Self, RadiusOrder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sort the returned items\n","sig":null,"attributes":[{"value":"/ Sort the returned items","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77881,"byte_end":77908,"line_start":178,"line_end":178,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78165,"byte_end":78170,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"store","qualname":"<RadiusOptions>::store","value":"pub fn store<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, instead of returning them.","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, instead of returning them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78010,"byte_end":78084,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78089,"byte_end":78092,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78097,"byte_end":78153,"line_start":186,"line_end":186,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78468,"byte_end":78478,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"store_dist","qualname":"<RadiusOptions>::store_dist","value":"pub fn store_dist<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, with the distance from the\n center as its score. This feature can't be used with any `with_*` method.\n","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, with the distance from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78300,"byte_end":78374,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ center as its score. This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78379,"byte_end":78456,"line_start":193,"line_end":193,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79831,"byte_end":79849,"line_start":248,"line_end":248,"column_start":12,"column_end":30},"name":"RadiusSearchResult","qualname":"::geo::RadiusSearchResult","value":"RadiusSearchResult { name, coord, dist }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","sig":null,"attributes":[{"value":"/ Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79623,"byte_end":79705,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79706,"byte_end":79709,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79710,"byte_end":79759,"line_start":246,"line_end":246,"column_start":1,"column_end":50}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius_by_member","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79760,"byte_end":79819,"line_start":247,"line_end":247,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79893,"byte_end":79897,"line_start":250,"line_end":250,"column_start":9,"column_end":13},"name":"name","qualname":"::geo::RadiusSearchResult::name","value":"std::string::String","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The name that was found.\n","sig":null,"attributes":[{"value":"/ The name that was found.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79856,"byte_end":79884,"line_start":249,"line_end":249,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79952,"byte_end":79957,"line_start":252,"line_end":252,"column_start":9,"column_end":14},"name":"coord","qualname":"::geo::RadiusSearchResult::coord","value":"std::option::Option<geo::Coord<f64>>","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The coordinate if available.\n","sig":null,"attributes":[{"value":"/ The coordinate if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79911,"byte_end":79943,"line_start":251,"line_end":251,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":80022,"byte_end":80026,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"dist","qualname":"::geo::RadiusSearchResult::dist","value":"std::option::Option<f64>","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The distance if available.\n","sig":null,"attributes":[{"value":"/ The distance if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":79983,"byte_end":80013,"line_start":253,"line_end":253,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streams","qualname":"::streams","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":1354},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1364},{"krate":0,"index":1362},{"krate":0,"index":1361},{"krate":0,"index":427},{"krate":0,"index":1373},{"krate":0,"index":1381},{"krate":0,"index":1379},{"krate":0,"index":430},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":1383},{"krate":0,"index":1390},{"krate":0,"index":1388},{"krate":0,"index":440},{"krate":0,"index":448},{"krate":0,"index":1392},{"krate":0,"index":1398},{"krate":0,"index":1396},{"krate":0,"index":1394},{"krate":0,"index":1400},{"krate":0,"index":1406},{"krate":0,"index":1404},{"krate":0,"index":1402},{"krate":0,"index":1408},{"krate":0,"index":1414},{"krate":0,"index":1412},{"krate":0,"index":1410},{"krate":0,"index":1416},{"krate":0,"index":1424},{"krate":0,"index":1422},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":1426},{"krate":0,"index":1435},{"krate":0,"index":1433},{"krate":0,"index":1431},{"krate":0,"index":1437},{"krate":0,"index":1443},{"krate":0,"index":1441},{"krate":0,"index":1439},{"krate":0,"index":1445},{"krate":0,"index":1456},{"krate":0,"index":1454},{"krate":0,"index":1452},{"krate":0,"index":1458},{"krate":0,"index":1464},{"krate":0,"index":1462},{"krate":0,"index":1460},{"krate":0,"index":1466},{"krate":0,"index":1472},{"krate":0,"index":1470},{"krate":0,"index":1468},{"krate":0,"index":1474},{"krate":0,"index":1482},{"krate":0,"index":1480},{"krate":0,"index":1478},{"krate":0,"index":1484},{"krate":0,"index":1493},{"krate":0,"index":1491},{"krate":0,"index":1489},{"krate":0,"index":1495},{"krate":0,"index":1504},{"krate":0,"index":1502},{"krate":0,"index":1500},{"krate":0,"index":1506},{"krate":0,"index":1513},{"krate":0,"index":1511},{"krate":0,"index":1509},{"krate":0,"index":1515},{"krate":0,"index":1522},{"krate":0,"index":1520},{"krate":0,"index":1518},{"krate":0,"index":455},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488}],"decl_id":null,"docs":" Defines types to use with the streams commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13717,"byte_end":13744,"line_start":414,"line_end":414,"column_start":1,"column_end":28}},{"value":"/ Defines types to use with the streams commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83252,"byte_end":83303,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83721,"byte_end":83727,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Equals","qualname":"::streams::StreamMaxlen::Equals","value":"StreamMaxlen::Equals(usize)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" Match an exact count\n","sig":null,"attributes":[{"value":"/ Match an exact count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83692,"byte_end":83716,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83775,"byte_end":83781,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Approx","qualname":"::streams::StreamMaxlen::Approx","value":"StreamMaxlen::Approx(usize)","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":" Match an approximate count\n","sig":null,"attributes":[{"value":"/ Match an approximate count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83740,"byte_end":83770,"line_start":17,"line_end":17,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83673,"byte_end":83685,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"StreamMaxlen","qualname":"::streams::StreamMaxlen","value":"pub enum StreamMaxlen {\n\n    /// Match an exact count\n    Equals(usize),\n\n    /// Match an approximate count\n    Approx(usize),\n}","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1358}],"decl_id":null,"docs":" Utility enum for passing `MAXLEN [= or ~] [COUNT]`\n arguments into `StreamCommands`.\n The enum value represents the count.\n","sig":null,"attributes":[{"value":"/ Utility enum for passing `MAXLEN [= or ~] [COUNT]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83486,"byte_end":83540,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/ arguments into `StreamCommands`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83541,"byte_end":83577,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ The enum value represents the count.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83578,"byte_end":83618,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84353,"byte_end":84371,"line_start":41,"line_end":41,"column_start":12,"column_end":30},"name":"StreamClaimOptions","qualname":"::streams::StreamClaimOptions","value":"StreamClaimOptions {  }","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"decl_id":null,"docs":" Builder options for [`xclaim_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xclaim_options`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84187,"byte_end":84238,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84239,"byte_end":84242,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`xclaim_options`]: ../trait.Commands.html#method.xclaim_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84243,"byte_end":84311,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84312,"byte_end":84315,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84801,"byte_end":84805,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"idle","qualname":"<StreamClaimOptions>::idle","value":"pub fn idle(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set IDLE <milliseconds> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set IDLE <milliseconds> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84753,"byte_end":84789,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84933,"byte_end":84937,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"time","qualname":"<StreamClaimOptions>::time","value":"pub fn time(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set TIME <mstime> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set TIME <mstime> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84891,"byte_end":84921,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85080,"byte_end":85085,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"retry","qualname":"<StreamClaimOptions>::retry","value":"pub fn retry(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set RETRYCOUNT <count> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set RETRYCOUNT <count> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85033,"byte_end":85068,"line_start":68,"line_end":68,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85220,"byte_end":85230,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"with_force","qualname":"<StreamClaimOptions>::with_force","value":"pub fn with_force(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set FORCE cmd arg to true.\n","sig":null,"attributes":[{"value":"/ Set FORCE cmd arg to true.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85178,"byte_end":85208,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85409,"byte_end":85420,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"with_justid","qualname":"<StreamClaimOptions>::with_justid","value":"pub fn with_justid(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set JUSTID cmd arg to true. Be advised: the response\n type changes with this option.\n","sig":null,"attributes":[{"value":"/ Set JUSTID cmd arg to true. Be advised: the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85302,"byte_end":85358,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/ type changes with this option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85363,"byte_end":85397,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86619,"byte_end":86636,"line_start":123,"line_end":123,"column_start":12,"column_end":29},"name":"StreamReadOptions","qualname":"::streams::StreamReadOptions","value":"StreamReadOptions {  }","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387}],"decl_id":null,"docs":" Builder options for [`xread_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xread_options`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86456,"byte_end":86506,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86507,"byte_end":86510,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86511,"byte_end":86577,"line_start":120,"line_end":120,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86578,"byte_end":86581,"line_start":121,"line_end":121,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87109,"byte_end":87118,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"read_only","qualname":"<StreamReadOptions>::read_only","value":"pub fn read_only(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the command is participating in a group\n and generating ACKs\n","sig":null,"attributes":[{"value":"/ Indicates whether the command is participating in a group","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87008,"byte_end":87069,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ and generating ACKs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87074,"byte_end":87097,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87367,"byte_end":87372,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"noack","qualname":"<StreamReadOptions>::noack","value":"pub fn noack(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the command so that it avoids adding the message\n to the PEL in cases where reliability is not a requirement\n and the occasional message loss is acceptable.\n","sig":null,"attributes":[{"value":"/ Sets the command so that it avoids adding the message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87176,"byte_end":87233,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ to the PEL in cases where reliability is not a requirement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87238,"byte_end":87300,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ and the occasional message loss is acceptable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87305,"byte_end":87355,"line_start":144,"line_end":144,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87502,"byte_end":87507,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"block","qualname":"<StreamReadOptions>::block","value":"pub fn block(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the block time in milliseconds.\n","sig":null,"attributes":[{"value":"/ Sets the block time in milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87450,"byte_end":87490,"line_start":150,"line_end":150,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87667,"byte_end":87672,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamReadOptions>::count","value":"pub fn count(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of elements to return per stream.\n","sig":null,"attributes":[{"value":"/ Sets the maximum number of elements to return per stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87594,"byte_end":87655,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87832,"byte_end":87837,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"group","qualname":"<StreamReadOptions>::group","value":"pub fn group<GN: ToRedisArgs, CN: ToRedisArgs>(Self, GN, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of a consumer group associated to the stream.\n","sig":null,"attributes":[{"value":"/ Sets the name of a consumer group associated to the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":87757,"byte_end":87820,"line_start":162,"line_end":162,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89211,"byte_end":89226,"line_start":214,"line_end":214,"column_start":12,"column_end":27},"name":"StreamReadReply","qualname":"::streams::StreamReadReply","value":"StreamReadReply { keys }","parent":null,"children":[{"krate":0,"index":1393}],"decl_id":null,"docs":" Reply type used with [`xread`] or [`xread_options`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xread`] or [`xread_options`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":88975,"byte_end":89040,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89041,"byte_end":89044,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`xread`]: ../trait.Commands.html#method.xread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89045,"byte_end":89095,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89096,"byte_end":89162,"line_start":211,"line_end":211,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89163,"byte_end":89166,"line_start":212,"line_end":212,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89316,"byte_end":89320,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"keys","qualname":"::streams::StreamReadReply::keys","value":"std::vec::Vec<streams::StreamKey>","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each key in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each key in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89233,"byte_end":89307,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89972,"byte_end":89988,"line_start":231,"line_end":231,"column_start":12,"column_end":28},"name":"StreamRangeReply","qualname":"::streams::StreamRangeReply","value":"StreamRangeReply { ids }","parent":null,"children":[{"krate":0,"index":1401}],"decl_id":null,"docs":" Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89341,"byte_end":89475,"line_start":219,"line_end":219,"column_start":1,"column_end":135}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89476,"byte_end":89479,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Represents stream entries matching a given range of `id`'s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89480,"byte_end":89543,"line_start":221,"line_end":221,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89544,"byte_end":89547,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`xrange`]: ../trait.Commands.html#method.xrange","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89548,"byte_end":89600,"line_start":223,"line_end":223,"column_start":1,"column_end":53}},{"value":"/ [`xrange_count`]: ../trait.Commands.html#method.xrange_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89601,"byte_end":89665,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/ [`xrange_all`]: ../trait.Commands.html#method.xrange_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89666,"byte_end":89726,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/ [`xrevrange`]: ../trait.Commands.html#method.xrevrange","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89727,"byte_end":89785,"line_start":226,"line_end":226,"column_start":1,"column_end":59}},{"value":"/ [`xrevrange_count`]: ../trait.Commands.html#method.xrevrange_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89786,"byte_end":89856,"line_start":227,"line_end":227,"column_start":1,"column_end":71}},{"value":"/ [`xrevrange_all`]: ../trait.Commands.html#method.xrevrange_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89857,"byte_end":89923,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89924,"byte_end":89927,"line_start":229,"line_end":229,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90077,"byte_end":90080,"line_start":233,"line_end":233,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamRangeReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":89995,"byte_end":90068,"line_start":232,"line_end":232,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90323,"byte_end":90339,"line_start":243,"line_end":243,"column_start":12,"column_end":28},"name":"StreamClaimReply","qualname":"::streams::StreamClaimReply","value":"StreamClaimReply { ids }","parent":null,"children":[{"krate":0,"index":1409}],"decl_id":null,"docs":" Reply type used with [`xclaim`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xclaim`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90100,"byte_end":90144,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90145,"byte_end":90148,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Represents that ownership of the specified messages was changed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90149,"byte_end":90217,"line_start":238,"line_end":238,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90218,"byte_end":90221,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`xclaim`]: ../trait.Commands.html#method.xclaim","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90222,"byte_end":90274,"line_start":240,"line_end":240,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90275,"byte_end":90278,"line_start":241,"line_end":241,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90428,"byte_end":90431,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamClaimReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90346,"byte_end":90419,"line_start":244,"line_end":244,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90744,"byte_end":90749,"line_start":258,"line_end":258,"column_start":5,"column_end":10},"name":"Empty","qualname":"::streams::StreamPendingReply::Empty","value":"StreamPendingReply::Empty","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" The stream is empty.\n","sig":null,"attributes":[{"value":"/ The stream is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90715,"byte_end":90739,"line_start":257,"line_end":257,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90803,"byte_end":90807,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"Data","qualname":"::streams::StreamPendingReply::Data","value":"StreamPendingReply::Data(StreamPendingData)","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" Data with payload exists in the stream.\n","sig":null,"attributes":[{"value":"/ Data with payload exists in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90755,"byte_end":90798,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90690,"byte_end":90708,"line_start":256,"line_end":256,"column_start":10,"column_end":28},"name":"StreamPendingReply","qualname":"::streams::StreamPendingReply","value":"pub enum StreamPendingReply {\n\n    /// The stream is empty.\n    Empty,\n\n    /// Data with payload exists in the stream.\n    Data(StreamPendingData),\n}","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1419}],"decl_id":null,"docs":" Reply type used with [`xpending`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90451,"byte_end":90497,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90498,"byte_end":90501,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Data returned here were fetched from the stream without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90502,"byte_end":90561,"line_start":250,"line_end":250,"column_start":1,"column_end":60}},{"value":"/ having been acknowledged.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90562,"byte_end":90591,"line_start":251,"line_end":251,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90592,"byte_end":90595,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90596,"byte_end":90652,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90653,"byte_end":90656,"line_start":254,"line_end":254,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91041,"byte_end":91046,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamPendingReply>::count","value":"pub fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many records are in the reply.\n","sig":null,"attributes":[{"value":"/ Returns how many records are in the reply.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90983,"byte_end":91029,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91366,"byte_end":91383,"line_start":283,"line_end":283,"column_start":12,"column_end":29},"name":"StreamPendingData","qualname":"::streams::StreamPendingData","value":"StreamPendingData { count, start_id, end_id, consumers }","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"decl_id":null,"docs":" Inner reply type when an [`xpending`] command has data.","sig":null,"attributes":[{"value":"/ Inner reply type when an [`xpending`] command has data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91201,"byte_end":91260,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91261,"byte_end":91264,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91265,"byte_end":91321,"line_start":281,"line_end":281,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91454,"byte_end":91459,"line_start":285,"line_end":285,"column_start":9,"column_end":14},"name":"count","qualname":"::streams::StreamPendingData::count","value":"usize","parent":{"krate":0,"index":1426},"children":[],"decl_id":null,"docs":" Limit on the number of messages to return per call.\n","sig":null,"attributes":[{"value":"/ Limit on the number of messages to return per call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91390,"byte_end":91445,"line_start":284,"line_end":284,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91517,"byte_end":91525,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"name":"start_id","qualname":"::streams::StreamPendingData::start_id","value":"std::string::String","parent":{"krate":0,"index":1426},"children":[],"decl_id":null,"docs":" ID for the first pending record.\n","sig":null,"attributes":[{"value":"/ ID for the first pending record.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91472,"byte_end":91508,"line_start":286,"line_end":286,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91584,"byte_end":91590,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"name":"end_id","qualname":"::streams::StreamPendingData::end_id","value":"std::string::String","parent":{"krate":0,"index":1426},"children":[],"decl_id":null,"docs":" ID for the final pending record.\n","sig":null,"attributes":[{"value":"/ ID for the final pending record.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91539,"byte_end":91575,"line_start":288,"line_end":288,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91747,"byte_end":91756,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamPendingData::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1426},"children":[],"decl_id":null,"docs":" Every consumer in the consumer group with at\n least one pending message,\n and the number of pending messages it has.\n","sig":null,"attributes":[{"value":"/ Every consumer in the consumer group with at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91604,"byte_end":91652,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ least one pending message,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91657,"byte_end":91687,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ and the number of pending messages it has.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91692,"byte_end":91738,"line_start":292,"line_end":292,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92178,"byte_end":92201,"line_start":306,"line_end":306,"column_start":12,"column_end":35},"name":"StreamPendingCountReply","qualname":"::streams::StreamPendingCountReply","value":"StreamPendingCountReply { ids }","parent":null,"children":[{"krate":0,"index":1438}],"decl_id":null,"docs":" Reply type used with [`xpending_count`] and\n [`xpending_consumer_count`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending_count`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91786,"byte_end":91833,"line_start":296,"line_end":296,"column_start":1,"column_end":48}},{"value":"/ [`xpending_consumer_count`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91834,"byte_end":91875,"line_start":297,"line_end":297,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91876,"byte_end":91879,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Data returned here have been fetched from the stream without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91880,"byte_end":91944,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ any acknowledgement.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91945,"byte_end":91969,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91970,"byte_end":91973,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [`xpending_count`]: ../trait.Commands.html#method.xpending_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":91974,"byte_end":92042,"line_start":302,"line_end":302,"column_start":1,"column_end":69}},{"value":"/ [`xpending_consumer_count`]: ../trait.Commands.html#method.xpending_consumer_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92043,"byte_end":92129,"line_start":303,"line_end":303,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92130,"byte_end":92133,"line_start":304,"line_end":304,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92406,"byte_end":92409,"line_start":310,"line_end":310,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamPendingCountReply::ids","value":"std::vec::Vec<streams::StreamPendingId>","parent":{"krate":0,"index":1437},"children":[],"decl_id":null,"docs":" An array of structs containing information about\n message IDs yet to be acknowledged by various consumers,\n time since last ack, and total number of acks by that consumer.\n","sig":null,"attributes":[{"value":"/ An array of structs containing information about","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92208,"byte_end":92260,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ message IDs yet to be acknowledged by various consumers,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92265,"byte_end":92325,"line_start":308,"line_end":308,"column_start":5,"column_end":65}},{"value":"/ time since last ack, and total number of acks by that consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92330,"byte_end":92397,"line_start":309,"line_end":309,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92812,"byte_end":92833,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"StreamInfoStreamReply","qualname":"::streams::StreamInfoStreamReply","value":"StreamInfoStreamReply { last_generated_id, radix_tree_keys, groups, length, first_entry, last_entry }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451}],"decl_id":null,"docs":" Reply type used with [`xinfo_stream`] command, containing\n general information about the stream stored at the specified key.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_stream`] command, containing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92436,"byte_end":92497,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/ general information about the stream stored at the specified key.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92498,"byte_end":92567,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92568,"byte_end":92571,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The very first and last IDs in the stream are shown,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92572,"byte_end":92628,"line_start":316,"line_end":316,"column_start":1,"column_end":57}},{"value":"/ in order to give some sense about what is the stream content.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92629,"byte_end":92694,"line_start":317,"line_end":317,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92695,"byte_end":92698,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_stream`]: ../trait.Commands.html#method.xinfo_stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92699,"byte_end":92763,"line_start":319,"line_end":319,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92764,"byte_end":92767,"line_start":320,"line_end":320,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92960,"byte_end":92977,"line_start":325,"line_end":325,"column_start":9,"column_end":26},"name":"last_generated_id","qualname":"::streams::StreamInfoStreamReply::last_generated_id","value":"std::string::String","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" The last generated ID that may not be the same as the last\n entry ID in case some entry was deleted.\n","sig":null,"attributes":[{"value":"/ The last generated ID that may not be the same as the last","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92840,"byte_end":92902,"line_start":323,"line_end":323,"column_start":5,"column_end":67}},{"value":"/ entry ID in case some entry was deleted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92907,"byte_end":92951,"line_start":324,"line_end":324,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93116,"byte_end":93131,"line_start":328,"line_end":328,"column_start":9,"column_end":24},"name":"radix_tree_keys","qualname":"::streams::StreamInfoStreamReply::radix_tree_keys","value":"usize","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" Details about the radix tree representing the stream mostly\n useful for optimization and debugging tasks.\n","sig":null,"attributes":[{"value":"/ Details about the radix tree representing the stream mostly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":92991,"byte_end":93054,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ useful for optimization and debugging tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93059,"byte_end":93107,"line_start":327,"line_end":327,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93214,"byte_end":93220,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoStreamReply::groups","value":"usize","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" The number of consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ The number of consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93144,"byte_end":93205,"line_start":329,"line_end":329,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93279,"byte_end":93285,"line_start":332,"line_end":332,"column_start":9,"column_end":15},"name":"length","qualname":"::streams::StreamInfoStreamReply::length","value":"usize","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" Number of elements of the stream.\n","sig":null,"attributes":[{"value":"/ Number of elements of the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93233,"byte_end":93270,"line_start":331,"line_end":331,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93346,"byte_end":93357,"line_start":334,"line_end":334,"column_start":9,"column_end":20},"name":"first_entry","qualname":"::streams::StreamInfoStreamReply::first_entry","value":"streams::StreamId","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" The very first entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very first entry in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93298,"byte_end":93337,"line_start":333,"line_end":333,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93420,"byte_end":93430,"line_start":336,"line_end":336,"column_start":9,"column_end":19},"name":"last_entry","qualname":"::streams::StreamInfoStreamReply::last_entry","value":"streams::StreamId","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" The very last entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very last entry in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93373,"byte_end":93411,"line_start":335,"line_end":335,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93680,"byte_end":93704,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"StreamInfoConsumersReply","qualname":"::streams::StreamInfoConsumersReply","value":"StreamInfoConsumersReply { consumers }","parent":null,"children":[{"krate":0,"index":1459}],"decl_id":null,"docs":" Reply type used with [`xinfo_consumer`] command, an array of every\n consumer in a specific consumer group.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_consumer`] command, an array of every","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93445,"byte_end":93515,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93516,"byte_end":93558,"line_start":340,"line_end":340,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93559,"byte_end":93562,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumer`]: ../trait.Commands.html#method.xinfo_consumer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93563,"byte_end":93631,"line_start":342,"line_end":342,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93632,"byte_end":93635,"line_start":343,"line_end":343,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93780,"byte_end":93789,"line_start":347,"line_end":347,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoConsumersReply::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1458},"children":[],"decl_id":null,"docs":" An array of every consumer in a specific consumer group.\n","sig":null,"attributes":[{"value":"/ An array of every consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93711,"byte_end":93771,"line_start":346,"line_end":346,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94074,"byte_end":94095,"line_start":358,"line_end":358,"column_start":12,"column_end":33},"name":"StreamInfoGroupsReply","qualname":"::streams::StreamInfoGroupsReply","value":"StreamInfoGroupsReply { groups }","parent":null,"children":[{"krate":0,"index":1467}],"decl_id":null,"docs":" Reply type used with [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93819,"byte_end":93869,"line_start":350,"line_end":350,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93870,"byte_end":93873,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ This output represents all the consumer groups associated with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93874,"byte_end":93940,"line_start":352,"line_end":352,"column_start":1,"column_end":67}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93941,"byte_end":93956,"line_start":353,"line_end":353,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93957,"byte_end":93960,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":93961,"byte_end":94025,"line_start":355,"line_end":355,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94026,"byte_end":94029,"line_start":356,"line_end":356,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94166,"byte_end":94172,"line_start":360,"line_end":360,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoGroupsReply::groups","value":"std::vec::Vec<streams::StreamInfoGroup>","parent":{"krate":0,"index":1466},"children":[],"decl_id":null,"docs":" All the consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ All the consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94102,"byte_end":94157,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94378,"byte_end":94396,"line_start":368,"line_end":368,"column_start":12,"column_end":30},"name":"StreamInfoConsumer","qualname":"::streams::StreamInfoConsumer","value":"StreamInfoConsumer { name, pending, idle }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"decl_id":null,"docs":" A consumer parsed from [`xinfo_consumers`] command.","sig":null,"attributes":[{"value":"/ A consumer parsed from [`xinfo_consumers`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94199,"byte_end":94254,"line_start":363,"line_end":363,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94255,"byte_end":94258,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumers`]: ../trait.Commands.html#method.xinfo_consumers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94259,"byte_end":94329,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94330,"byte_end":94333,"line_start":366,"line_end":366,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94443,"byte_end":94447,"line_start":370,"line_end":370,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoConsumer::name","value":"std::string::String","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Name of the consumer group.\n","sig":null,"attributes":[{"value":"/ Name of the consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94403,"byte_end":94434,"line_start":369,"line_end":369,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94528,"byte_end":94535,"line_start":372,"line_end":372,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoConsumer::pending","value":"usize","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Number of pending messages for this specific consumer.\n","sig":null,"attributes":[{"value":"/ Number of pending messages for this specific consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94461,"byte_end":94519,"line_start":371,"line_end":371,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94603,"byte_end":94607,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"name":"idle","qualname":"::streams::StreamInfoConsumer::idle","value":"usize","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" This consumer's idle time in milliseconds.\n","sig":null,"attributes":[{"value":"/ This consumer's idle time in milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94548,"byte_end":94594,"line_start":373,"line_end":373,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94786,"byte_end":94801,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"StreamInfoGroup","qualname":"::streams::StreamInfoGroup","value":"StreamInfoGroup { name, consumers, pending, last_delivered_id }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488}],"decl_id":null,"docs":" A group parsed from [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ A group parsed from [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94619,"byte_end":94668,"line_start":377,"line_end":377,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94669,"byte_end":94672,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94673,"byte_end":94737,"line_start":379,"line_end":379,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94738,"byte_end":94741,"line_start":380,"line_end":380,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94836,"byte_end":94840,"line_start":384,"line_end":384,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoGroup::name","value":"std::string::String","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" The group name.\n","sig":null,"attributes":[{"value":"/ The group name.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94808,"byte_end":94827,"line_start":383,"line_end":383,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94906,"byte_end":94915,"line_start":386,"line_end":386,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoGroup::consumers","value":"usize","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" Number of consumers known in the group.\n","sig":null,"attributes":[{"value":"/ Number of consumers known in the group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94854,"byte_end":94897,"line_start":385,"line_end":385,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95018,"byte_end":95025,"line_start":388,"line_end":388,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoGroup::pending","value":"usize","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" Number of pending messages (delivered but not yet acknowledged) in the group.\n","sig":null,"attributes":[{"value":"/ Number of pending messages (delivered but not yet acknowledged) in the group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":94928,"byte_end":95009,"line_start":387,"line_end":387,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95083,"byte_end":95100,"line_start":390,"line_end":390,"column_start":9,"column_end":26},"name":"last_delivered_id","qualname":"::streams::StreamInfoGroup::last_delivered_id","value":"std::string::String","parent":{"krate":0,"index":1484},"children":[],"decl_id":null,"docs":" Last ID delivered to this group.\n","sig":null,"attributes":[{"value":"/ Last ID delivered to this group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95038,"byte_end":95074,"line_start":389,"line_end":389,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95285,"byte_end":95300,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"StreamPendingId","qualname":"::streams::StreamPendingId","value":"StreamPendingId { id, consumer, last_delivered_ms, times_delivered }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"decl_id":null,"docs":" Represents a pending message parsed from [`xpending`] methods.","sig":null,"attributes":[{"value":"/ Represents a pending message parsed from [`xpending`] methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95113,"byte_end":95179,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95180,"byte_end":95183,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95184,"byte_end":95240,"line_start":395,"line_end":395,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95342,"byte_end":95344,"line_start":399,"line_end":399,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamPendingId::id","value":"std::string::String","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The ID of the message.\n","sig":null,"attributes":[{"value":"/ The ID of the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95307,"byte_end":95333,"line_start":398,"line_end":398,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95514,"byte_end":95522,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"name":"consumer","qualname":"::streams::StreamPendingId::consumer","value":"std::string::String","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The name of the consumer that fetched the message and has\n still to acknowledge it. We call it the current owner\n of the message.\n","sig":null,"attributes":[{"value":"/ The name of the consumer that fetched the message and has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95358,"byte_end":95419,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/ still to acknowledge it. We call it the current owner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95424,"byte_end":95481,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/ of the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95486,"byte_end":95505,"line_start":402,"line_end":402,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95661,"byte_end":95678,"line_start":406,"line_end":406,"column_start":9,"column_end":26},"name":"last_delivered_ms","qualname":"::streams::StreamPendingId::last_delivered_ms","value":"usize","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The number of milliseconds that elapsed since the\n last time this message was delivered to this consumer.\n","sig":null,"attributes":[{"value":"/ The number of milliseconds that elapsed since the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95536,"byte_end":95589,"line_start":404,"line_end":404,"column_start":5,"column_end":58}},{"value":"/ last time this message was delivered to this consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95594,"byte_end":95652,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95751,"byte_end":95766,"line_start":408,"line_end":408,"column_start":9,"column_end":24},"name":"times_delivered","qualname":"::streams::StreamPendingId::times_delivered","value":"usize","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The number of times this message was delivered.\n","sig":null,"attributes":[{"value":"/ The number of times this message was delivered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95691,"byte_end":95742,"line_start":407,"line_end":407,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95896,"byte_end":95905,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"StreamKey","qualname":"::streams::StreamKey","value":"StreamKey { key, ids }","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"decl_id":null,"docs":" Represents a stream `key` and its `id`'s parsed from `xread` methods.\n","sig":null,"attributes":[{"value":"/ Represents a stream `key` and its `id`'s parsed from `xread` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95778,"byte_end":95851,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95942,"byte_end":95945,"line_start":415,"line_end":415,"column_start":9,"column_end":12},"name":"key","qualname":"::streams::StreamKey::key","value":"std::string::String","parent":{"krate":0,"index":1506},"children":[],"decl_id":null,"docs":" The stream `key`.\n","sig":null,"attributes":[{"value":"/ The stream `key`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95912,"byte_end":95933,"line_start":414,"line_end":414,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95997,"byte_end":96000,"line_start":417,"line_end":417,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamKey::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1506},"children":[],"decl_id":null,"docs":" The parsed stream `id`'s.\n","sig":null,"attributes":[{"value":"/ The parsed stream `id`'s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":95959,"byte_end":95988,"line_start":416,"line_end":416,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96129,"byte_end":96137,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::streams::StreamId","value":"StreamId { id, map }","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"decl_id":null,"docs":" Represents a stream `id` and its field/values as a `HashMap`\n","sig":null,"attributes":[{"value":"/ Represents a stream `id` and its field/values as a `HashMap`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96020,"byte_end":96084,"line_start":420,"line_end":420,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96211,"byte_end":96213,"line_start":424,"line_end":424,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamId::id","value":"std::string::String","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":" The stream `id` (entry ID) of this particular message.\n","sig":null,"attributes":[{"value":"/ The stream `id` (entry ID) of this particular message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96144,"byte_end":96202,"line_start":423,"line_end":423,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96308,"byte_end":96311,"line_start":426,"line_end":426,"column_start":9,"column_end":12},"name":"map","qualname":"::streams::StreamId::map","value":"std::collections::HashMap<std::string::String, types::Value>","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":" All fields in this message, associated with their respective values.\n","sig":null,"attributes":[{"value":"/ All fields in this message, associated with their respective values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96227,"byte_end":96299,"line_start":425,"line_end":425,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96924,"byte_end":96927,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"get","qualname":"<StreamId>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches value of a given field and converts it to the specified\n type.\n","sig":null,"attributes":[{"value":"/ Fetches value of a given field and converts it to the specified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96831,"byte_end":96898,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96903,"byte_end":96912,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97175,"byte_end":97187,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamId>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the message contain a particular field?\n","sig":null,"attributes":[{"value":"/ Does the message contain a particular field?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97115,"byte_end":97163,"line_start":454,"line_end":454,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97338,"byte_end":97341,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamId>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many field/value pairs exist in this message.\n","sig":null,"attributes":[{"value":"/ Returns how many field/value pairs exist in this message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97265,"byte_end":97326,"line_start":459,"line_end":459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97473,"byte_end":97481,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamId>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no field/value pairs in this message.\n","sig":null,"attributes":[{"value":"/ Returns true if there are no field/value pairs in this message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97394,"byte_end":97461,"line_start":464,"line_end":464,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105183,"byte_end":105189,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1525}],"decl_id":null,"docs":" The client type.\n","sig":null,"attributes":[{"value":"/ The client type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105127,"byte_end":105147,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105992,"byte_end":105996,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"open","qualname":"<Client>::open","value":"pub fn open<T: IntoConnectionInfo>(T) -> RedisResult<Client>","parent":null,"children":[],"decl_id":null,"docs":" Connects to a redis server and returns a client.  This does not\n actually open a connection yet but it does perform some basic\n checks on the URL that might make the operation fail.\n","sig":null,"attributes":[{"value":"/ Connects to a redis server and returns a client.  This does not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105781,"byte_end":105848,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ actually open a connection yet but it does perform some basic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105853,"byte_end":105918,"line_start":29,"line_end":29,"column_start":5,"column_end":70}},{"value":"/ checks on the URL that might make the operation fail.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105923,"byte_end":105980,"line_start":30,"line_end":30,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106468,"byte_end":106482,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"get_connection","qualname":"<Client>::get_connection","value":"pub fn get_connection(&Self) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis and returns a\n connection object.  The connection object can be used to send\n commands to the server.  This can fail with a variety of errors\n (like unreachable host) so it's important that you handle those\n errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106159,"byte_end":106226,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ connection object.  The connection object can be used to send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106231,"byte_end":106296,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/ commands to the server.  This can fail with a variety of errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106301,"byte_end":106368,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ (like unreachable host) so it's important that you handle those","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106373,"byte_end":106440,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ errors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106445,"byte_end":106456,"line_start":41,"line_end":41,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106912,"byte_end":106939,"line_start":51,"line_end":51,"column_start":12,"column_end":39},"name":"get_connection_with_timeout","qualname":"<Client>::get_connection_with_timeout","value":"pub fn get_connection_with_timeout(&Self, Duration) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis with specified\n timeout and returns a connection object.  The connection object\n can be used to send commands to the server.  This can fail with\n a variety of errors (like unreachable host) so it's important\n that you handle those errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis with specified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106580,"byte_end":106648,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ timeout and returns a connection object.  The connection object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106653,"byte_end":106720,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ can be used to send commands to the server.  This can fail with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106725,"byte_end":106792,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ a variety of errors (like unreachable host) so it's important","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106797,"byte_end":106862,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/ that you handle those errors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":106867,"byte_end":106900,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":107159,"byte_end":107179,"line_start":57,"line_end":57,"column_start":18,"column_end":38},"name":"get_async_connection","qualname":"<Client>::get_async_connection","value":"pub async fn get_async_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":107065,"byte_end":107113,"line_start":55,"line_end":55,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":107118,"byte_end":107141,"line_start":56,"line_end":56,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108134,"byte_end":108160,"line_start":85,"line_end":85,"column_start":18,"column_end":44},"name":"get_tokio_connection_tokio","qualname":"<Client>::get_tokio_connection_tokio","value":"pub async fn get_tokio_connection_tokio<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108033,"byte_end":108081,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108086,"byte_end":108116,"line_start":84,"line_end":84,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108388,"byte_end":108412,"line_start":91,"line_end":91,"column_start":18,"column_end":42},"name":"get_async_std_connection","qualname":"<Client>::get_async_std_connection","value":"pub async fn get_async_std_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108283,"byte_end":108331,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"async-std-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":108336,"byte_end":108370,"line_start":90,"line_end":90,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110717,"byte_end":110753,"line_start":149,"line_end":149,"column_start":18,"column_end":54},"name":"get_multiplexed_async_std_connection","qualname":"<Client>::get_multiplexed_async_std_connection","value":"pub async fn get_multiplexed_async_std_connection<'_>(&'_ Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async multiplexed connection from the client.","sig":null,"attributes":[{"value":"/ Returns an async multiplexed connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110341,"byte_end":110401,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110406,"byte_end":110409,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ A multiplexed connection can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110414,"byte_end":110502,"line_start":144,"line_end":144,"column_start":5,"column_end":93}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110507,"byte_end":110563,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110568,"byte_end":110571,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This requires the `tokio-rt-core` feature as it uses the default tokio executor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110576,"byte_end":110660,"line_start":147,"line_end":147,"column_start":5,"column_end":89}},{"value":"cfg(feature = \"async-std-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110665,"byte_end":110699,"line_start":148,"line_end":148,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111388,"byte_end":111423,"line_start":163,"line_end":163,"column_start":18,"column_end":53},"name":"create_multiplexed_tokio_connection","qualname":"<Client>::create_multiplexed_tokio_connection","value":"pub async fn create_multiplexed_tokio_connection<'_>(&'_ Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async multiplexed connection from the client and a future which must be polled\n to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","sig":null,"attributes":[{"value":"/ Returns an async multiplexed connection from the client and a future which must be polled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":110992,"byte_end":111085,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111090,"byte_end":111173,"line_start":158,"line_end":158,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111178,"byte_end":111181,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ A multiplexed connection can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111186,"byte_end":111274,"line_start":160,"line_end":160,"column_start":5,"column_end":93}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111279,"byte_end":111335,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111340,"byte_end":111370,"line_start":162,"line_end":162,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":112055,"byte_end":112094,"line_start":178,"line_end":178,"column_start":18,"column_end":57},"name":"create_multiplexed_async_std_connection","qualname":"<Client>::create_multiplexed_async_std_connection","value":"pub async fn create_multiplexed_async_std_connection<'_>(&'_ Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async multiplexed connection from the client and a future which must be polled\n to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","sig":null,"attributes":[{"value":"/ Returns an async multiplexed connection from the client and a future which must be polled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111655,"byte_end":111748,"line_start":172,"line_end":172,"column_start":5,"column_end":98}},{"value":"/ to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111753,"byte_end":111836,"line_start":173,"line_end":173,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111841,"byte_end":111844,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ A multiplexed connection can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111849,"byte_end":111937,"line_start":175,"line_end":175,"column_start":5,"column_end":93}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":111942,"byte_end":111998,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"async-std-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":112003,"byte_end":112037,"line_start":177,"line_end":177,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114914,"byte_end":114920,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Simple","qualname":"::cmd::Arg::Simple","value":"Arg::Simple(D)","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" A normal argument\n","sig":null,"attributes":[{"value":"/ A normal argument","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114888,"byte_end":114909,"line_start":11,"line_end":11,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114983,"byte_end":114989,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Cursor","qualname":"::cmd::Arg::Cursor","value":"Arg::Cursor","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" A cursor argument created from `cursor_arg()`\n","sig":null,"attributes":[{"value":"/ A cursor argument created from `cursor_arg()`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114929,"byte_end":114978,"line_start":13,"line_end":13,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114875,"byte_end":114878,"line_start":10,"line_end":10,"column_start":10,"column_end":13},"name":"Arg","qualname":"::cmd::Arg","value":"pub enum Arg<D> {\n\n    /// A normal argument\n    Simple(D),\n\n    /// A cursor argument created from `cursor_arg()`\n    Cursor,\n}","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1535}],"decl_id":null,"docs":" An argument to a redis command\n","sig":null,"attributes":[{"value":"/ An argument to a redis command","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114814,"byte_end":114848,"line_start":8,"line_end":8,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115053,"byte_end":115056,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Cmd","qualname":"::cmd::Cmd","value":"Cmd {  }","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544}],"decl_id":null,"docs":" Represents redis commands.\n","sig":null,"attributes":[{"value":"/ Represents redis commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":114994,"byte_end":115024,"line_start":17,"line_end":17,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115298,"byte_end":115306,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Pipeline","qualname":"::cmd::Pipeline","value":"Pipeline {  }","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"decl_id":null,"docs":" Represents a redis command pipeline.\n","sig":null,"attributes":[{"value":"/ Represents a redis command pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115229,"byte_end":115269,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115408,"byte_end":115412,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Iter","qualname":"::cmd::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Represents a redis iterator.\n","sig":null,"attributes":[{"value":"/ Represents a redis iterator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115364,"byte_end":115396,"line_start":34,"line_end":34,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":116780,"byte_end":116789,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"AsyncIter","qualname":"::cmd::AsyncIter","value":"AsyncIter {  }","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" Represents a redis iterator that can be used with async connections.\n","sig":null,"attributes":[{"value":"/ Represents a redis iterator that can be used with async connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":116672,"byte_end":116744,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":116745,"byte_end":116768,"line_start":76,"line_end":76,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117597,"byte_end":117606,"line_start":100,"line_end":100,"column_start":18,"column_end":27},"name":"next_item","qualname":"<AsyncIter>::next_item","value":"pub async fn next_item<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" ```rust,no_run\n # use redis::AsyncCommands;\n # async fn scan_set() -> redis::RedisResult<()> {\n # let client = redis::Client::open(\"redis://127.0.0.1/\")?;\n # let mut con = client.get_async_connection().await?;\n con.sadd(\"my_set\", 42i32).await?;\n con.sadd(\"my_set\", 43i32).await?;\n let mut iter: redis::AsyncIter<i32> = con.sscan(\"my_set\").await?;\n while let Some(element) = iter.next_item().await {\n     assert!(element == 42 || element == 43);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117003,"byte_end":117021,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ # use redis::AsyncCommands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117026,"byte_end":117057,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/ # async fn scan_set() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117062,"byte_end":117115,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117120,"byte_end":117182,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ # let mut con = client.get_async_connection().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117187,"byte_end":117244,"line_start":89,"line_end":89,"column_start":5,"column_end":62}},{"value":"/ con.sadd(\"my_set\", 42i32).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117249,"byte_end":117286,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/ con.sadd(\"my_set\", 43i32).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117291,"byte_end":117328,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ let mut iter: redis::AsyncIter<i32> = con.sscan(\"my_set\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117333,"byte_end":117402,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/ while let Some(element) = iter.next_item().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117407,"byte_end":117461,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"/     assert!(element == 42 || element == 43);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117466,"byte_end":117514,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117519,"byte_end":117524,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117529,"byte_end":117541,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117546,"byte_end":117553,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117558,"byte_end":117565,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":117570,"byte_end":117579,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":122805,"byte_end":122808,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<Cmd>::new","value":"pub fn new() -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty command.\n","sig":null,"attributes":[{"value":"/ Creates a new empty command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":122761,"byte_end":122793,"line_start":291,"line_end":291,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123586,"byte_end":123589,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"arg","qualname":"<Cmd>::arg","value":"pub fn arg<T: ToRedisArgs>(&mut Self, T) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Appends an argument to the command.  The argument passed must\n be a type that implements `ToRedisArgs`.  Most primitive types as\n well as vectors of primitive types implement it.","sig":null,"attributes":[{"value":"/ Appends an argument to the command.  The argument passed must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":122964,"byte_end":123029,"line_start":301,"line_end":301,"column_start":5,"column_end":70}},{"value":"/ be a type that implements `ToRedisArgs`.  Most primitive types as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123034,"byte_end":123103,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ well as vectors of primitive types implement it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123108,"byte_end":123160,"line_start":303,"line_end":303,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123165,"byte_end":123168,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ For instance all of the following are valid:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123173,"byte_end":123221,"line_start":305,"line_end":305,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123226,"byte_end":123229,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123234,"byte_end":123252,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123257,"byte_end":123327,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123332,"byte_end":123385,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ redis::cmd(\"SET\").arg(&[\"my_key\", \"my_value\"]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123390,"byte_end":123441,"line_start":310,"line_end":310,"column_start":5,"column_end":56}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(42);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123446,"byte_end":123490,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(b\"my_value\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123495,"byte_end":123548,"line_start":312,"line_end":312,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123553,"byte_end":123560,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123565,"byte_end":123574,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124423,"byte_end":124433,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"cursor_arg","qualname":"<Cmd>::cursor_arg","value":"pub fn cursor_arg(&mut Self, u64) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Works similar to `arg` but adds a cursor argument.  This is always\n an integer and also flips the command implementation to support a\n different mode for the iterators where the iterator will ask for\n another batch of items when the local data is exhausted.","sig":null,"attributes":[{"value":"/ Works similar to `arg` but adds a cursor argument.  This is always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123699,"byte_end":123769,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ an integer and also flips the command implementation to support a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123774,"byte_end":123843,"line_start":321,"line_end":321,"column_start":5,"column_end":74}},{"value":"/ different mode for the iterators where the iterator will ask for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123848,"byte_end":123916,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/ another batch of items when the local data is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123921,"byte_end":123981,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123986,"byte_end":123989,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":123994,"byte_end":124012,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124017,"byte_end":124087,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124092,"byte_end":124145,"line_start":327,"line_end":327,"column_start":5,"column_end":58}},{"value":"/ let mut cmd = redis::cmd(\"SSCAN\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124150,"byte_end":124188,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/ let mut iter : redis::Iter<isize> =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124193,"byte_end":124232,"line_start":329,"line_end":329,"column_start":5,"column_end":44}},{"value":"/     cmd.arg(\"my_set\").cursor_arg(0).clone().iter(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124237,"byte_end":124309,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124314,"byte_end":124333,"line_start":331,"line_end":331,"column_start":5,"column_end":24}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124338,"byte_end":124375,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124380,"byte_end":124385,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124390,"byte_end":124397,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124402,"byte_end":124411,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124682,"byte_end":124700,"line_start":345,"line_end":345,"column_start":12,"column_end":30},"name":"get_packed_command","qualname":"<Cmd>::get_packed_command","value":"pub fn get_packed_command(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the packed command as a byte vector.\n","sig":null,"attributes":[{"value":"/ Returns the packed command as a byte vector.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124608,"byte_end":124656,"line_start":343,"line_end":343,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":124661,"byte_end":124670,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125598,"byte_end":125610,"line_start":373,"line_end":373,"column_start":12,"column_end":24},"name":"in_scan_mode","qualname":"<Cmd>::in_scan_mode","value":"pub fn in_scan_mode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the command is in scan mode.\n","sig":null,"attributes":[{"value":"/ Returns true if the command is in scan mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125524,"byte_end":125572,"line_start":371,"line_end":371,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125577,"byte_end":125586,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125862,"byte_end":125867,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"query","qualname":"<Cmd>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends the command as query to the connection and converts the\n result to the target redis value.  This is the general way how\n you can retrieve data.\n","sig":null,"attributes":[{"value":"/ Sends the command as query to the connection and converts the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125669,"byte_end":125734,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/ result to the target redis value.  This is the general way how","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125739,"byte_end":125805,"line_start":378,"line_end":378,"column_start":5,"column_end":71}},{"value":"/ you can retrieve data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125810,"byte_end":125836,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":125841,"byte_end":125850,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126223,"byte_end":126234,"line_start":392,"line_end":392,"column_start":18,"column_end":29},"name":"query_async","qualname":"<Cmd>::query_async","value":"pub async fn query_async<C, T: FromRedisValue, '_, '_>(&'_ Self, &'_ mut C)\n-> /*impl Trait*/ where C: crate::aio::ConnectionLike","parent":null,"children":[],"decl_id":null,"docs":" Async version of `query`.\n","sig":null,"attributes":[{"value":"/ Async version of `query`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126134,"byte_end":126163,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126168,"byte_end":126177,"line_start":390,"line_end":390,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126182,"byte_end":126205,"line_start":391,"line_end":391,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127324,"byte_end":127328,"line_start":415,"line_end":415,"column_start":12,"column_end":16},"name":"iter","qualname":"<Cmd>::iter","value":"pub fn iter<'a, T: FromRedisValue>(Self, &'a mut ConnectionLike)\n-> RedisResult<Iter>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `query()` but returns an iterator over the items of the\n bulk result or iterator.  In normal mode this is not in any way more\n efficient than just querying into a `Vec<T>` as it's internally\n implemented as buffering into a vector.  This however is useful when\n `cursor_arg` was used in which case the iterator will query for more\n items until the server side cursor is exhausted.","sig":null,"attributes":[{"value":"/ Similar to `query()` but returns an iterator over the items of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126447,"byte_end":126517,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ bulk result or iterator.  In normal mode this is not in any way more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126522,"byte_end":126594,"line_start":401,"line_end":401,"column_start":5,"column_end":77}},{"value":"/ efficient than just querying into a `Vec<T>` as it's internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126599,"byte_end":126666,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/ implemented as buffering into a vector.  This however is useful when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126671,"byte_end":126743,"line_start":403,"line_end":403,"column_start":5,"column_end":77}},{"value":"/ `cursor_arg` was used in which case the iterator will query for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126748,"byte_end":126820,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ items until the server side cursor is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126825,"byte_end":126877,"line_start":405,"line_end":405,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126882,"byte_end":126885,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This is useful for commands such as `SSCAN`, `SCAN` and others.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126890,"byte_end":126957,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126962,"byte_end":126965,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ One speciality of this function is that it will check if the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":126970,"byte_end":127043,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ looks like a cursor or not and always just looks at the payload.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127048,"byte_end":127116,"line_start":410,"line_end":410,"column_start":5,"column_end":73}},{"value":"/ This way you can use the function the same for responses in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127121,"byte_end":127188,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ format of `KEYS` (just a list) as well as `SSCAN` (which returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127193,"byte_end":127263,"line_start":412,"line_end":412,"column_start":5,"column_end":75}},{"value":"/ tuple of cursor and list).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127268,"byte_end":127298,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127303,"byte_end":127312,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128933,"byte_end":128943,"line_start":453,"line_end":453,"column_start":18,"column_end":28},"name":"iter_async","qualname":"<Cmd>::iter_async","value":"pub async fn iter_async<'a, T: FromRedisValue +\n                        'a>(Self, &'a mut AsyncConnection + Send)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Similar to `iter()` but returns an AsyncIter over the items of the\n bulk result or iterator.  A [futures::Stream](https://docs.rs/futures/0.3.3/futures/stream/trait.Stream.html)\n can be obtained by calling `stream()` on the AsyncIter.  In normal mode this is not in any way more\n efficient than just querying into a `Vec<T>` as it's internally\n implemented as buffering into a vector.  This however is useful when\n `cursor_arg` was used in which case the stream will query for more\n items until the server side cursor is exhausted.","sig":null,"attributes":[{"value":"/ Similar to `iter()` but returns an AsyncIter over the items of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127857,"byte_end":127927,"line_start":436,"line_end":436,"column_start":5,"column_end":75}},{"value":"/ bulk result or iterator.  A [futures::Stream](https://docs.rs/futures/0.3.3/futures/stream/trait.Stream.html)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":127932,"byte_end":128045,"line_start":437,"line_end":437,"column_start":5,"column_end":118}},{"value":"/ can be obtained by calling `stream()` on the AsyncIter.  In normal mode this is not in any way more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128050,"byte_end":128153,"line_start":438,"line_end":438,"column_start":5,"column_end":108}},{"value":"/ efficient than just querying into a `Vec<T>` as it's internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128158,"byte_end":128225,"line_start":439,"line_end":439,"column_start":5,"column_end":72}},{"value":"/ implemented as buffering into a vector.  This however is useful when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128230,"byte_end":128302,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ `cursor_arg` was used in which case the stream will query for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128307,"byte_end":128377,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ items until the server side cursor is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128382,"byte_end":128434,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128439,"byte_end":128442,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This is useful for commands such as `SSCAN`, `SCAN` and others in async contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128447,"byte_end":128532,"line_start":444,"line_end":444,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128537,"byte_end":128540,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ One speciality of this function is that it will check if the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128545,"byte_end":128618,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ looks like a cursor or not and always just looks at the payload.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128623,"byte_end":128691,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/ This way you can use the function the same for responses in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128696,"byte_end":128763,"line_start":448,"line_end":448,"column_start":5,"column_end":72}},{"value":"/ format of `KEYS` (just a list) as well as `SSCAN` (which returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128768,"byte_end":128838,"line_start":449,"line_end":449,"column_start":5,"column_end":75}},{"value":"/ tuple of cursor and list).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128843,"byte_end":128873,"line_start":450,"line_end":450,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128878,"byte_end":128901,"line_start":451,"line_end":451,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":128906,"byte_end":128915,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130127,"byte_end":130134,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"execute","qualname":"<Cmd>::execute","value":"pub fn execute(&Self, &mut ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query fails because of an error.  This is\n mainly useful in examples and for simple commands like setting\n keys.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129565,"byte_end":129633,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query fails because of an error.  This is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129638,"byte_end":129709,"line_start":478,"line_end":478,"column_start":5,"column_end":76}},{"value":"/ mainly useful in examples and for simple commands like setting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129714,"byte_end":129780,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129785,"byte_end":129794,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129799,"byte_end":129802,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129807,"byte_end":129859,"line_start":482,"line_end":482,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129864,"byte_end":129867,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129872,"byte_end":129890,"line_start":484,"line_end":484,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129895,"byte_end":129965,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":129970,"byte_end":130023,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130028,"byte_end":130089,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130094,"byte_end":130101,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130106,"byte_end":130115,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130331,"byte_end":130340,"line_start":495,"line_end":495,"column_start":12,"column_end":21},"name":"args_iter","qualname":"<Cmd>::args_iter","value":"pub fn args_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the arguments in this command (including the command name itself)\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the arguments in this command (including the command name itself)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130225,"byte_end":130319,"line_start":494,"line_end":494,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131922,"byte_end":131925,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"new","qualname":"<Pipeline>::new","value":"pub fn new() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline.  For consistency with the `cmd`\n api a `pipe` function is provided as alias.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline.  For consistency with the `cmd`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131796,"byte_end":131858,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ api a `pipe` function is provided as alias.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131863,"byte_end":131910,"line_start":538,"line_end":538,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132054,"byte_end":132067,"line_start":544,"line_end":544,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Pipeline>::with_capacity","value":"pub fn with_capacity(usize) -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline with pre-allocated capacity.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline with pre-allocated capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131984,"byte_end":132042,"line_start":543,"line_end":543,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132373,"byte_end":132376,"line_start":554,"line_end":554,"column_start":12,"column_end":15},"name":"cmd","qualname":"<Pipeline>::cmd","value":"pub fn cmd(&mut Self, &str) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Starts a new command.  Functions such as `arg` then become\n available to add more arguments to that command.\n","sig":null,"attributes":[{"value":"/ Starts a new command.  Functions such as `arg` then become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132228,"byte_end":132290,"line_start":551,"line_end":551,"column_start":5,"column_end":67}},{"value":"/ available to add more arguments to that command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132295,"byte_end":132347,"line_start":552,"line_end":552,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132352,"byte_end":132361,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132543,"byte_end":132554,"line_start":561,"line_end":561,"column_start":12,"column_end":23},"name":"add_command","qualname":"<Pipeline>::add_command","value":"pub fn add_command(&mut Self, Cmd) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Adds a command to the pipeline.\n","sig":null,"attributes":[{"value":"/ Adds a command to the pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132482,"byte_end":132517,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132522,"byte_end":132531,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133116,"byte_end":133119,"line_start":580,"line_end":580,"column_start":12,"column_end":15},"name":"arg","qualname":"<Pipeline>::arg","value":"pub fn arg<T: ToRedisArgs>(&mut Self, T) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to the last started command.  This works similar\n to the `arg` method of the `Cmd` object.","sig":null,"attributes":[{"value":"/ Adds an argument to the last started command.  This works similar","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132883,"byte_end":132952,"line_start":575,"line_end":575,"column_start":5,"column_end":74}},{"value":"/ to the `arg` method of the `Cmd` object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":132957,"byte_end":133001,"line_start":576,"line_end":576,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133006,"byte_end":133009,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Note that this function fails the task if executed on an empty pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133014,"byte_end":133090,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133095,"byte_end":133104,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133733,"byte_end":133739,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"ignore","qualname":"<Pipeline>::ignore","value":"pub fn ignore(&mut Self) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Instructs the pipeline to ignore the return value of this command.\n It will still be ensured that it is not an error, but any successful\n result is just thrown away.  This makes result processing through\n tuples much easier because you do not need to handle all the items\n you do not care about.","sig":null,"attributes":[{"value":"/ Instructs the pipeline to ignore the return value of this command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133291,"byte_end":133361,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ It will still be ensured that it is not an error, but any successful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133366,"byte_end":133438,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/ result is just thrown away.  This makes result processing through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133443,"byte_end":133512,"line_start":590,"line_end":590,"column_start":5,"column_end":74}},{"value":"/ tuples much easier because you do not need to handle all the items","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133517,"byte_end":133587,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ you do not care about.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133592,"byte_end":133618,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133623,"byte_end":133626,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Note that this function fails the task if executed on an empty pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133631,"byte_end":133707,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133712,"byte_end":133721,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134527,"byte_end":134533,"line_start":618,"line_end":618,"column_start":12,"column_end":18},"name":"atomic","qualname":"<Pipeline>::atomic","value":"pub fn atomic(&mut Self) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" This enables atomic mode.  In atomic mode the whole pipeline is\n enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing\n changes however.  This is easier than using `MULTI`/`EXEC` yourself\n as the format does not change.","sig":null,"attributes":[{"value":"/ This enables atomic mode.  In atomic mode the whole pipeline is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133896,"byte_end":133963,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/ enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":133968,"byte_end":134038,"line_start":605,"line_end":605,"column_start":5,"column_end":75}},{"value":"/ changes however.  This is easier than using `MULTI`/`EXEC` yourself","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134043,"byte_end":134114,"line_start":606,"line_end":606,"column_start":5,"column_end":76}},{"value":"/ as the format does not change.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134119,"byte_end":134153,"line_start":607,"line_end":607,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134158,"byte_end":134161,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134166,"byte_end":134184,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134189,"byte_end":134259,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134264,"byte_end":134317,"line_start":611,"line_end":611,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134322,"byte_end":134367,"line_start":612,"line_end":612,"column_start":5,"column_end":50}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134372,"byte_end":134389,"line_start":613,"line_end":613,"column_start":5,"column_end":22}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134394,"byte_end":134426,"line_start":614,"line_end":614,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134431,"byte_end":134489,"line_start":615,"line_end":615,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134494,"byte_end":134501,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134506,"byte_end":134515,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134710,"byte_end":134718,"line_start":624,"line_end":624,"column_start":12,"column_end":20},"name":"cmd_iter","qualname":"<Pipeline>::cmd_iter","value":"pub fn cmd_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the commands currently in this pipeline\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the commands currently in this pipeline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":134626,"byte_end":134698,"line_start":623,"line_end":623,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":135142,"byte_end":135161,"line_start":639,"line_end":639,"column_start":12,"column_end":31},"name":"get_packed_pipeline","qualname":"<Pipeline>::get_packed_pipeline","value":"pub fn get_packed_pipeline(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded pipeline commands.\n","sig":null,"attributes":[{"value":"/ Returns the encoded pipeline commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":135088,"byte_end":135130,"line_start":638,"line_end":638,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137196,"byte_end":137201,"line_start":690,"line_end":690,"column_start":12,"column_end":17},"name":"query","qualname":"<Pipeline>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the pipeline and fetches the return values.  Since most\n pipelines return different types it's recommended to use tuple\n matching to process the results:","sig":null,"attributes":[{"value":"/ Executes the pipeline and fetches the return values.  Since most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136265,"byte_end":136333,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/ pipelines return different types it's recommended to use tuple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136338,"byte_end":136404,"line_start":673,"line_end":673,"column_start":5,"column_end":71}},{"value":"/ matching to process the results:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136409,"byte_end":136445,"line_start":674,"line_end":674,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136450,"byte_end":136453,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136458,"byte_end":136476,"line_start":676,"line_end":676,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136481,"byte_end":136551,"line_start":677,"line_end":677,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136556,"byte_end":136609,"line_start":678,"line_end":678,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136614,"byte_end":136659,"line_start":679,"line_end":679,"column_start":5,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136664,"byte_end":136713,"line_start":680,"line_end":680,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136718,"byte_end":136767,"line_start":681,"line_end":681,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136772,"byte_end":136804,"line_start":682,"line_end":682,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136809,"byte_end":136867,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136872,"byte_end":136879,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136884,"byte_end":136887,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136892,"byte_end":136988,"line_start":686,"line_end":686,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":136993,"byte_end":137087,"line_start":687,"line_end":687,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137092,"byte_end":137170,"line_start":688,"line_end":688,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137175,"byte_end":137184,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137995,"byte_end":138000,"line_start":713,"line_end":713,"column_start":12,"column_end":17},"name":"clear","qualname":"<Pipeline>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a Pipeline object internal data structure.","sig":null,"attributes":[{"value":"/ Clear a Pipeline object internal data structure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137771,"byte_end":137823,"line_start":708,"line_end":708,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137828,"byte_end":137831,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This allows reusing a Pipeline object as a clear object while performing a minimal amount of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137836,"byte_end":137932,"line_start":710,"line_end":710,"column_start":5,"column_end":101}},{"value":"/ memory released/reallocated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137937,"byte_end":137969,"line_start":711,"line_end":711,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":137974,"byte_end":137983,"line_start":712,"line_end":712,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139093,"byte_end":139104,"line_start":750,"line_end":750,"column_start":18,"column_end":29},"name":"query_async","qualname":"<Pipeline>::query_async","value":"pub async fn query_async<C, T: FromRedisValue, '_, '_>(&'_ Self, &'_ mut C)\n-> /*impl Trait*/ where C: crate::aio::ConnectionLike","parent":null,"children":[],"decl_id":null,"docs":" Async version of `query`.\n","sig":null,"attributes":[{"value":"/ Async version of `query`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139004,"byte_end":139033,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139038,"byte_end":139047,"line_start":748,"line_end":748,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139052,"byte_end":139075,"line_start":749,"line_end":749,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140305,"byte_end":140312,"line_start":779,"line_end":779,"column_start":12,"column_end":19},"name":"execute","qualname":"<Pipeline>::execute","value":"pub fn execute(&Self, &mut ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query of the pipeline fails.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139543,"byte_end":139611,"line_start":764,"line_end":764,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query of the pipeline fails.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139616,"byte_end":139674,"line_start":765,"line_end":765,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139679,"byte_end":139682,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139687,"byte_end":139739,"line_start":767,"line_end":767,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139744,"byte_end":139747,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139752,"byte_end":139770,"line_start":769,"line_end":769,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139775,"byte_end":139845,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139850,"byte_end":139903,"line_start":771,"line_end":771,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::pipe().cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139908,"byte_end":139976,"line_start":772,"line_end":772,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139981,"byte_end":139988,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":139993,"byte_end":139996,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140001,"byte_end":140097,"line_start":775,"line_end":775,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140102,"byte_end":140196,"line_start":776,"line_end":776,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140201,"byte_end":140279,"line_start":777,"line_end":777,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140284,"byte_end":140293,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140694,"byte_end":140697,"line_start":793,"line_end":793,"column_start":8,"column_end":11},"name":"cmd","qualname":"::cmd::cmd","value":"pub fn cmd(&str) -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to creating a command with a single argument.","sig":null,"attributes":[{"value":"/ Shortcut function to creating a command with a single argument.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140401,"byte_end":140468,"line_start":784,"line_end":784,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140469,"byte_end":140472,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ The first argument of a redis command is always the name of the command","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140473,"byte_end":140548,"line_start":786,"line_end":786,"column_start":1,"column_end":76}},{"value":"/ which needs to be a string.  This is the recommended way to start a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140549,"byte_end":140620,"line_start":787,"line_end":787,"column_start":1,"column_end":72}},{"value":"/ command pipe.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140621,"byte_end":140638,"line_start":788,"line_end":788,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140639,"byte_end":140642,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140643,"byte_end":140654,"line_start":790,"line_end":790,"column_start":1,"column_end":12}},{"value":"/ redis::cmd(\"PING\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140655,"byte_end":140678,"line_start":791,"line_end":791,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140679,"byte_end":140686,"line_start":792,"line_end":792,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141415,"byte_end":141427,"line_start":815,"line_end":815,"column_start":8,"column_end":20},"name":"pack_command","qualname":"::cmd::pack_command","value":"pub fn pack_command(&[Vec<u8>]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Packs a bunch of commands into a request.  This is generally a quite\n useless function as this functionality is nicely wrapped through the\n `Cmd` object, but in some cases it can be useful.  The return value\n of this can then be send to the low level `ConnectionLike` methods.","sig":null,"attributes":[{"value":"/ Packs a bunch of commands into a request.  This is generally a quite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140776,"byte_end":140848,"line_start":799,"line_end":799,"column_start":1,"column_end":73}},{"value":"/ useless function as this functionality is nicely wrapped through the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140849,"byte_end":140921,"line_start":800,"line_end":800,"column_start":1,"column_end":73}},{"value":"/ `Cmd` object, but in some cases it can be useful.  The return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140922,"byte_end":140993,"line_start":801,"line_end":801,"column_start":1,"column_end":72}},{"value":"/ of this can then be send to the low level `ConnectionLike` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":140994,"byte_end":141065,"line_start":802,"line_end":802,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141066,"byte_end":141069,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141070,"byte_end":141082,"line_start":804,"line_end":804,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141083,"byte_end":141086,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141087,"byte_end":141098,"line_start":806,"line_end":806,"column_start":1,"column_end":12}},{"value":"/ # use redis::ToRedisArgs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141099,"byte_end":141128,"line_start":807,"line_end":807,"column_start":1,"column_end":30}},{"value":"/ let mut args = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141129,"byte_end":141155,"line_start":808,"line_end":808,"column_start":1,"column_end":27}},{"value":"/ args.extend(\"SET\".to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141156,"byte_end":141195,"line_start":809,"line_end":809,"column_start":1,"column_end":40}},{"value":"/ args.extend(\"my_key\".to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141196,"byte_end":141238,"line_start":810,"line_end":810,"column_start":1,"column_end":43}},{"value":"/ args.extend(42.to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141239,"byte_end":141275,"line_start":811,"line_end":811,"column_start":1,"column_end":37}},{"value":"/ let cmd = redis::pack_command(&args);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141276,"byte_end":141317,"line_start":812,"line_end":812,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(cmd, b\"*3\\r\\n$3\\r\\nSET\\r\\n$6\\r\\nmy_key\\r\\n$2\\r\\n42\\r\\n\".to_vec());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141318,"byte_end":141399,"line_start":813,"line_end":813,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141400,"byte_end":141407,"line_start":814,"line_end":814,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141575,"byte_end":141579,"line_start":820,"line_end":820,"column_start":8,"column_end":12},"name":"pipe","qualname":"::cmd::pipe","value":"pub fn pipe() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for creating a new pipeline.\n","sig":null,"attributes":[{"value":"/ Shortcut for creating a new pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":141526,"byte_end":141567,"line_start":819,"line_end":819,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153456,"byte_end":153459,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"::commands::Commands::get","value":"pub fn get<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153610,"byte_end":153614,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"::commands::Commands::keys","value":"pub fn keys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153723,"byte_end":153726,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"::commands::Commands::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs,\n           RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153876,"byte_end":153888,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"::commands::Commands::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, &'a [(K, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154036,"byte_end":154042,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"::commands::Commands::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154242,"byte_end":154249,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"::commands::Commands::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154460,"byte_end":154466,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"::commands::Commands::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154657,"byte_end":154664,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"::commands::Commands::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, &'a [(K, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154831,"byte_end":154837,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"::commands::Commands::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155071,"byte_end":155079,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"::commands::Commands::getrange","value":"pub fn getrange<'a, K: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155274,"byte_end":155282,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"::commands::Commands::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155453,"byte_end":155456,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"::commands::Commands::del","value":"pub fn del<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155560,"byte_end":155566,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"::commands::Commands::exists","value":"pub fn exists<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155683,"byte_end":155689,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"::commands::Commands::expire","value":"pub fn expire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155848,"byte_end":155857,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"::commands::Commands::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156000,"byte_end":156007,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"::commands::Commands::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156173,"byte_end":156183,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"::commands::Commands::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156319,"byte_end":156326,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"::commands::Commands::persist","value":"pub fn persist<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156441,"byte_end":156444,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"::commands::Commands::ttl","value":"pub fn ttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156571,"byte_end":156575,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"::commands::Commands::pttl","value":"pub fn pttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156667,"byte_end":156673,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"::commands::Commands::rename","value":"pub fn rename<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156828,"byte_end":156837,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"::commands::Commands::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157002,"byte_end":157008,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"append","qualname":"::commands::Commands::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157255,"byte_end":157259,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"incr","qualname":"::commands::Commands::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157582,"byte_end":157588,"line_start":407,"line_end":407,"column_start":8,"column_end":14},"name":"setbit","qualname":"::commands::Commands::setbit","value":"pub fn setbit<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, usize, bool)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157802,"byte_end":157808,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"getbit","qualname":"::commands::Commands::getbit","value":"pub fn getbit<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157943,"byte_end":157951,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"bitcount","qualname":"::commands::Commands::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158072,"byte_end":158086,"line_start":422,"line_end":422,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"::commands::Commands::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, usize, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158338,"byte_end":158345,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"bit_and","qualname":"::commands::Commands::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158589,"byte_end":158595,"line_start":434,"line_end":434,"column_start":8,"column_end":14},"name":"bit_or","qualname":"::commands::Commands::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158839,"byte_end":158846,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"::commands::Commands::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159080,"byte_end":159087,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"bit_not","qualname":"::commands::Commands::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159251,"byte_end":159257,"line_start":451,"line_end":451,"column_start":8,"column_end":14},"name":"strlen","qualname":"::commands::Commands::strlen","value":"pub fn strlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159409,"byte_end":159413,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"hget","qualname":"::commands::Commands::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159625,"byte_end":159629,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"hdel","qualname":"::commands::Commands::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159775,"byte_end":159779,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hset","qualname":"::commands::Commands::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159983,"byte_end":159990,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"::commands::Commands::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160178,"byte_end":160191,"line_start":478,"line_end":478,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"::commands::Commands::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160354,"byte_end":160359,"line_start":483,"line_end":483,"column_start":8,"column_end":13},"name":"hincr","qualname":"::commands::Commands::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, F, D) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160689,"byte_end":160696,"line_start":492,"line_end":492,"column_start":8,"column_end":15},"name":"hexists","qualname":"::commands::Commands::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160843,"byte_end":160848,"line_start":497,"line_end":497,"column_start":8,"column_end":13},"name":"hkeys","qualname":"::commands::Commands::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160958,"byte_end":160963,"line_start":502,"line_end":502,"column_start":8,"column_end":13},"name":"hvals","qualname":"::commands::Commands::hvals","value":"pub fn hvals<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161084,"byte_end":161091,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"hgetall","qualname":"::commands::Commands::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161199,"byte_end":161203,"line_start":512,"line_end":512,"column_start":8,"column_end":12},"name":"hlen","qualname":"::commands::Commands::hlen","value":"pub fn hlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161382,"byte_end":161387,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"blpop","qualname":"::commands::Commands::blpop","value":"pub fn blpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161571,"byte_end":161576,"line_start":524,"line_end":524,"column_start":8,"column_end":13},"name":"brpop","qualname":"::commands::Commands::brpop","value":"pub fn brpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161789,"byte_end":161799,"line_start":530,"line_end":530,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"::commands::Commands::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161982,"byte_end":161988,"line_start":535,"line_end":535,"column_start":8,"column_end":14},"name":"lindex","qualname":"::commands::Commands::lindex","value":"pub fn lindex<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162145,"byte_end":162159,"line_start":540,"line_end":540,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"::commands::Commands::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162392,"byte_end":162405,"line_start":546,"line_end":546,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"::commands::Commands::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162632,"byte_end":162636,"line_start":552,"line_end":552,"column_start":8,"column_end":12},"name":"llen","qualname":"::commands::Commands::llen","value":"pub fn llen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162779,"byte_end":162783,"line_start":557,"line_end":557,"column_start":8,"column_end":12},"name":"lpop","qualname":"::commands::Commands::lpop","value":"pub fn lpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162932,"byte_end":162937,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"lpush","qualname":"::commands::Commands::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163161,"byte_end":163173,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"::commands::Commands::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163348,"byte_end":163354,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"lrange","qualname":"::commands::Commands::lrange","value":"pub fn lrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163582,"byte_end":163586,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"lrem","qualname":"::commands::Commands::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163828,"byte_end":163833,"line_start":585,"line_end":585,"column_start":8,"column_end":13},"name":"ltrim","qualname":"::commands::Commands::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164000,"byte_end":164004,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lset","qualname":"::commands::Commands::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164208,"byte_end":164212,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"rpop","qualname":"::commands::Commands::rpop","value":"pub fn rpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164354,"byte_end":164363,"line_start":600,"line_end":600,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"::commands::Commands::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164540,"byte_end":164545,"line_start":605,"line_end":605,"column_start":8,"column_end":13},"name":"rpush","qualname":"::commands::Commands::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164767,"byte_end":164779,"line_start":611,"line_end":611,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"::commands::Commands::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164951,"byte_end":164955,"line_start":618,"line_end":618,"column_start":8,"column_end":12},"name":"sadd","qualname":"::commands::Commands::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165108,"byte_end":165113,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"scard","qualname":"::commands::Commands::scard","value":"pub fn scard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165216,"byte_end":165221,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"sdiff","qualname":"::commands::Commands::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165363,"byte_end":165373,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"::commands::Commands::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165507,"byte_end":165513,"line_start":638,"line_end":638,"column_start":8,"column_end":14},"name":"sinter","qualname":"::commands::Commands::sinter","value":"pub fn sinter<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165657,"byte_end":165668,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"::commands::Commands::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165827,"byte_end":165836,"line_start":648,"line_end":648,"column_start":8,"column_end":17},"name":"sismember","qualname":"::commands::Commands::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165988,"byte_end":165996,"line_start":653,"line_end":653,"column_start":8,"column_end":16},"name":"smembers","qualname":"::commands::Commands::smembers","value":"pub fn smembers<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166117,"byte_end":166122,"line_start":658,"line_end":658,"column_start":8,"column_end":13},"name":"smove","qualname":"::commands::Commands::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166315,"byte_end":166319,"line_start":663,"line_end":663,"column_start":8,"column_end":12},"name":"spop","qualname":"::commands::Commands::spop","value":"pub fn spop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166431,"byte_end":166442,"line_start":668,"line_end":668,"column_start":8,"column_end":19},"name":"srandmember","qualname":"::commands::Commands::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166567,"byte_end":166587,"line_start":673,"line_end":673,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"::commands::Commands::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166736,"byte_end":166740,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"srem","qualname":"::commands::Commands::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166876,"byte_end":166882,"line_start":683,"line_end":683,"column_start":8,"column_end":14},"name":"sunion","qualname":"::commands::Commands::sunion","value":"pub fn sunion<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167020,"byte_end":167031,"line_start":688,"line_end":688,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"::commands::Commands::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167243,"byte_end":167247,"line_start":695,"line_end":695,"column_start":8,"column_end":12},"name":"zadd","qualname":"::commands::Commands::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M, S) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167481,"byte_end":167494,"line_start":700,"line_end":700,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"::commands::Commands::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(S, M)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167679,"byte_end":167684,"line_start":705,"line_end":705,"column_start":8,"column_end":13},"name":"zcard","qualname":"::commands::Commands::zcard","value":"pub fn zcard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167834,"byte_end":167840,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"zcount","qualname":"::commands::Commands::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168118,"byte_end":168123,"line_start":716,"line_end":716,"column_start":8,"column_end":13},"name":"zincr","qualname":"::commands::Commands::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M, D) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168402,"byte_end":168413,"line_start":722,"line_end":722,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"::commands::Commands::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168667,"byte_end":168682,"line_start":728,"line_end":728,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"::commands::Commands::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168964,"byte_end":168979,"line_start":734,"line_end":734,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"::commands::Commands::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169222,"byte_end":169231,"line_start":739,"line_end":739,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"::commands::Commands::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, L, L) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169444,"byte_end":169451,"line_start":744,"line_end":744,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"::commands::Commands::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169636,"byte_end":169643,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"::commands::Commands::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169801,"byte_end":169807,"line_start":754,"line_end":754,"column_start":8,"column_end":14},"name":"zrange","qualname":"::commands::Commands::zrange","value":"pub fn zrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170000,"byte_end":170017,"line_start":759,"line_end":759,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"::commands::Commands::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170232,"byte_end":170243,"line_start":764,"line_end":764,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"::commands::Commands::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170495,"byte_end":170512,"line_start":770,"line_end":770,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"::commands::Commands::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                             isize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170812,"byte_end":170826,"line_start":776,"line_end":776,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"::commands::Commands::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171081,"byte_end":171101,"line_start":782,"line_end":782,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"::commands::Commands::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                isize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171388,"byte_end":171401,"line_start":788,"line_end":788,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"::commands::Commands::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171621,"byte_end":171645,"line_start":793,"line_end":793,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"::commands::Commands::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs,\n                                RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171882,"byte_end":171901,"line_start":798,"line_end":798,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"::commands::Commands::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs,\n                           RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                               isize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172210,"byte_end":172240,"line_start":804,"line_end":804,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"::commands::Commands::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs,\n                                      RV: FromRedisValue>(&mut Self, K, M, MM,\n                                                          isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172553,"byte_end":172558,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"zrank","qualname":"::commands::Commands::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172722,"byte_end":172726,"line_start":816,"line_end":816,"column_start":8,"column_end":12},"name":"zrem","qualname":"::commands::Commands::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172921,"byte_end":172930,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"::commands::Commands::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173142,"byte_end":173157,"line_start":826,"line_end":826,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"::commands::Commands::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173354,"byte_end":173365,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"::commands::Commands::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173622,"byte_end":173631,"line_start":837,"line_end":837,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"::commands::Commands::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173861,"byte_end":173881,"line_start":843,"line_end":843,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"::commands::Commands::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174083,"byte_end":174099,"line_start":848,"line_end":848,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"::commands::Commands::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                        RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174322,"byte_end":174349,"line_start":853,"line_end":853,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"::commands::Commands::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs,\n                                   RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174589,"byte_end":174611,"line_start":858,"line_end":858,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"::commands::Commands::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                  isize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174923,"byte_end":174956,"line_start":864,"line_end":864,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"::commands::Commands::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs,\n                                         RV: FromRedisValue>(&mut Self, K, MM,\n                                                             M, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175310,"byte_end":175318,"line_start":871,"line_end":871,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"::commands::Commands::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175503,"byte_end":175509,"line_start":876,"line_end":876,"column_start":8,"column_end":14},"name":"zscore","qualname":"::commands::Commands::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175747,"byte_end":175758,"line_start":882,"line_end":882,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"::commands::Commands::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176009,"byte_end":176024,"line_start":888,"line_end":888,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"::commands::Commands::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176303,"byte_end":176318,"line_start":894,"line_end":894,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"::commands::Commands::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176565,"byte_end":176570,"line_start":901,"line_end":901,"column_start":8,"column_end":13},"name":"pfadd","qualname":"::commands::Commands::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176787,"byte_end":176794,"line_start":907,"line_end":907,"column_start":8,"column_end":15},"name":"pfcount","qualname":"::commands::Commands::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176925,"byte_end":176932,"line_start":912,"line_end":912,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"::commands::Commands::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177082,"byte_end":177089,"line_start":917,"line_end":917,"column_start":8,"column_end":15},"name":"publish","qualname":"::commands::Commands::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177540,"byte_end":177548,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"acl_load","qualname":"::commands::Commands::acl_load","value":"pub fn acl_load<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177878,"byte_end":177886,"line_start":937,"line_end":937,"column_start":8,"column_end":16},"name":"acl_save","qualname":"::commands::Commands::acl_save","value":"pub fn acl_save<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178083,"byte_end":178091,"line_start":944,"line_end":944,"column_start":8,"column_end":16},"name":"acl_list","qualname":"::commands::Commands::acl_list","value":"pub fn acl_list<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178331,"byte_end":178340,"line_start":952,"line_end":952,"column_start":8,"column_end":17},"name":"acl_users","qualname":"::commands::Commands::acl_users","value":"pub fn acl_users<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178536,"byte_end":178547,"line_start":959,"line_end":959,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"::commands::Commands::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178771,"byte_end":178782,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"::commands::Commands::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179057,"byte_end":179074,"line_start":974,"line_end":974,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"::commands::Commands::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, &'a [acl::Rule])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179407,"byte_end":179418,"line_start":982,"line_end":982,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"::commands::Commands::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179643,"byte_end":179650,"line_start":989,"line_end":989,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"::commands::Commands::acl_cat","value":"pub fn acl_cat<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179844,"byte_end":179864,"line_start":996,"line_end":996,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"::commands::Commands::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180120,"byte_end":180131,"line_start":1003,"line_end":1003,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"::commands::Commands::acl_genpass","value":"pub fn acl_genpass<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180350,"byte_end":180366,"line_start":1010,"line_end":1010,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"::commands::Commands::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a, RV: FromRedisValue>(&mut Self, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180596,"byte_end":180606,"line_start":1017,"line_end":1017,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"::commands::Commands::acl_whoami","value":"pub fn acl_whoami<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180790,"byte_end":180797,"line_start":1024,"line_end":1024,"column_start":8,"column_end":15},"name":"acl_log","qualname":"::commands::Commands::acl_log","value":"pub fn acl_log<'a, RV: FromRedisValue>(&mut Self, isize) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180979,"byte_end":180992,"line_start":1032,"line_end":1032,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"::commands::Commands::acl_log_reset","value":"pub fn acl_log_reset<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":181204,"byte_end":181212,"line_start":1039,"line_end":1039,"column_start":8,"column_end":16},"name":"acl_help","qualname":"::commands::Commands::acl_help","value":"pub fn acl_help<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":182648,"byte_end":182655,"line_start":1082,"line_end":1082,"column_start":8,"column_end":15},"name":"geo_add","qualname":"::commands::Commands::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":183809,"byte_end":183817,"line_start":1119,"line_end":1119,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"::commands::Commands::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs, M2: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M1, M2, geo::Unit)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":184875,"byte_end":184883,"line_start":1153,"line_end":1153,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"::commands::Commands::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":185975,"byte_end":185982,"line_start":1182,"line_end":1182,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"::commands::Commands::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187120,"byte_end":187130,"line_start":1207,"line_end":1207,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"::commands::Commands::geo_radius","value":"pub fn geo_radius<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                      geo::RadiusOptions) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187721,"byte_end":187741,"line_start":1228,"line_end":1228,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"::commands::Commands::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs, M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, M, f64,\n                                                geo::Unit, geo::RadiusOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188339,"byte_end":188343,"line_start":1254,"line_end":1254,"column_start":8,"column_end":12},"name":"xack","qualname":"::commands::Commands::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, G, &'a [I]) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188822,"byte_end":188826,"line_start":1272,"line_end":1272,"column_start":8,"column_end":12},"name":"xadd","qualname":"::commands::Commands::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, ID, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189312,"byte_end":189320,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"::commands::Commands::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, ID, BTM) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189765,"byte_end":189776,"line_start":1304,"line_end":1304,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"::commands::Commands::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen,\n                                       ID, &'a [(F, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":190402,"byte_end":190417,"line_start":1330,"line_end":1330,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"::commands::Commands::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K,\n                                           streams::StreamMaxlen, ID, BTM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":191166,"byte_end":191172,"line_start":1356,"line_end":1356,"column_start":8,"column_end":14},"name":"xclaim","qualname":"::commands::Commands::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193039,"byte_end":193053,"line_start":1406,"line_end":1406,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"::commands::Commands::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs, ID: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID],\n                                          streams::StreamClaimOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193757,"byte_end":193761,"line_start":1437,"line_end":1437,"column_start":8,"column_end":12},"name":"xdel","qualname":"::commands::Commands::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, &'a [ID]) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194402,"byte_end":194415,"line_start":1455,"line_end":1455,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"::commands::Commands::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194960,"byte_end":194982,"line_start":1476,"line_end":1476,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"::commands::Commands::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":195556,"byte_end":195568,"line_start":1502,"line_end":1502,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"::commands::Commands::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196048,"byte_end":196062,"line_start":1522,"line_end":1522,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"::commands::Commands::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196490,"byte_end":196508,"line_start":1537,"line_end":1537,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"::commands::Commands::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                          RV: FromRedisValue>(&mut Self, K, G, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197223,"byte_end":197238,"line_start":1562,"line_end":1562,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"::commands::Commands::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197829,"byte_end":197841,"line_start":1584,"line_end":1584,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"::commands::Commands::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198380,"byte_end":198392,"line_start":1601,"line_end":1601,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"::commands::Commands::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198684,"byte_end":198688,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"xlen","qualname":"::commands::Commands::xlen","value":"pub fn xlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":199398,"byte_end":199406,"line_start":1633,"line_end":1633,"column_start":8,"column_end":16},"name":"xpending","qualname":"::commands::Commands::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200087,"byte_end":200101,"line_start":1654,"line_end":1654,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"::commands::Commands::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200949,"byte_end":200972,"line_start":1688,"line_end":1688,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"::commands::Commands::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs,\n                               RV: FromRedisValue>(&mut Self, K, G, S, E, C,\n                                                   CN) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":201881,"byte_end":201887,"line_start":1725,"line_end":1725,"column_start":8,"column_end":14},"name":"xrange","qualname":"::commands::Commands::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, S, E) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202324,"byte_end":202334,"line_start":1742,"line_end":1742,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"::commands::Commands::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202641,"byte_end":202653,"line_start":1754,"line_end":1754,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"::commands::Commands::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":203360,"byte_end":203365,"line_start":1779,"line_end":1779,"column_start":8,"column_end":13},"name":"xread","qualname":"::commands::Commands::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205116,"byte_end":205129,"line_start":1824,"line_end":1824,"column_start":8,"column_end":21},"name":"xread_options","qualname":"::commands::Commands::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID],\n                                         streams::StreamReadOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205730,"byte_end":205739,"line_start":1848,"line_end":1848,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"::commands::Commands::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, E, S) -> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206086,"byte_end":206099,"line_start":1862,"line_end":1862,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"::commands::Commands::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206471,"byte_end":206486,"line_start":1874,"line_end":1874,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"::commands::Commands::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, E, S, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207026,"byte_end":207031,"line_start":1896,"line_end":1896,"column_start":8,"column_end":13},"name":"xtrim","qualname":"::commands::Commands::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen)\n-> RedisResult<RV>","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143621,"byte_end":143629,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143648,"byte_end":143657,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":143674,"byte_end":143742,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153456,"byte_end":153459,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"<Cmd>::get","value":"pub fn get<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153610,"byte_end":153614,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"<Cmd>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153723,"byte_end":153726,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"<Cmd>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153876,"byte_end":153888,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Cmd>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154036,"byte_end":154042,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Cmd>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154242,"byte_end":154249,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Cmd>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154460,"byte_end":154466,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Cmd>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154657,"byte_end":154664,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Cmd>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154831,"byte_end":154837,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"<Cmd>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155071,"byte_end":155079,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Cmd>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155274,"byte_end":155282,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Cmd>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155453,"byte_end":155456,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"<Cmd>::del","value":"pub fn del<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155560,"byte_end":155566,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"<Cmd>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155683,"byte_end":155689,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"<Cmd>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155848,"byte_end":155857,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Cmd>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156000,"byte_end":156007,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Cmd>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156173,"byte_end":156183,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Cmd>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156319,"byte_end":156326,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"<Cmd>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156441,"byte_end":156444,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Cmd>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156571,"byte_end":156575,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Cmd>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156667,"byte_end":156673,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"<Cmd>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156828,"byte_end":156837,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Cmd>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157002,"byte_end":157008,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"append","qualname":"<Cmd>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157255,"byte_end":157259,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"incr","qualname":"<Cmd>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157582,"byte_end":157588,"line_start":407,"line_end":407,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Cmd>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(K, usize, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157802,"byte_end":157808,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Cmd>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157943,"byte_end":157951,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Cmd>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158072,"byte_end":158086,"line_start":422,"line_end":422,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Cmd>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(K, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158338,"byte_end":158345,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Cmd>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158589,"byte_end":158595,"line_start":434,"line_end":434,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Cmd>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158839,"byte_end":158846,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Cmd>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159080,"byte_end":159087,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Cmd>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159251,"byte_end":159257,"line_start":451,"line_end":451,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Cmd>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159409,"byte_end":159413,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"hget","qualname":"<Cmd>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159625,"byte_end":159629,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Cmd>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159775,"byte_end":159779,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hset","qualname":"<Cmd>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159983,"byte_end":159990,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Cmd>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160178,"byte_end":160191,"line_start":478,"line_end":478,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Cmd>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(K, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160354,"byte_end":160359,"line_start":483,"line_end":483,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Cmd>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs>(K, F, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160689,"byte_end":160696,"line_start":492,"line_end":492,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Cmd>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160843,"byte_end":160848,"line_start":497,"line_end":497,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Cmd>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160958,"byte_end":160963,"line_start":502,"line_end":502,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Cmd>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161084,"byte_end":161091,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Cmd>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161199,"byte_end":161203,"line_start":512,"line_end":512,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Cmd>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161382,"byte_end":161387,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Cmd>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161571,"byte_end":161576,"line_start":524,"line_end":524,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Cmd>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161789,"byte_end":161799,"line_start":530,"line_end":530,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Cmd>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(K, K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161982,"byte_end":161988,"line_start":535,"line_end":535,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Cmd>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162145,"byte_end":162159,"line_start":540,"line_end":540,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Cmd>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162392,"byte_end":162405,"line_start":546,"line_end":546,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Cmd>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162632,"byte_end":162636,"line_start":552,"line_end":552,"column_start":8,"column_end":12},"name":"llen","qualname":"<Cmd>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162779,"byte_end":162783,"line_start":557,"line_end":557,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Cmd>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162932,"byte_end":162937,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Cmd>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163161,"byte_end":163173,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Cmd>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163348,"byte_end":163354,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Cmd>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163582,"byte_end":163586,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Cmd>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163828,"byte_end":163833,"line_start":585,"line_end":585,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Cmd>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164000,"byte_end":164004,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lset","qualname":"<Cmd>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164208,"byte_end":164212,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Cmd>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164354,"byte_end":164363,"line_start":600,"line_end":600,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Cmd>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164540,"byte_end":164545,"line_start":605,"line_end":605,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Cmd>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164767,"byte_end":164779,"line_start":611,"line_end":611,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Cmd>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164951,"byte_end":164955,"line_start":618,"line_end":618,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Cmd>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165108,"byte_end":165113,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"scard","qualname":"<Cmd>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165216,"byte_end":165221,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Cmd>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165363,"byte_end":165373,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Cmd>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165507,"byte_end":165513,"line_start":638,"line_end":638,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Cmd>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165657,"byte_end":165668,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Cmd>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165827,"byte_end":165836,"line_start":648,"line_end":648,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Cmd>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165988,"byte_end":165996,"line_start":653,"line_end":653,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Cmd>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166117,"byte_end":166122,"line_start":658,"line_end":658,"column_start":8,"column_end":13},"name":"smove","qualname":"<Cmd>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(K, K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166315,"byte_end":166319,"line_start":663,"line_end":663,"column_start":8,"column_end":12},"name":"spop","qualname":"<Cmd>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166431,"byte_end":166442,"line_start":668,"line_end":668,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Cmd>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166567,"byte_end":166587,"line_start":673,"line_end":673,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Cmd>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166736,"byte_end":166740,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"srem","qualname":"<Cmd>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166876,"byte_end":166882,"line_start":683,"line_end":683,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Cmd>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167020,"byte_end":167031,"line_start":688,"line_end":688,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Cmd>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167243,"byte_end":167247,"line_start":695,"line_end":695,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Cmd>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs>(K, M, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167481,"byte_end":167494,"line_start":700,"line_end":700,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Cmd>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(K, &'a [(S, M)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167679,"byte_end":167684,"line_start":705,"line_end":705,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Cmd>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167834,"byte_end":167840,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Cmd>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs>(K, M, MM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168118,"byte_end":168123,"line_start":716,"line_end":716,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Cmd>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs>(K, M, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168402,"byte_end":168413,"line_start":722,"line_end":722,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Cmd>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168667,"byte_end":168682,"line_start":728,"line_end":728,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Cmd>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168964,"byte_end":168979,"line_start":734,"line_end":734,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Cmd>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169222,"byte_end":169231,"line_start":739,"line_end":739,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Cmd>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(K, L, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169444,"byte_end":169451,"line_start":744,"line_end":744,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Cmd>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169636,"byte_end":169643,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Cmd>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169801,"byte_end":169807,"line_start":754,"line_end":754,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Cmd>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170000,"byte_end":170017,"line_start":759,"line_end":759,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Cmd>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170232,"byte_end":170243,"line_start":764,"line_end":764,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Cmd>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170495,"byte_end":170512,"line_start":770,"line_end":770,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Cmd>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170812,"byte_end":170826,"line_start":776,"line_end":776,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Cmd>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171081,"byte_end":171101,"line_start":782,"line_end":782,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Cmd>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171388,"byte_end":171401,"line_start":788,"line_end":788,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Cmd>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171621,"byte_end":171645,"line_start":793,"line_end":793,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Cmd>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171882,"byte_end":171901,"line_start":798,"line_end":798,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Cmd>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172210,"byte_end":172240,"line_start":804,"line_end":804,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Cmd>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(K, M, MM, isize, isize)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172553,"byte_end":172558,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Cmd>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172722,"byte_end":172726,"line_start":816,"line_end":816,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Cmd>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172921,"byte_end":172930,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Cmd>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173142,"byte_end":173157,"line_start":826,"line_end":826,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Cmd>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173354,"byte_end":173365,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Cmd>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173622,"byte_end":173631,"line_start":837,"line_end":837,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Cmd>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173861,"byte_end":173881,"line_start":843,"line_end":843,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Cmd>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174083,"byte_end":174099,"line_start":848,"line_end":848,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Cmd>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174322,"byte_end":174349,"line_start":853,"line_end":853,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Cmd>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174589,"byte_end":174611,"line_start":858,"line_end":858,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Cmd>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174923,"byte_end":174956,"line_start":864,"line_end":864,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Cmd>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(K, MM, M, isize,\n                                                         isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175310,"byte_end":175318,"line_start":871,"line_end":871,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Cmd>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175503,"byte_end":175509,"line_start":876,"line_end":876,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Cmd>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175747,"byte_end":175758,"line_start":882,"line_end":882,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Cmd>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176009,"byte_end":176024,"line_start":888,"line_end":888,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Cmd>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176303,"byte_end":176318,"line_start":894,"line_end":894,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Cmd>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176565,"byte_end":176570,"line_start":901,"line_end":901,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Cmd>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176787,"byte_end":176794,"line_start":907,"line_end":907,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Cmd>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176925,"byte_end":176932,"line_start":912,"line_end":912,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Cmd>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177082,"byte_end":177089,"line_start":917,"line_end":917,"column_start":8,"column_end":15},"name":"publish","qualname":"<Cmd>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177540,"byte_end":177548,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Cmd>::acl_load","value":"pub fn acl_load<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177878,"byte_end":177886,"line_start":937,"line_end":937,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Cmd>::acl_save","value":"pub fn acl_save<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178083,"byte_end":178091,"line_start":944,"line_end":944,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Cmd>::acl_list","value":"pub fn acl_list<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178331,"byte_end":178340,"line_start":952,"line_end":952,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Cmd>::acl_users","value":"pub fn acl_users<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178536,"byte_end":178547,"line_start":959,"line_end":959,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Cmd>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178771,"byte_end":178782,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Cmd>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179057,"byte_end":179074,"line_start":974,"line_end":974,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Cmd>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(K, &'a [acl::Rule]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179407,"byte_end":179418,"line_start":982,"line_end":982,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Cmd>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179643,"byte_end":179650,"line_start":989,"line_end":989,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Cmd>::acl_cat","value":"pub fn acl_cat<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179844,"byte_end":179864,"line_start":996,"line_end":996,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Cmd>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180120,"byte_end":180131,"line_start":1003,"line_end":1003,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Cmd>::acl_genpass","value":"pub fn acl_genpass<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180350,"byte_end":180366,"line_start":1010,"line_end":1010,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Cmd>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180596,"byte_end":180606,"line_start":1017,"line_end":1017,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Cmd>::acl_whoami","value":"pub fn acl_whoami<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180790,"byte_end":180797,"line_start":1024,"line_end":1024,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Cmd>::acl_log","value":"pub fn acl_log<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180979,"byte_end":180992,"line_start":1032,"line_end":1032,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Cmd>::acl_log_reset","value":"pub fn acl_log_reset<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":181204,"byte_end":181212,"line_start":1039,"line_end":1039,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Cmd>::acl_help","value":"pub fn acl_help<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":182648,"byte_end":182655,"line_start":1082,"line_end":1082,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Cmd>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":183809,"byte_end":183817,"line_start":1119,"line_end":1119,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Cmd>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(K, M1, M2, geo::Unit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":184875,"byte_end":184883,"line_start":1153,"line_end":1153,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Cmd>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":185975,"byte_end":185982,"line_start":1182,"line_end":1182,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Cmd>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187120,"byte_end":187130,"line_start":1207,"line_end":1207,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Cmd>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187721,"byte_end":187741,"line_start":1228,"line_end":1228,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Cmd>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188339,"byte_end":188343,"line_start":1254,"line_end":1254,"column_start":8,"column_end":12},"name":"xack","qualname":"<Cmd>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs>(K, G, &'a [I])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188822,"byte_end":188826,"line_start":1272,"line_end":1272,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Cmd>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(K, ID, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189312,"byte_end":189320,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Cmd>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(K, ID, BTM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189765,"byte_end":189776,"line_start":1304,"line_end":1304,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Cmd>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(K, streams::StreamMaxlen, ID, &'a [(F, V)])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":190402,"byte_end":190417,"line_start":1330,"line_end":1330,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Cmd>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(K, streams::StreamMaxlen, ID, BTM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":191166,"byte_end":191172,"line_start":1356,"line_end":1356,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Cmd>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs>(K, G, C, MIT, &'a [ID])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193039,"byte_end":193053,"line_start":1406,"line_end":1406,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Cmd>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193757,"byte_end":193761,"line_start":1437,"line_end":1437,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Cmd>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(K, &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194402,"byte_end":194415,"line_start":1455,"line_end":1455,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Cmd>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194960,"byte_end":194982,"line_start":1476,"line_end":1476,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Cmd>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":195556,"byte_end":195568,"line_start":1502,"line_end":1502,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Cmd>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196048,"byte_end":196062,"line_start":1522,"line_end":1522,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Cmd>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196490,"byte_end":196508,"line_start":1537,"line_end":1537,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Cmd>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(K, G, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197223,"byte_end":197238,"line_start":1562,"line_end":1562,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Cmd>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197829,"byte_end":197841,"line_start":1584,"line_end":1584,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Cmd>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198380,"byte_end":198392,"line_start":1601,"line_end":1601,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Cmd>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198684,"byte_end":198688,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Cmd>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":199398,"byte_end":199406,"line_start":1633,"line_end":1633,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Cmd>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200087,"byte_end":200101,"line_start":1654,"line_end":1654,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Cmd>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs>(K, G, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200949,"byte_end":200972,"line_start":1688,"line_end":1688,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Cmd>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(K, G, S, E, C, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":201881,"byte_end":201887,"line_start":1725,"line_end":1725,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Cmd>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs>(K, S, E)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202324,"byte_end":202334,"line_start":1742,"line_end":1742,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Cmd>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202641,"byte_end":202653,"line_start":1754,"line_end":1754,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Cmd>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(K, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":203360,"byte_end":203365,"line_start":1779,"line_end":1779,"column_start":8,"column_end":13},"name":"xread","qualname":"<Cmd>::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs>(&'a [K], &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205116,"byte_end":205129,"line_start":1824,"line_end":1824,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Cmd>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&'a [K], &'a [ID],\n                                      streams::StreamReadOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205730,"byte_end":205739,"line_start":1848,"line_end":1848,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Cmd>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs>(K, E, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206086,"byte_end":206099,"line_start":1862,"line_end":1862,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Cmd>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206471,"byte_end":206486,"line_start":1874,"line_end":1874,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Cmd>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(K, E, S, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207026,"byte_end":207031,"line_start":1896,"line_end":1896,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Cmd>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(K, streams::StreamMaxlen) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146940,"byte_end":146948,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":146967,"byte_end":147035,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153456,"byte_end":153459,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"::commands::AsyncCommands::get","value":"pub fn get<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153610,"byte_end":153614,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"::commands::AsyncCommands::keys","value":"pub fn keys<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153723,"byte_end":153726,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"::commands::AsyncCommands::set","value":"pub fn set<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n           Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153876,"byte_end":153888,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"::commands::AsyncCommands::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, &'a [(K, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154036,"byte_end":154042,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"::commands::AsyncCommands::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154242,"byte_end":154249,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"::commands::AsyncCommands::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, V, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154460,"byte_end":154466,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"::commands::AsyncCommands::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154657,"byte_end":154664,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"::commands::AsyncCommands::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, &'a [(K, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154831,"byte_end":154837,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"::commands::AsyncCommands::getset","value":"pub fn getset<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155071,"byte_end":155079,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"::commands::AsyncCommands::getrange","value":"pub fn getrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155274,"byte_end":155282,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"::commands::AsyncCommands::setrange","value":"pub fn setrange<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155453,"byte_end":155456,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"::commands::AsyncCommands::del","value":"pub fn del<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155560,"byte_end":155566,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"::commands::AsyncCommands::exists","value":"pub fn exists<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155683,"byte_end":155689,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"::commands::AsyncCommands::expire","value":"pub fn expire<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155848,"byte_end":155857,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"::commands::AsyncCommands::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156000,"byte_end":156007,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"::commands::AsyncCommands::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156173,"byte_end":156183,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"::commands::AsyncCommands::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156319,"byte_end":156326,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"::commands::AsyncCommands::persist","value":"pub fn persist<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156441,"byte_end":156444,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"::commands::AsyncCommands::ttl","value":"pub fn ttl<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156571,"byte_end":156575,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"::commands::AsyncCommands::pttl","value":"pub fn pttl<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156667,"byte_end":156673,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"::commands::AsyncCommands::rename","value":"pub fn rename<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156828,"byte_end":156837,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"::commands::AsyncCommands::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157002,"byte_end":157008,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"append","qualname":"::commands::AsyncCommands::append","value":"pub fn append<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157255,"byte_end":157259,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"incr","qualname":"::commands::AsyncCommands::incr","value":"pub fn incr<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157582,"byte_end":157588,"line_start":407,"line_end":407,"column_start":8,"column_end":14},"name":"setbit","qualname":"::commands::AsyncCommands::setbit","value":"pub fn setbit<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize, bool) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157802,"byte_end":157808,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"getbit","qualname":"::commands::AsyncCommands::getbit","value":"pub fn getbit<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157943,"byte_end":157951,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"bitcount","qualname":"::commands::AsyncCommands::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158072,"byte_end":158086,"line_start":422,"line_end":422,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"::commands::AsyncCommands::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, usize, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158338,"byte_end":158345,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"bit_and","qualname":"::commands::AsyncCommands::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158589,"byte_end":158595,"line_start":434,"line_end":434,"column_start":8,"column_end":14},"name":"bit_or","qualname":"::commands::AsyncCommands::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158839,"byte_end":158846,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"::commands::AsyncCommands::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159080,"byte_end":159087,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"bit_not","qualname":"::commands::AsyncCommands::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159251,"byte_end":159257,"line_start":451,"line_end":451,"column_start":8,"column_end":14},"name":"strlen","qualname":"::commands::AsyncCommands::strlen","value":"pub fn strlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159409,"byte_end":159413,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"hget","qualname":"::commands::AsyncCommands::hget","value":"pub fn hget<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159625,"byte_end":159629,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"hdel","qualname":"::commands::AsyncCommands::hdel","value":"pub fn hdel<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159775,"byte_end":159779,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hset","qualname":"::commands::AsyncCommands::hset","value":"pub fn hset<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, F, V) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159983,"byte_end":159990,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"::commands::AsyncCommands::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n               Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, F, V) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160178,"byte_end":160191,"line_start":478,"line_end":478,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"::commands::AsyncCommands::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs +\n                     Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, &'a [(F, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160354,"byte_end":160359,"line_start":483,"line_end":483,"column_start":8,"column_end":13},"name":"hincr","qualname":"::commands::AsyncCommands::hincr","value":"pub fn hincr<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n             Sync + 'a, D: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, F, D) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160689,"byte_end":160696,"line_start":492,"line_end":492,"column_start":8,"column_end":15},"name":"hexists","qualname":"::commands::AsyncCommands::hexists","value":"pub fn hexists<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160843,"byte_end":160848,"line_start":497,"line_end":497,"column_start":8,"column_end":13},"name":"hkeys","qualname":"::commands::AsyncCommands::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160958,"byte_end":160963,"line_start":502,"line_end":502,"column_start":8,"column_end":13},"name":"hvals","qualname":"::commands::AsyncCommands::hvals","value":"pub fn hvals<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161084,"byte_end":161091,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"hgetall","qualname":"::commands::AsyncCommands::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161199,"byte_end":161203,"line_start":512,"line_end":512,"column_start":8,"column_end":12},"name":"hlen","qualname":"::commands::AsyncCommands::hlen","value":"pub fn hlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161382,"byte_end":161387,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"blpop","qualname":"::commands::AsyncCommands::blpop","value":"pub fn blpop<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161571,"byte_end":161576,"line_start":524,"line_end":524,"column_start":8,"column_end":13},"name":"brpop","qualname":"::commands::AsyncCommands::brpop","value":"pub fn brpop<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161789,"byte_end":161799,"line_start":530,"line_end":530,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"::commands::AsyncCommands::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161982,"byte_end":161988,"line_start":535,"line_end":535,"column_start":8,"column_end":14},"name":"lindex","qualname":"::commands::AsyncCommands::lindex","value":"pub fn lindex<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162145,"byte_end":162159,"line_start":540,"line_end":540,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"::commands::AsyncCommands::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs + Send + Sync + 'a, P: ToRedisArgs +\n                      Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, P, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162392,"byte_end":162405,"line_start":546,"line_end":546,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"::commands::AsyncCommands::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs + Send + Sync + 'a, P: ToRedisArgs +\n                     Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, P, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162632,"byte_end":162636,"line_start":552,"line_end":552,"column_start":8,"column_end":12},"name":"llen","qualname":"::commands::AsyncCommands::llen","value":"pub fn llen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162779,"byte_end":162783,"line_start":557,"line_end":557,"column_start":8,"column_end":12},"name":"lpop","qualname":"::commands::AsyncCommands::lpop","value":"pub fn lpop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162932,"byte_end":162937,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"lpush","qualname":"::commands::AsyncCommands::lpush","value":"pub fn lpush<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163161,"byte_end":163173,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"::commands::AsyncCommands::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, K, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163348,"byte_end":163354,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"lrange","qualname":"::commands::AsyncCommands::lrange","value":"pub fn lrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163582,"byte_end":163586,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"lrem","qualname":"::commands::AsyncCommands::lrem","value":"pub fn lrem<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163828,"byte_end":163833,"line_start":585,"line_end":585,"column_start":8,"column_end":13},"name":"ltrim","qualname":"::commands::AsyncCommands::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164000,"byte_end":164004,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lset","qualname":"::commands::AsyncCommands::lset","value":"pub fn lset<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164208,"byte_end":164212,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"rpop","qualname":"::commands::AsyncCommands::rpop","value":"pub fn rpop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164354,"byte_end":164363,"line_start":600,"line_end":600,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"::commands::AsyncCommands::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164540,"byte_end":164545,"line_start":605,"line_end":605,"column_start":8,"column_end":13},"name":"rpush","qualname":"::commands::AsyncCommands::rpush","value":"pub fn rpush<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164767,"byte_end":164779,"line_start":611,"line_end":611,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"::commands::AsyncCommands::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, K, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164951,"byte_end":164955,"line_start":618,"line_end":618,"column_start":8,"column_end":12},"name":"sadd","qualname":"::commands::AsyncCommands::sadd","value":"pub fn sadd<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165108,"byte_end":165113,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"scard","qualname":"::commands::AsyncCommands::scard","value":"pub fn scard<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165216,"byte_end":165221,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"sdiff","qualname":"::commands::AsyncCommands::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165363,"byte_end":165373,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"::commands::AsyncCommands::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165507,"byte_end":165513,"line_start":638,"line_end":638,"column_start":8,"column_end":14},"name":"sinter","qualname":"::commands::AsyncCommands::sinter","value":"pub fn sinter<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165657,"byte_end":165668,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"::commands::AsyncCommands::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165827,"byte_end":165836,"line_start":648,"line_end":648,"column_start":8,"column_end":17},"name":"sismember","qualname":"::commands::AsyncCommands::sismember","value":"pub fn sismember<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                 Send + Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165988,"byte_end":165996,"line_start":653,"line_end":653,"column_start":8,"column_end":16},"name":"smembers","qualname":"::commands::AsyncCommands::smembers","value":"pub fn smembers<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166117,"byte_end":166122,"line_start":658,"line_end":658,"column_start":8,"column_end":13},"name":"smove","qualname":"::commands::AsyncCommands::smove","value":"pub fn smove<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166315,"byte_end":166319,"line_start":663,"line_end":663,"column_start":8,"column_end":12},"name":"spop","qualname":"::commands::AsyncCommands::spop","value":"pub fn spop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166431,"byte_end":166442,"line_start":668,"line_end":668,"column_start":8,"column_end":19},"name":"srandmember","qualname":"::commands::AsyncCommands::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166567,"byte_end":166587,"line_start":673,"line_end":673,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"::commands::AsyncCommands::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166736,"byte_end":166740,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"srem","qualname":"::commands::AsyncCommands::srem","value":"pub fn srem<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166876,"byte_end":166882,"line_start":683,"line_end":683,"column_start":8,"column_end":14},"name":"sunion","qualname":"::commands::AsyncCommands::sunion","value":"pub fn sunion<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167020,"byte_end":167031,"line_start":688,"line_end":688,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"::commands::AsyncCommands::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167243,"byte_end":167247,"line_start":695,"line_end":695,"column_start":8,"column_end":12},"name":"zadd","qualname":"::commands::AsyncCommands::zadd","value":"pub fn zadd<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs + Send +\n            Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, M, S) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167481,"byte_end":167494,"line_start":700,"line_end":700,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"::commands::AsyncCommands::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs +\n                     Send + Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, &'a [(S, M)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167679,"byte_end":167684,"line_start":705,"line_end":705,"column_start":8,"column_end":13},"name":"zcard","qualname":"::commands::AsyncCommands::zcard","value":"pub fn zcard<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167834,"byte_end":167840,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"zcount","qualname":"::commands::AsyncCommands::zcount","value":"pub fn zcount<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n              Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168118,"byte_end":168123,"line_start":716,"line_end":716,"column_start":8,"column_end":13},"name":"zincr","qualname":"::commands::AsyncCommands::zincr","value":"pub fn zincr<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, D: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, M, D) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168402,"byte_end":168413,"line_start":722,"line_end":722,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"::commands::AsyncCommands::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168667,"byte_end":168682,"line_start":728,"line_end":728,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"::commands::AsyncCommands::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168964,"byte_end":168979,"line_start":734,"line_end":734,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"::commands::AsyncCommands::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169222,"byte_end":169231,"line_start":739,"line_end":739,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"::commands::AsyncCommands::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs + Send + Sync + 'a, L: ToRedisArgs +\n                 Send + Sync + 'a, RV>(&'a mut Self, K, L, L)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169444,"byte_end":169451,"line_start":744,"line_end":744,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"::commands::AsyncCommands::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169636,"byte_end":169643,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"::commands::AsyncCommands::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169801,"byte_end":169807,"line_start":754,"line_end":754,"column_start":8,"column_end":14},"name":"zrange","qualname":"::commands::AsyncCommands::zrange","value":"pub fn zrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170000,"byte_end":170017,"line_start":759,"line_end":759,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"::commands::AsyncCommands::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170232,"byte_end":170243,"line_start":764,"line_end":764,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"::commands::AsyncCommands::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                   Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170495,"byte_end":170512,"line_start":770,"line_end":770,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"::commands::AsyncCommands::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         M: ToRedisArgs + Send + Sync + 'a, MM: ToRedisArgs +\n                         Send + Sync + 'a,\n                         RV>(&'a mut Self, K, M, MM, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170812,"byte_end":170826,"line_start":776,"line_end":776,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"::commands::AsyncCommands::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs + Send + Sync + 'a, MM: ToRedisArgs +\n                      Send + Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, MM, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171081,"byte_end":171101,"line_start":782,"line_end":782,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"::commands::AsyncCommands::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            MM: ToRedisArgs + Send + Sync + 'a,\n                            M: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, MM, M, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171388,"byte_end":171401,"line_start":788,"line_end":788,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"::commands::AsyncCommands::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                     Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171621,"byte_end":171645,"line_start":793,"line_end":793,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"::commands::AsyncCommands::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                M: ToRedisArgs + Send + Sync + 'a,\n                                MM: ToRedisArgs + Send + Sync + 'a,\n                                RV>(&'a mut Self, K, M, MM)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171882,"byte_end":171901,"line_start":798,"line_end":798,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"::commands::AsyncCommands::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                           M: ToRedisArgs + Send + Sync + 'a,\n                           MM: ToRedisArgs + Send + Sync + 'a,\n                           RV>(&'a mut Self, K, M, MM, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172210,"byte_end":172240,"line_start":804,"line_end":804,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"::commands::AsyncCommands::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                      M: ToRedisArgs + Send + Sync + 'a,\n                                      MM: ToRedisArgs + Send + Sync + 'a,\n                                      RV>(&'a mut Self, K, M, MM, isize,\n                                          isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172553,"byte_end":172558,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"zrank","qualname":"::commands::AsyncCommands::zrank","value":"pub fn zrank<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172722,"byte_end":172726,"line_start":816,"line_end":816,"column_start":8,"column_end":12},"name":"zrem","qualname":"::commands::AsyncCommands::zrem","value":"pub fn zrem<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172921,"byte_end":172930,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"::commands::AsyncCommands::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                 Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173142,"byte_end":173157,"line_start":826,"line_end":826,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"::commands::AsyncCommands::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173354,"byte_end":173365,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"::commands::AsyncCommands::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                   Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173622,"byte_end":173631,"line_start":837,"line_end":837,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"::commands::AsyncCommands::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173861,"byte_end":173881,"line_start":843,"line_end":843,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"::commands::AsyncCommands::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174083,"byte_end":174099,"line_start":848,"line_end":848,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"::commands::AsyncCommands::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                        MM: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                        Send + Sync + 'a, RV>(&'a mut Self, K, MM, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174322,"byte_end":174349,"line_start":853,"line_end":853,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"::commands::AsyncCommands::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                   MM: ToRedisArgs + Send + Sync + 'a,\n                                   M: ToRedisArgs + Send + Sync + 'a,\n                                   RV>(&'a mut Self, K, MM, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174589,"byte_end":174611,"line_start":858,"line_end":858,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"::commands::AsyncCommands::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                              MM: ToRedisArgs + Send + Sync + 'a,\n                              M: ToRedisArgs + Send + Sync + 'a,\n                              RV>(&'a mut Self, K, MM, M, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174923,"byte_end":174956,"line_start":864,"line_end":864,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"::commands::AsyncCommands::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs + Send + Sync +\n                                         'a, MM: ToRedisArgs + Send + Sync +\n                                         'a, M: ToRedisArgs + Send + Sync +\n                                         'a,\n                                         RV>(&'a mut Self, K, MM, M, isize,\n                                             isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175310,"byte_end":175318,"line_start":871,"line_end":871,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"::commands::AsyncCommands::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175503,"byte_end":175509,"line_start":876,"line_end":876,"column_start":8,"column_end":14},"name":"zscore","qualname":"::commands::AsyncCommands::zscore","value":"pub fn zscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175747,"byte_end":175758,"line_start":882,"line_end":882,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"::commands::AsyncCommands::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176009,"byte_end":176024,"line_start":888,"line_end":888,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"::commands::AsyncCommands::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176303,"byte_end":176318,"line_start":894,"line_end":894,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"::commands::AsyncCommands::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176565,"byte_end":176570,"line_start":901,"line_end":901,"column_start":8,"column_end":13},"name":"pfadd","qualname":"::commands::AsyncCommands::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, E) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176787,"byte_end":176794,"line_start":907,"line_end":907,"column_start":8,"column_end":15},"name":"pfcount","qualname":"::commands::AsyncCommands::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176925,"byte_end":176932,"line_start":912,"line_end":912,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"::commands::AsyncCommands::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177082,"byte_end":177089,"line_start":917,"line_end":917,"column_start":8,"column_end":15},"name":"publish","qualname":"::commands::AsyncCommands::publish","value":"pub fn publish<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, E) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177540,"byte_end":177548,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"acl_load","qualname":"::commands::AsyncCommands::acl_load","value":"pub fn acl_load<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177878,"byte_end":177886,"line_start":937,"line_end":937,"column_start":8,"column_end":16},"name":"acl_save","qualname":"::commands::AsyncCommands::acl_save","value":"pub fn acl_save<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178083,"byte_end":178091,"line_start":944,"line_end":944,"column_start":8,"column_end":16},"name":"acl_list","qualname":"::commands::AsyncCommands::acl_list","value":"pub fn acl_list<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178331,"byte_end":178340,"line_start":952,"line_end":952,"column_start":8,"column_end":17},"name":"acl_users","qualname":"::commands::AsyncCommands::acl_users","value":"pub fn acl_users<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178536,"byte_end":178547,"line_start":959,"line_end":959,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"::commands::AsyncCommands::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178771,"byte_end":178782,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"::commands::AsyncCommands::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179057,"byte_end":179074,"line_start":974,"line_end":974,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"::commands::AsyncCommands::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         RV>(&'a mut Self, K, &'a [acl::Rule])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179407,"byte_end":179418,"line_start":982,"line_end":982,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"::commands::AsyncCommands::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179643,"byte_end":179650,"line_start":989,"line_end":989,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"::commands::AsyncCommands::acl_cat","value":"pub fn acl_cat<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179844,"byte_end":179864,"line_start":996,"line_end":996,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"::commands::AsyncCommands::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180120,"byte_end":180131,"line_start":1003,"line_end":1003,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"::commands::AsyncCommands::acl_genpass","value":"pub fn acl_genpass<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180350,"byte_end":180366,"line_start":1010,"line_end":1010,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"::commands::AsyncCommands::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a, RV>(&'a mut Self, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180596,"byte_end":180606,"line_start":1017,"line_end":1017,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"::commands::AsyncCommands::acl_whoami","value":"pub fn acl_whoami<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180790,"byte_end":180797,"line_start":1024,"line_end":1024,"column_start":8,"column_end":15},"name":"acl_log","qualname":"::commands::AsyncCommands::acl_log","value":"pub fn acl_log<'a, RV>(&'a mut Self, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180979,"byte_end":180992,"line_start":1032,"line_end":1032,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"::commands::AsyncCommands::acl_log_reset","value":"pub fn acl_log_reset<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":181204,"byte_end":181212,"line_start":1039,"line_end":1039,"column_start":8,"column_end":16},"name":"acl_help","qualname":"::commands::AsyncCommands::acl_help","value":"pub fn acl_help<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":182648,"byte_end":182655,"line_start":1082,"line_end":1082,"column_start":8,"column_end":15},"name":"geo_add","qualname":"::commands::AsyncCommands::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":183809,"byte_end":183817,"line_start":1119,"line_end":1119,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"::commands::AsyncCommands::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs + Send + Sync + 'a, M1: ToRedisArgs +\n                Send + Sync + 'a, M2: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, M1, M2, geo::Unit)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":184875,"byte_end":184883,"line_start":1153,"line_end":1153,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"::commands::AsyncCommands::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":185975,"byte_end":185982,"line_start":1182,"line_end":1182,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"::commands::AsyncCommands::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187120,"byte_end":187130,"line_start":1207,"line_end":1207,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"::commands::AsyncCommands::geo_radius","value":"pub fn geo_radius<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, f64, f64, f64, geo::Unit,\n                      geo::RadiusOptions) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187721,"byte_end":187741,"line_start":1228,"line_end":1228,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"::commands::AsyncCommands::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            M: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, M, f64, geo::Unit,\n                                geo::RadiusOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188339,"byte_end":188343,"line_start":1254,"line_end":1254,"column_start":8,"column_end":12},"name":"xack","qualname":"::commands::AsyncCommands::xack","value":"pub fn xack<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n            Sync + 'a, I: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, G, &'a [I]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188822,"byte_end":188826,"line_start":1272,"line_end":1272,"column_start":8,"column_end":12},"name":"xadd","qualname":"::commands::AsyncCommands::xadd","value":"pub fn xadd<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n            Sync + 'a, F: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n            Send + Sync + 'a, RV>(&'a mut Self, K, ID, &'a [(F, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189312,"byte_end":189320,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"::commands::AsyncCommands::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                Send + Sync + 'a, BTM: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, ID, BTM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189765,"byte_end":189776,"line_start":1304,"line_end":1304,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"::commands::AsyncCommands::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                   Send + Sync + 'a, F: ToRedisArgs + Send + Sync + 'a,\n                   V: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, streams::StreamMaxlen, ID,\n                       &'a [(F, V)]) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":190402,"byte_end":190417,"line_start":1330,"line_end":1330,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"::commands::AsyncCommands::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       ID: ToRedisArgs + Send + Sync + 'a, BTM: ToRedisArgs +\n                       Send + Sync + 'a,\n                       RV>(&'a mut Self, K, streams::StreamMaxlen, ID, BTM)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":191166,"byte_end":191172,"line_start":1356,"line_end":1356,"column_start":8,"column_end":14},"name":"xclaim","qualname":"::commands::AsyncCommands::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n              Sync + 'a, C: ToRedisArgs + Send + Sync + 'a, MIT: ToRedisArgs +\n              Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, G, C, MIT, &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193039,"byte_end":193053,"line_start":1406,"line_end":1406,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"::commands::AsyncCommands::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, C: ToRedisArgs + Send + Sync + 'a,\n                      MIT: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                      Send + Sync + 'a,\n                      RV>(&'a mut Self, K, G, C, MIT, &'a [ID],\n                          streams::StreamClaimOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193757,"byte_end":193761,"line_start":1437,"line_end":1437,"column_start":8,"column_end":12},"name":"xdel","qualname":"::commands::AsyncCommands::xdel","value":"pub fn xdel<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194402,"byte_end":194415,"line_start":1455,"line_end":1455,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"::commands::AsyncCommands::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                     Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, G, ID) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194960,"byte_end":194982,"line_start":1476,"line_end":1476,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"::commands::AsyncCommands::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs + Send + Sync + 'a,\n                              G: ToRedisArgs + Send + Sync + 'a,\n                              ID: ToRedisArgs + Send + Sync + 'a,\n                              RV>(&'a mut Self, K, G, ID)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":195556,"byte_end":195568,"line_start":1502,"line_end":1502,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"::commands::AsyncCommands::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                    Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K, G, ID) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196048,"byte_end":196062,"line_start":1522,"line_end":1522,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"::commands::AsyncCommands::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196490,"byte_end":196508,"line_start":1537,"line_end":1537,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"::commands::AsyncCommands::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs + Send + Sync + 'a,\n                          G: ToRedisArgs + Send + Sync + 'a, C: ToRedisArgs +\n                          Send + Sync + 'a, RV>(&'a mut Self, K, G, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197223,"byte_end":197238,"line_start":1562,"line_end":1562,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"::commands::AsyncCommands::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                       Send + Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197829,"byte_end":197841,"line_start":1584,"line_end":1584,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"::commands::AsyncCommands::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198380,"byte_end":198392,"line_start":1601,"line_end":1601,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"::commands::AsyncCommands::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198684,"byte_end":198688,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"xlen","qualname":"::commands::AsyncCommands::xlen","value":"pub fn xlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":199398,"byte_end":199406,"line_start":1633,"line_end":1633,"column_start":8,"column_end":16},"name":"xpending","qualname":"::commands::AsyncCommands::xpending","value":"pub fn xpending<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200087,"byte_end":200101,"line_start":1654,"line_end":1654,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"::commands::AsyncCommands::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                      E: ToRedisArgs + Send + Sync + 'a, C: ToRedisArgs +\n                      Send + Sync + 'a, RV>(&'a mut Self, K, G, S, E, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200949,"byte_end":200972,"line_start":1688,"line_end":1688,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"::commands::AsyncCommands::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs + Send + Sync + 'a,\n                               G: ToRedisArgs + Send + Sync + 'a,\n                               S: ToRedisArgs + Send + Sync + 'a,\n                               E: ToRedisArgs + Send + Sync + 'a,\n                               C: ToRedisArgs + Send + Sync + 'a,\n                               CN: ToRedisArgs + Send + Sync + 'a,\n                               RV>(&'a mut Self, K, G, S, E, C, CN)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":201881,"byte_end":201887,"line_start":1725,"line_end":1725,"column_start":8,"column_end":14},"name":"xrange","qualname":"::commands::AsyncCommands::xrange","value":"pub fn xrange<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs + Send +\n              Sync + 'a, E: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, S, E) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202324,"byte_end":202334,"line_start":1742,"line_end":1742,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"::commands::AsyncCommands::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202641,"byte_end":202653,"line_start":1754,"line_end":1754,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"::commands::AsyncCommands::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs +\n                    Send + Sync + 'a, E: ToRedisArgs + Send + Sync + 'a,\n                    C: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K, S, E, C) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":203360,"byte_end":203365,"line_start":1779,"line_end":1779,"column_start":8,"column_end":13},"name":"xread","qualname":"::commands::AsyncCommands::xread","value":"pub fn xread<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, &'a [K], &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205116,"byte_end":205129,"line_start":1824,"line_end":1824,"column_start":8,"column_end":21},"name":"xread_options","qualname":"::commands::AsyncCommands::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                     Send + Sync + 'a,\n                     RV>(&'a mut Self, &'a [K], &'a [ID],\n                         streams::StreamReadOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205730,"byte_end":205739,"line_start":1848,"line_end":1848,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"::commands::AsyncCommands::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs +\n                 Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, E, S) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206086,"byte_end":206099,"line_start":1862,"line_end":1862,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"::commands::AsyncCommands::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206471,"byte_end":206486,"line_start":1874,"line_end":1874,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"::commands::AsyncCommands::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs +\n                       Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                       C: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, E, S, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207026,"byte_end":207031,"line_start":1896,"line_end":1896,"column_start":8,"column_end":13},"name":"xtrim","qualname":"::commands::AsyncCommands::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, streams::StreamMaxlen)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148646,"byte_end":148654,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148673,"byte_end":148682,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":148699,"byte_end":148767,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153456,"byte_end":153459,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"<Pipeline>::get","value":"pub fn get<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153610,"byte_end":153614,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"<Pipeline>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153723,"byte_end":153726,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"<Pipeline>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":153876,"byte_end":153888,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Pipeline>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs,\n                    V: ToRedisArgs>(&mut Self, &'a [(K, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154036,"byte_end":154042,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Pipeline>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154242,"byte_end":154249,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Pipeline>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154460,"byte_end":154466,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Pipeline>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154657,"byte_end":154664,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Pipeline>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, &'a [(K, V)])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":154831,"byte_end":154837,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"<Pipeline>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155071,"byte_end":155079,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Pipeline>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155274,"byte_end":155282,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Pipeline>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155453,"byte_end":155456,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"<Pipeline>::del","value":"pub fn del<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155560,"byte_end":155566,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"<Pipeline>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155683,"byte_end":155689,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"<Pipeline>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":155848,"byte_end":155857,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Pipeline>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156000,"byte_end":156007,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Pipeline>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156173,"byte_end":156183,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Pipeline>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156319,"byte_end":156326,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"<Pipeline>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156441,"byte_end":156444,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Pipeline>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156571,"byte_end":156575,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Pipeline>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156667,"byte_end":156673,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"<Pipeline>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":156828,"byte_end":156837,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Pipeline>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157002,"byte_end":157008,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"append","qualname":"<Pipeline>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157255,"byte_end":157259,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"incr","qualname":"<Pipeline>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157582,"byte_end":157588,"line_start":407,"line_end":407,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Pipeline>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(&mut Self, K, usize, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157802,"byte_end":157808,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Pipeline>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":157943,"byte_end":157951,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Pipeline>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158072,"byte_end":158086,"line_start":422,"line_end":422,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Pipeline>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(&mut Self, K, usize, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158338,"byte_end":158345,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Pipeline>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158589,"byte_end":158595,"line_start":434,"line_end":434,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Pipeline>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":158839,"byte_end":158846,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Pipeline>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159080,"byte_end":159087,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Pipeline>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159251,"byte_end":159257,"line_start":451,"line_end":451,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Pipeline>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159409,"byte_end":159413,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"hget","qualname":"<Pipeline>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159625,"byte_end":159629,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Pipeline>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159775,"byte_end":159779,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hset","qualname":"<Pipeline>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":159983,"byte_end":159990,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Pipeline>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs,\n               V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160178,"byte_end":160191,"line_start":478,"line_end":478,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Pipeline>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160354,"byte_end":160359,"line_start":483,"line_end":483,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Pipeline>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, F, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160689,"byte_end":160696,"line_start":492,"line_end":492,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Pipeline>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160843,"byte_end":160848,"line_start":497,"line_end":497,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Pipeline>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":160958,"byte_end":160963,"line_start":502,"line_end":502,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Pipeline>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161084,"byte_end":161091,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Pipeline>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161199,"byte_end":161203,"line_start":512,"line_end":512,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Pipeline>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161382,"byte_end":161387,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Pipeline>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161571,"byte_end":161576,"line_start":524,"line_end":524,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Pipeline>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161789,"byte_end":161799,"line_start":530,"line_end":530,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Pipeline>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":161982,"byte_end":161988,"line_start":535,"line_end":535,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Pipeline>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162145,"byte_end":162159,"line_start":540,"line_end":540,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Pipeline>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162392,"byte_end":162405,"line_start":546,"line_end":546,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Pipeline>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162632,"byte_end":162636,"line_start":552,"line_end":552,"column_start":8,"column_end":12},"name":"llen","qualname":"<Pipeline>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162779,"byte_end":162783,"line_start":557,"line_end":557,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Pipeline>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":162932,"byte_end":162937,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Pipeline>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163161,"byte_end":163173,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Pipeline>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163348,"byte_end":163354,"line_start":573,"line_end":573,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Pipeline>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163582,"byte_end":163586,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Pipeline>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":163828,"byte_end":163833,"line_start":585,"line_end":585,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Pipeline>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164000,"byte_end":164004,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"lset","qualname":"<Pipeline>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164208,"byte_end":164212,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Pipeline>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164354,"byte_end":164363,"line_start":600,"line_end":600,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Pipeline>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164540,"byte_end":164545,"line_start":605,"line_end":605,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Pipeline>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164767,"byte_end":164779,"line_start":611,"line_end":611,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Pipeline>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":164951,"byte_end":164955,"line_start":618,"line_end":618,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Pipeline>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165108,"byte_end":165113,"line_start":623,"line_end":623,"column_start":8,"column_end":13},"name":"scard","qualname":"<Pipeline>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165216,"byte_end":165221,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Pipeline>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165363,"byte_end":165373,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Pipeline>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165507,"byte_end":165513,"line_start":638,"line_end":638,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Pipeline>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165657,"byte_end":165668,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Pipeline>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165827,"byte_end":165836,"line_start":648,"line_end":648,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Pipeline>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":165988,"byte_end":165996,"line_start":653,"line_end":653,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Pipeline>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4265},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166117,"byte_end":166122,"line_start":658,"line_end":658,"column_start":8,"column_end":13},"name":"smove","qualname":"<Pipeline>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166315,"byte_end":166319,"line_start":663,"line_end":663,"column_start":8,"column_end":12},"name":"spop","qualname":"<Pipeline>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166431,"byte_end":166442,"line_start":668,"line_end":668,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Pipeline>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166567,"byte_end":166587,"line_start":673,"line_end":673,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Pipeline>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(&mut Self, K, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166736,"byte_end":166740,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"srem","qualname":"<Pipeline>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":166876,"byte_end":166882,"line_start":683,"line_end":683,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Pipeline>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167020,"byte_end":167031,"line_start":688,"line_end":688,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Pipeline>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167243,"byte_end":167247,"line_start":695,"line_end":695,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Pipeline>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs,\n            M: ToRedisArgs>(&mut Self, K, M, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167481,"byte_end":167494,"line_start":700,"line_end":700,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Pipeline>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(&mut Self, K, &'a [(S, M)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167679,"byte_end":167684,"line_start":705,"line_end":705,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Pipeline>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":167834,"byte_end":167840,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Pipeline>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs,\n              MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168118,"byte_end":168123,"line_start":716,"line_end":716,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Pipeline>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, M, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168402,"byte_end":168413,"line_start":722,"line_end":722,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Pipeline>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168667,"byte_end":168682,"line_start":728,"line_end":728,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Pipeline>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":168964,"byte_end":168979,"line_start":734,"line_end":734,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Pipeline>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169222,"byte_end":169231,"line_start":739,"line_end":739,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Pipeline>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(&mut Self, K, L, L)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169444,"byte_end":169451,"line_start":744,"line_end":744,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Pipeline>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169636,"byte_end":169643,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Pipeline>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":169801,"byte_end":169807,"line_start":754,"line_end":754,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Pipeline>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170000,"byte_end":170017,"line_start":759,"line_end":759,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Pipeline>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170232,"byte_end":170243,"line_start":764,"line_end":764,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Pipeline>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170495,"byte_end":170512,"line_start":770,"line_end":770,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Pipeline>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":170812,"byte_end":170826,"line_start":776,"line_end":776,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Pipeline>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171081,"byte_end":171101,"line_start":782,"line_end":782,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Pipeline>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, MM, M, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171388,"byte_end":171401,"line_start":788,"line_end":788,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Pipeline>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171621,"byte_end":171645,"line_start":793,"line_end":793,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Pipeline>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(&mut Self, K, M, MM)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":171882,"byte_end":171901,"line_start":798,"line_end":798,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Pipeline>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172210,"byte_end":172240,"line_start":804,"line_end":804,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Pipeline>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(&mut Self, K, M, MM,\n                                                       isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172553,"byte_end":172558,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Pipeline>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172722,"byte_end":172726,"line_start":816,"line_end":816,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Pipeline>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":172921,"byte_end":172930,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Pipeline>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173142,"byte_end":173157,"line_start":826,"line_end":826,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Pipeline>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173354,"byte_end":173365,"line_start":831,"line_end":831,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Pipeline>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173622,"byte_end":173631,"line_start":837,"line_end":837,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Pipeline>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":173861,"byte_end":173881,"line_start":843,"line_end":843,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Pipeline>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174083,"byte_end":174099,"line_start":848,"line_end":848,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Pipeline>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174322,"byte_end":174349,"line_start":853,"line_end":853,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Pipeline>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(&mut Self, K, MM, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174589,"byte_end":174611,"line_start":858,"line_end":858,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Pipeline>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(&mut Self, K, MM, M, isize,\n                                              isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":174923,"byte_end":174956,"line_start":864,"line_end":864,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Pipeline>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(&mut Self, K, MM, M,\n                                                         isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175310,"byte_end":175318,"line_start":871,"line_end":871,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Pipeline>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175503,"byte_end":175509,"line_start":876,"line_end":876,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Pipeline>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4431},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":175747,"byte_end":175758,"line_start":882,"line_end":882,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Pipeline>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4434},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176009,"byte_end":176024,"line_start":888,"line_end":888,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Pipeline>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176303,"byte_end":176318,"line_start":894,"line_end":894,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Pipeline>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176565,"byte_end":176570,"line_start":901,"line_end":901,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Pipeline>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176787,"byte_end":176794,"line_start":907,"line_end":907,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Pipeline>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4447},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":176925,"byte_end":176932,"line_start":912,"line_end":912,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Pipeline>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177082,"byte_end":177089,"line_start":917,"line_end":917,"column_start":8,"column_end":15},"name":"publish","qualname":"<Pipeline>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177540,"byte_end":177548,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Pipeline>::acl_load","value":"pub fn acl_load<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4456},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":177878,"byte_end":177886,"line_start":937,"line_end":937,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Pipeline>::acl_save","value":"pub fn acl_save<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178083,"byte_end":178091,"line_start":944,"line_end":944,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Pipeline>::acl_list","value":"pub fn acl_list<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178331,"byte_end":178340,"line_start":952,"line_end":952,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Pipeline>::acl_users","value":"pub fn acl_users<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178536,"byte_end":178547,"line_start":959,"line_end":959,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Pipeline>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":178771,"byte_end":178782,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Pipeline>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179057,"byte_end":179074,"line_start":974,"line_end":974,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Pipeline>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(&mut Self, K, &'a [acl::Rule])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179407,"byte_end":179418,"line_start":982,"line_end":982,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Pipeline>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&mut Self, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179643,"byte_end":179650,"line_start":989,"line_end":989,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Pipeline>::acl_cat","value":"pub fn acl_cat<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":179844,"byte_end":179864,"line_start":996,"line_end":996,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Pipeline>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180120,"byte_end":180131,"line_start":1003,"line_end":1003,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Pipeline>::acl_genpass","value":"pub fn acl_genpass<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180350,"byte_end":180366,"line_start":1010,"line_end":1010,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Pipeline>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180596,"byte_end":180606,"line_start":1017,"line_end":1017,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Pipeline>::acl_whoami","value":"pub fn acl_whoami<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180790,"byte_end":180797,"line_start":1024,"line_end":1024,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Pipeline>::acl_log","value":"pub fn acl_log<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":180979,"byte_end":180992,"line_start":1032,"line_end":1032,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Pipeline>::acl_log_reset","value":"pub fn acl_log_reset<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":181204,"byte_end":181212,"line_start":1039,"line_end":1039,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Pipeline>::acl_help","value":"pub fn acl_help<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":182648,"byte_end":182655,"line_start":1082,"line_end":1082,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Pipeline>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":183809,"byte_end":183817,"line_start":1119,"line_end":1119,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Pipeline>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(&mut Self, K, M1, M2, geo::Unit) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":184875,"byte_end":184883,"line_start":1153,"line_end":1153,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Pipeline>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":185975,"byte_end":185982,"line_start":1182,"line_end":1182,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Pipeline>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187120,"byte_end":187130,"line_start":1207,"line_end":1207,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Pipeline>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":187721,"byte_end":187741,"line_start":1228,"line_end":1228,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Pipeline>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188339,"byte_end":188343,"line_start":1254,"line_end":1254,"column_start":8,"column_end":12},"name":"xack","qualname":"<Pipeline>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs,\n            I: ToRedisArgs>(&mut Self, K, G, &'a [I]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":188822,"byte_end":188826,"line_start":1272,"line_end":1272,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Pipeline>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, ID, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189312,"byte_end":189320,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Pipeline>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(&mut Self, K, ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":189765,"byte_end":189776,"line_start":1304,"line_end":1304,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Pipeline>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen, ID,\n                                   &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":190402,"byte_end":190417,"line_start":1330,"line_end":1330,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Pipeline>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen,\n                                         ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":191166,"byte_end":191172,"line_start":1356,"line_end":1356,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Pipeline>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs,\n              ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193039,"byte_end":193053,"line_start":1406,"line_end":1406,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Pipeline>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":193757,"byte_end":193761,"line_start":1437,"line_end":1437,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Pipeline>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(&mut Self, K, &'a [ID])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194402,"byte_end":194415,"line_start":1455,"line_end":1455,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Pipeline>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":194960,"byte_end":194982,"line_start":1476,"line_end":1476,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Pipeline>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(&mut Self, K, G, ID)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":195556,"byte_end":195568,"line_start":1502,"line_end":1502,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Pipeline>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196048,"byte_end":196062,"line_start":1522,"line_end":1522,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Pipeline>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4579},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":196490,"byte_end":196508,"line_start":1537,"line_end":1537,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Pipeline>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(&mut Self, K, G, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197223,"byte_end":197238,"line_start":1562,"line_end":1562,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Pipeline>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":197829,"byte_end":197841,"line_start":1584,"line_end":1584,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Pipeline>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198380,"byte_end":198392,"line_start":1601,"line_end":1601,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Pipeline>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":198684,"byte_end":198688,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Pipeline>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":199398,"byte_end":199406,"line_start":1633,"line_end":1633,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Pipeline>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200087,"byte_end":200101,"line_start":1654,"line_end":1654,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Pipeline>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs,\n                      C: ToRedisArgs>(&mut Self, K, G, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":200949,"byte_end":200972,"line_start":1688,"line_end":1688,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Pipeline>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(&mut Self, K, G, S, E, C, CN)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":201881,"byte_end":201887,"line_start":1725,"line_end":1725,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Pipeline>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs,\n              E: ToRedisArgs>(&mut Self, K, S, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202324,"byte_end":202334,"line_start":1742,"line_end":1742,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Pipeline>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":202641,"byte_end":202653,"line_start":1754,"line_end":1754,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Pipeline>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(&mut Self, K, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":203360,"byte_end":203365,"line_start":1779,"line_end":1779,"column_start":8,"column_end":13},"name":"xread","qualname":"<Pipeline>::xread","value":"pub fn xread<'a, K: ToRedisArgs,\n             ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205116,"byte_end":205129,"line_start":1824,"line_end":1824,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Pipeline>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID],\n                                      streams::StreamReadOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":205730,"byte_end":205739,"line_start":1848,"line_end":1848,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Pipeline>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs,\n                 S: ToRedisArgs>(&mut Self, K, E, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206086,"byte_end":206099,"line_start":1862,"line_end":1862,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Pipeline>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":206471,"byte_end":206486,"line_start":1874,"line_end":1874,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Pipeline>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(&mut Self, K, E, S, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207026,"byte_end":207031,"line_start":1896,"line_end":1896,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Pipeline>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152919,"byte_end":152927,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152946,"byte_end":152955,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":152972,"byte_end":153040,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207320,"byte_end":207328,"line_start":1909,"line_end":1909,"column_start":5,"column_end":13},"name":"Continue","qualname":"::commands::ControlFlow::Continue","value":"ControlFlow::Continue","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Continues.\n","sig":null,"attributes":[{"value":"/ Continues.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207301,"byte_end":207315,"line_start":1908,"line_end":1908,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207363,"byte_end":207368,"line_start":1911,"line_end":1911,"column_start":5,"column_end":10},"name":"Break","qualname":"::commands::ControlFlow::Break","value":"ControlFlow::Break(U)","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Breaks with a value.\n","sig":null,"attributes":[{"value":"/ Breaks with a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207334,"byte_end":207358,"line_start":1910,"line_end":1910,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207280,"byte_end":207291,"line_start":1907,"line_end":1907,"column_start":10,"column_end":21},"name":"ControlFlow","qualname":"::commands::ControlFlow","value":"pub enum ControlFlow<U> {\n\n    /// Continues.\n    Continue,\n\n    /// Breaks with a value.\n    Break(U),\n}","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":687}],"decl_id":null,"docs":" Allows pubsub callbacks to stop receiving messages.","sig":null,"attributes":[{"value":"/ Allows pubsub callbacks to stop receiving messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207162,"byte_end":207217,"line_start":1904,"line_end":1904,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207218,"byte_end":207221,"line_start":1905,"line_end":1905,"column_start":1,"column_end":4}},{"value":"/ Arbitrary data may be returned from `Break`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207222,"byte_end":207270,"line_start":1906,"line_end":1906,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208571,"byte_end":208585,"line_start":1948,"line_end":1948,"column_start":11,"column_end":25},"name":"PubSubCommands","qualname":"::commands::PubSubCommands","value":"PubSubCommands: Sized","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":695}],"decl_id":null,"docs":" The PubSub trait allows subscribing to one or more channels\n and receiving a callback whenever a message arrives.","sig":null,"attributes":[{"value":"/ The PubSub trait allows subscribing to one or more channels","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207376,"byte_end":207439,"line_start":1914,"line_end":1914,"column_start":1,"column_end":64}},{"value":"/ and receiving a callback whenever a message arrives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207440,"byte_end":207496,"line_start":1915,"line_end":1915,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207497,"byte_end":207500,"line_start":1916,"line_end":1916,"column_start":1,"column_end":4}},{"value":"/ Each method handles subscribing to the list of keys, waiting for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207501,"byte_end":207569,"line_start":1917,"line_end":1917,"column_start":1,"column_end":69}},{"value":"/ messages, and unsubscribing from the same list of channels once","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207570,"byte_end":207637,"line_start":1918,"line_end":1918,"column_start":1,"column_end":68}},{"value":"/ a ControlFlow::Break is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207638,"byte_end":207678,"line_start":1919,"line_end":1919,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207679,"byte_end":207682,"line_start":1920,"line_end":1920,"column_start":1,"column_end":4}},{"value":"/ Once (p)subscribe returns Ok(U), the connection is again safe to use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207683,"byte_end":207755,"line_start":1921,"line_end":1921,"column_start":1,"column_end":73}},{"value":"/ for calling other methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207756,"byte_end":207786,"line_start":1922,"line_end":1922,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207787,"byte_end":207790,"line_start":1923,"line_end":1923,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207791,"byte_end":207805,"line_start":1924,"line_end":1924,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207806,"byte_end":207809,"line_start":1925,"line_end":1925,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207810,"byte_end":207828,"line_start":1926,"line_end":1926,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207829,"byte_end":207880,"line_start":1927,"line_end":1927,"column_start":1,"column_end":52}},{"value":"/ use redis::{PubSubCommands, ControlFlow};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207881,"byte_end":207926,"line_start":1928,"line_end":1928,"column_start":1,"column_end":46}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207927,"byte_end":207987,"line_start":1929,"line_end":1929,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":207988,"byte_end":208031,"line_start":1930,"line_end":1930,"column_start":1,"column_end":44}},{"value":"/ let mut count = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208032,"byte_end":208054,"line_start":1931,"line_end":1931,"column_start":1,"column_end":23}},{"value":"/ con.subscribe(&[\"foo\"], |msg| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208055,"byte_end":208090,"line_start":1932,"line_end":1932,"column_start":1,"column_end":36}},{"value":"/     // do something with message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208091,"byte_end":208127,"line_start":1933,"line_end":1933,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(msg.get_channel(), Ok(String::from(\"foo\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208128,"byte_end":208191,"line_start":1934,"line_end":1934,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208192,"byte_end":208195,"line_start":1935,"line_end":1935,"column_start":1,"column_end":4}},{"value":"/     // increment messages seen counter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208196,"byte_end":208238,"line_start":1936,"line_end":1936,"column_start":1,"column_end":43}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208239,"byte_end":208258,"line_start":1937,"line_end":1937,"column_start":1,"column_end":20}},{"value":"/     match count {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208259,"byte_end":208280,"line_start":1938,"line_end":1938,"column_start":1,"column_end":22}},{"value":"/         // stop after receiving 10 messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208281,"byte_end":208328,"line_start":1939,"line_end":1939,"column_start":1,"column_end":48}},{"value":"/         10 => ControlFlow::Break(()),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208329,"byte_end":208370,"line_start":1940,"line_end":1940,"column_start":1,"column_end":42}},{"value":"/         _ => ControlFlow::Continue,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208371,"byte_end":208410,"line_start":1941,"line_end":1941,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208411,"byte_end":208420,"line_start":1942,"line_end":1942,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208421,"byte_end":208428,"line_start":1943,"line_end":1943,"column_start":1,"column_end":8}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208429,"byte_end":208443,"line_start":1944,"line_end":1944,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208444,"byte_end":208451,"line_start":1945,"line_end":1945,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208943,"byte_end":208952,"line_start":1955,"line_end":1955,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::commands::PubSubCommands::subscribe","value":"pub fn subscribe<C, F, U>(&mut Self, C, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, C: ToRedisArgs","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using SUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using SUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208599,"byte_end":208671,"line_start":1949,"line_end":1949,"column_start":5,"column_end":77}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208676,"byte_end":208714,"line_start":1950,"line_end":1950,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208719,"byte_end":208722,"line_start":1951,"line_end":1951,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208727,"byte_end":208785,"line_start":1952,"line_end":1952,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208790,"byte_end":208864,"line_start":1953,"line_end":1953,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208869,"byte_end":208935,"line_start":1954,"line_end":1954,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209428,"byte_end":209438,"line_start":1966,"line_end":1966,"column_start":8,"column_end":18},"name":"psubscribe","qualname":"::commands::PubSubCommands::psubscribe","value":"pub fn psubscribe<P, F, U>(&mut Self, P, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, P: ToRedisArgs","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using PSUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using PSUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209083,"byte_end":209156,"line_start":1960,"line_end":1960,"column_start":5,"column_end":78}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209161,"byte_end":209199,"line_start":1961,"line_end":1961,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209204,"byte_end":209207,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209212,"byte_end":209270,"line_start":1963,"line_end":1963,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209275,"byte_end":209349,"line_start":1964,"line_end":1964,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209354,"byte_end":209420,"line_start":1965,"line_end":1965,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211424,"byte_end":211439,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"parse_redis_url","qualname":"::connection::parse_redis_url","value":"pub fn parse_redis_url(&str) -> Result<url::Url, ()>","parent":null,"children":[],"decl_id":null,"docs":" This function takes a redis URL string and parses it into a URL\n as used by rust-url.  This is necessary as the default parser does\n not understand how redis URLs function.\n","sig":null,"attributes":[{"value":"/ This function takes a redis URL string and parses it into a URL","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211234,"byte_end":211301,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ as used by rust-url.  This is necessary as the default parser does","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211302,"byte_end":211372,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ not understand how redis URLs function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211373,"byte_end":211416,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4656},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212030,"byte_end":212033,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::connection::ConnectionAddr::Tcp","value":"ConnectionAddr::Tcp(String, u16)","parent":{"krate":0,"index":4655},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211987,"byte_end":212025,"line_start":42,"line_end":42,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":4660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212095,"byte_end":212101,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"TcpTls","qualname":"::connection::ConnectionAddr::TcpTls","value":"ConnectionAddr::TcpTls { host, port, insecure }","parent":{"krate":0,"index":4655},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212052,"byte_end":212090,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212674,"byte_end":212678,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Unix","qualname":"::connection::ConnectionAddr::Unix","value":"ConnectionAddr::Unix(PathBuf)","parent":{"krate":0,"index":4655},"children":[],"decl_id":null,"docs":" Format for this is the path to the unix socket.\n","sig":null,"attributes":[{"value":"/ Format for this is the path to the unix socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212618,"byte_end":212669,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211966,"byte_end":211980,"line_start":41,"line_end":41,"column_start":10,"column_end":24},"name":"ConnectionAddr","qualname":"::connection::ConnectionAddr","value":"pub enum ConnectionAddr {\n\n    /// Format for this is `(host, port)`.\n    Tcp(String, u16),\n\n    /// Format for this is `(host, port)`.\n    TcpTls {\n        /// Hostname\n        host: String,\n        /// Port\n        port: u16,\n        /// Disable hostname verification when connecting.\n        ///\n        /// # Warning\n        ///\n        /// You should think very carefully before you use this method. If hostname\n        /// verification is not used, any valid certificate for any site will be\n        /// trusted for use from any other. This introduces a significant\n        /// vulnerability to man-in-the-middle attacks.\n        insecure: bool,\n    },\n\n    /// Format for this is the path to the unix socket.\n    Unix(PathBuf),\n}","parent":null,"children":[{"krate":0,"index":4656},{"krate":0,"index":4660},{"krate":0,"index":4664}],"decl_id":null,"docs":" Defines the connection address.","sig":null,"attributes":[{"value":"/ Defines the connection address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211703,"byte_end":211738,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211739,"byte_end":211742,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Not all connection addresses are supported on all platforms.  For instance","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211743,"byte_end":211821,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ to connect to a unix socket you need to run this on an operating system","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211822,"byte_end":211897,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ that supports them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":211898,"byte_end":211921,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213115,"byte_end":213127,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"is_supported","qualname":"<ConnectionAddr>::is_supported","value":"pub fn is_supported(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this address is supported.","sig":null,"attributes":[{"value":"/ Checks if this address is supported.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212718,"byte_end":212758,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212763,"byte_end":212766,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Because not all platforms support all connection addresses this is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212771,"byte_end":212843,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ quick way to figure out if a connection method is supported.  Currently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212848,"byte_end":212923,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ this only affects unix connections which are only supported on unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212928,"byte_end":212999,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ platforms and on older versions of rust also require an explicit feature","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213004,"byte_end":213080,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ to be enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213085,"byte_end":213103,"line_start":71,"line_end":71,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213856,"byte_end":213870,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"ConnectionInfo","qualname":"::connection::ConnectionInfo","value":"ConnectionInfo { addr, db, username, passwd }","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679}],"decl_id":null,"docs":" Holds the connection information that redis should use for connecting.\n","sig":null,"attributes":[{"value":"/ Holds the connection information that redis should use for connecting.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213746,"byte_end":213820,"line_start":91,"line_end":91,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213941,"byte_end":213945,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"addr","qualname":"::connection::ConnectionInfo::addr","value":"std::boxed::Box<connection::ConnectionAddr>","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":" A boxed connection address for where to connect to.\n","sig":null,"attributes":[{"value":"/ A boxed connection address for where to connect to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213877,"byte_end":213932,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214034,"byte_end":214036,"line_start":97,"line_end":97,"column_start":9,"column_end":11},"name":"db","qualname":"::connection::ConnectionInfo::db","value":"i64","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":" The database number to use.  This is usually `0`.\n","sig":null,"attributes":[{"value":"/ The database number to use.  This is usually `0`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213972,"byte_end":214025,"line_start":96,"line_end":96,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214117,"byte_end":214125,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"name":"username","qualname":"::connection::ConnectionInfo::username","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":" Optionally a username that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a username that should be used for connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214047,"byte_end":214108,"line_start":98,"line_end":98,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214217,"byte_end":214223,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"passwd","qualname":"::connection::ConnectionInfo::passwd","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":" Optionally a password that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a password that should be used for connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214147,"byte_end":214208,"line_start":100,"line_end":100,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214583,"byte_end":214601,"line_start":115,"line_end":115,"column_start":11,"column_end":29},"name":"IntoConnectionInfo","qualname":"::connection::IntoConnectionInfo","value":"IntoConnectionInfo","parent":null,"children":[{"krate":0,"index":749}],"decl_id":null,"docs":" Converts an object into a connection info struct.  This allows the\n constructor of the client to accept connection information in a\n range of different formats.\n","sig":null,"attributes":[{"value":"/ Converts an object into a connection info struct.  This allows the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214402,"byte_end":214472,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ constructor of the client to accept connection information in a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214473,"byte_end":214540,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ range of different formats.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214541,"byte_end":214572,"line_start":114,"line_end":114,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214670,"byte_end":214690,"line_start":117,"line_end":117,"column_start":8,"column_end":28},"name":"into_connection_info","qualname":"::connection::IntoConnectionInfo::into_connection_info","value":"pub fn into_connection_info(Self) -> RedisResult<ConnectionInfo>","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":" Converts the object into a connection info object.\n","sig":null,"attributes":[{"value":"/ Converts the object into a connection info object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214608,"byte_end":214662,"line_start":116,"line_end":116,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":219946,"byte_end":219956,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"Connection","qualname":"::connection::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" Represents a stateful redis TCP connection.\n","sig":null,"attributes":[{"value":"/ Represents a stateful redis TCP connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":219887,"byte_end":219934,"line_start":291,"line_end":291,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220359,"byte_end":220365,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"PubSub","qualname":"::connection::PubSub","value":"PubSub {  }","parent":null,"children":[{"krate":0,"index":778}],"decl_id":null,"docs":" Represents a pubsub connection.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220312,"byte_end":220347,"line_start":304,"line_end":304,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220465,"byte_end":220468,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"Msg","qualname":"::connection::Msg","value":"Msg {  }","parent":null,"children":[{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687}],"decl_id":null,"docs":" Represents a pubsub message.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220404,"byte_end":220436,"line_start":309,"line_end":309,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230317,"byte_end":230331,"line_start":576,"line_end":576,"column_start":11,"column_end":25},"name":"ConnectionLike","qualname":"::connection::ConnectionLike","value":"ConnectionLike","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"decl_id":null,"docs":" Implements the \"stateless\" part of the connection interface that is used by the\n different objects in redis-rs.  Primarily it obviously applies to `Connection`\n object but also some other objects implement the interface (for instance\n whole clients or certain redis results).","sig":null,"attributes":[{"value":"/ Implements the \"stateless\" part of the connection interface that is used by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229635,"byte_end":229718,"line_start":566,"line_end":566,"column_start":1,"column_end":84}},{"value":"/ different objects in redis-rs.  Primarily it obviously applies to `Connection`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229719,"byte_end":229801,"line_start":567,"line_end":567,"column_start":1,"column_end":83}},{"value":"/ object but also some other objects implement the interface (for instance","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229802,"byte_end":229878,"line_start":568,"line_end":568,"column_start":1,"column_end":77}},{"value":"/ whole clients or certain redis results).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229879,"byte_end":229923,"line_start":569,"line_end":569,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229924,"byte_end":229927,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ Generally clients and connections (as well as redis results of those) implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":229928,"byte_end":230011,"line_start":571,"line_end":571,"column_start":1,"column_end":84}},{"value":"/ this trait.  Actual connections provide more functionality which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230012,"byte_end":230092,"line_start":572,"line_end":572,"column_start":1,"column_end":81}},{"value":"/ to implement things like `PubSub` but they also can modify the intrinsic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230093,"byte_end":230169,"line_start":573,"line_end":573,"column_start":1,"column_end":77}},{"value":"/ state of the TCP connection.  This is not possible with `ConnectionLike`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230170,"byte_end":230246,"line_start":574,"line_end":574,"column_start":1,"column_end":77}},{"value":"/ implementors because that functionality is not exposed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230247,"byte_end":230306,"line_start":575,"line_end":575,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230458,"byte_end":230476,"line_start":579,"line_end":579,"column_start":8,"column_end":26},"name":"req_packed_command","qualname":"::connection::ConnectionLike::req_packed_command","value":"pub fn req_packed_command(&mut Self, &[u8]) -> RedisResult<Value>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n reads the single response from it.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230338,"byte_end":230407,"line_start":577,"line_end":577,"column_start":5,"column_end":74}},{"value":"/ reads the single response from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230412,"byte_end":230450,"line_start":578,"line_end":578,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230699,"byte_end":230718,"line_start":584,"line_end":584,"column_start":8,"column_end":27},"name":"req_packed_commands","qualname":"::connection::ConnectionLike::req_packed_commands","value":"pub fn req_packed_commands(&mut Self, &[u8], usize, usize)\n-> RedisResult<Vec<Value>>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Sends multiple already encoded (packed) command into the TCP socket\n and reads `count` responses from it.  This is used to implement\n pipelining.\n","sig":null,"attributes":[{"value":"/ Sends multiple already encoded (packed) command into the TCP socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230528,"byte_end":230599,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ and reads `count` responses from it.  This is used to implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230604,"byte_end":230671,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ pipelining.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230676,"byte_end":230691,"line_start":583,"line_end":583,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231091,"byte_end":231097,"line_start":595,"line_end":595,"column_start":8,"column_end":14},"name":"get_db","qualname":"::connection::ConnectionLike::get_db","value":"pub fn get_db(&Self) -> i64","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Returns the database this connection is bound to.  Note that this\n information might be unreliable because it's initially cached and\n also might be incorrect if the connection like object is not\n actually connected.\n","sig":null,"attributes":[{"value":"/ Returns the database this connection is bound to.  Note that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230843,"byte_end":230912,"line_start":591,"line_end":591,"column_start":5,"column_end":74}},{"value":"/ information might be unreliable because it's initially cached and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230917,"byte_end":230986,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/ also might be incorrect if the connection like object is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":230991,"byte_end":231055,"line_start":593,"line_end":593,"column_start":5,"column_end":69}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231060,"byte_end":231083,"line_start":594,"line_end":594,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231189,"byte_end":231208,"line_start":599,"line_end":599,"column_start":8,"column_end":27},"name":"supports_pipelining","qualname":"::connection::ConnectionLike::supports_pipelining","value":"pub fn supports_pipelining(&Self) -> bool","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Does this connection support pipelining?\n","sig":null,"attributes":[{"value":"/ Does this connection support pipelining?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231118,"byte_end":231162,"line_start":597,"line_end":597,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231330,"byte_end":231346,"line_start":604,"line_end":604,"column_start":8,"column_end":24},"name":"check_connection","qualname":"::connection::ConnectionLike::check_connection","value":"pub fn check_connection(&mut Self) -> bool","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Check that all connections it has are available (`PING` internally).\n","sig":null,"attributes":[{"value":"/ Check that all connections it has are available (`PING` internally).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231250,"byte_end":231322,"line_start":603,"line_end":603,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231746,"byte_end":231753,"line_start":613,"line_end":613,"column_start":8,"column_end":15},"name":"is_open","qualname":"::connection::ConnectionLike::is_open","value":"pub fn is_open(&Self) -> bool","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Returns the connection status.","sig":null,"attributes":[{"value":"/ Returns the connection status.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231372,"byte_end":231406,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231411,"byte_end":231414,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ The connection is open until any `read_response` call recieved an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231419,"byte_end":231488,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/ invalid response from the server (most likely a closed or dropped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231493,"byte_end":231562,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ connection, otherwise a Redis protocol error). When using unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231567,"byte_end":231633,"line_start":610,"line_end":610,"column_start":5,"column_end":71}},{"value":"/ sockets the connection is open until writing a command failed with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231638,"byte_end":231710,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ `BrokenPipe` error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":231715,"byte_end":231738,"line_start":612,"line_end":612,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232445,"byte_end":232464,"line_start":628,"line_end":628,"column_start":12,"column_end":31},"name":"send_packed_command","qualname":"<Connection>::send_packed_command","value":"pub fn send_packed_command(&mut Self, &[u8]) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n does not read a response.  This is useful for commands like\n `MONITOR` which yield multiple items.  This needs to be used with\n care because it changes the state of the connection.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232161,"byte_end":232230,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ does not read a response.  This is useful for commands like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232235,"byte_end":232298,"line_start":625,"line_end":625,"column_start":5,"column_end":68}},{"value":"/ `MONITOR` which yield multiple items.  This needs to be used with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232303,"byte_end":232372,"line_start":626,"line_end":626,"column_start":5,"column_end":74}},{"value":"/ care because it changes the state of the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232377,"byte_end":232433,"line_start":627,"line_end":627,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232707,"byte_end":232720,"line_start":635,"line_end":635,"column_start":12,"column_end":25},"name":"recv_response","qualname":"<Connection>::recv_response","value":"pub fn recv_response(&mut Self) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a single response from the connection.  This is useful\n if used in combination with `send_packed_command`.\n","sig":null,"attributes":[{"value":"/ Fetches a single response from the connection.  This is useful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232570,"byte_end":232636,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/ if used in combination with `send_packed_command`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232641,"byte_end":232695,"line_start":634,"line_end":634,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233035,"byte_end":233052,"line_start":644,"line_end":644,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Connection>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the write timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232796,"byte_end":232842,"line_start":639,"line_end":639,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232847,"byte_end":232850,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `send_packed_command` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232855,"byte_end":232928,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232933,"byte_end":233007,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233012,"byte_end":233023,"line_start":643,"line_end":643,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233387,"byte_end":233403,"line_start":653,"line_end":653,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Connection>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233155,"byte_end":233200,"line_start":648,"line_end":648,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233205,"byte_end":233208,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `recv_response` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233213,"byte_end":233280,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233285,"byte_end":233359,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233364,"byte_end":233375,"line_start":652,"line_end":652,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233571,"byte_end":233580,"line_start":658,"line_end":658,"column_start":12,"column_end":21},"name":"as_pubsub","qualname":"<Connection>::as_pubsub","value":"pub fn as_pubsub(&mut Self) -> PubSub","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PubSub`] instance for this connection.\n","sig":null,"attributes":[{"value":"/ Creates a [`PubSub`] instance for this connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":233505,"byte_end":233559,"line_start":657,"line_end":657,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":239911,"byte_end":239920,"line_start":842,"line_end":842,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<PubSub>::subscribe","value":"pub fn subscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":239867,"byte_end":239899,"line_start":841,"line_end":841,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240110,"byte_end":240120,"line_start":847,"line_end":847,"column_start":12,"column_end":22},"name":"psubscribe","qualname":"<PubSub>::psubscribe","value":"pub fn psubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240051,"byte_end":240098,"line_start":846,"line_end":846,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240298,"byte_end":240309,"line_start":852,"line_end":852,"column_start":12,"column_end":23},"name":"unsubscribe","qualname":"<PubSub>::unsubscribe","value":"pub fn unsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240254,"byte_end":240286,"line_start":851,"line_end":851,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240501,"byte_end":240513,"line_start":857,"line_end":857,"column_start":12,"column_end":24},"name":"punsubscribe","qualname":"<PubSub>::punsubscribe","value":"pub fn punsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240442,"byte_end":240489,"line_start":856,"line_end":856,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240972,"byte_end":240983,"line_start":867,"line_end":867,"column_start":12,"column_end":23},"name":"get_message","qualname":"<PubSub>::get_message","value":"pub fn get_message(&mut Self) -> RedisResult<Msg>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the next message from the pubsub connection.  Blocks until\n a message becomes available.  This currently does not provide a\n wait not to block :(","sig":null,"attributes":[{"value":"/ Fetches the next message from the pubsub connection.  Blocks until","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240649,"byte_end":240719,"line_start":861,"line_end":861,"column_start":5,"column_end":75}},{"value":"/ a message becomes available.  This currently does not provide a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240724,"byte_end":240791,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/ wait not to block :(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240796,"byte_end":240820,"line_start":863,"line_end":863,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240825,"byte_end":240828,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240833,"byte_end":240901,"line_start":865,"line_end":865,"column_start":5,"column_end":73}},{"value":"/ appropriate type through the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":240906,"byte_end":240960,"line_start":866,"line_end":866,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241453,"byte_end":241469,"line_start":882,"line_end":882,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<PubSub>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241223,"byte_end":241268,"line_start":877,"line_end":877,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241273,"byte_end":241276,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `get_message` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241281,"byte_end":241346,"line_start":879,"line_end":879,"column_start":5,"column_end":70}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241351,"byte_end":241425,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241430,"byte_end":241441,"line_start":881,"line_end":881,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241871,"byte_end":241881,"line_start":897,"line_end":897,"column_start":12,"column_end":22},"name":"from_value","qualname":"<Msg>::from_value","value":"pub fn from_value(&Value) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert provided [`Value`] into [`Msg`].\n","sig":null,"attributes":[{"value":"/ Tries to convert provided [`Value`] into [`Msg`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241806,"byte_end":241859,"line_start":896,"line_end":896,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242647,"byte_end":242658,"line_start":924,"line_end":924,"column_start":12,"column_end":23},"name":"get_channel","qualname":"<Msg>::get_channel","value":"pub fn get_channel<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel this message came on.\n","sig":null,"attributes":[{"value":"/ Returns the channel this message came on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242590,"byte_end":242635,"line_start":923,"line_end":923,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243035,"byte_end":243051,"line_start":932,"line_end":932,"column_start":12,"column_end":28},"name":"get_channel_name","qualname":"<Msg>::get_channel_name","value":"pub fn get_channel_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to get a string version of the channel.  Unless\n your channel contains non utf-8 bytes you can always use this\n method.  If the channel is not a valid string (which really should\n not happen) then the return value is `\"?\"`.\n","sig":null,"attributes":[{"value":"/ Convenience method to get a string version of the channel.  Unless","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242756,"byte_end":242826,"line_start":928,"line_end":928,"column_start":5,"column_end":75}},{"value":"/ your channel contains non utf-8 bytes you can always use this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242831,"byte_end":242896,"line_start":929,"line_end":929,"column_start":5,"column_end":70}},{"value":"/ method.  If the channel is not a valid string (which really should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242901,"byte_end":242971,"line_start":930,"line_end":930,"column_start":5,"column_end":75}},{"value":"/ not happen) then the return value is `\"?\"`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":242976,"byte_end":243023,"line_start":931,"line_end":931,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243279,"byte_end":243290,"line_start":940,"line_end":940,"column_start":12,"column_end":23},"name":"get_payload","qualname":"<Msg>::get_payload","value":"pub fn get_payload<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the message's payload in a specific format.\n","sig":null,"attributes":[{"value":"/ Returns the message's payload in a specific format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243212,"byte_end":243267,"line_start":939,"line_end":939,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243581,"byte_end":243598,"line_start":947,"line_end":947,"column_start":12,"column_end":29},"name":"get_payload_bytes","qualname":"<Msg>::get_payload_bytes","value":"pub fn get_payload_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes that are the message's payload.  This can be used\n as an alternative to the `get_payload` function if you are interested\n in the raw bytes in it.\n","sig":null,"attributes":[{"value":"/ Returns the bytes that are the message's payload.  This can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243388,"byte_end":243459,"line_start":944,"line_end":944,"column_start":5,"column_end":76}},{"value":"/ as an alternative to the `get_payload` function if you are interested","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243464,"byte_end":243537,"line_start":945,"line_end":945,"column_start":5,"column_end":78}},{"value":"/ in the raw bytes in it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243542,"byte_end":243569,"line_start":946,"line_end":946,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243874,"byte_end":243886,"line_start":957,"line_end":957,"column_start":12,"column_end":24},"name":"from_pattern","qualname":"<Msg>::from_pattern","value":"pub fn from_pattern(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message was constructed from a pattern\n subscription.\n","sig":null,"attributes":[{"value":"/ Returns true if the message was constructed from a pattern","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243734,"byte_end":243796,"line_start":954,"line_end":954,"column_start":5,"column_end":67}},{"value":"/ subscription.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243801,"byte_end":243818,"line_start":955,"line_end":955,"column_start":5,"column_end":22}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243823,"byte_end":243862,"line_start":956,"line_end":956,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244216,"byte_end":244227,"line_start":965,"line_end":965,"column_start":12,"column_end":23},"name":"get_pattern","qualname":"<Msg>::get_pattern","value":"pub fn get_pattern<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If the message was constructed from a message pattern this can be\n used to find out which one.  It's recommended to match against\n an `Option<String>` so that you do not need to use `from_pattern`\n to figure out if a pattern was set.\n","sig":null,"attributes":[{"value":"/ If the message was constructed from a message pattern this can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":243946,"byte_end":244015,"line_start":961,"line_end":961,"column_start":5,"column_end":74}},{"value":"/ used to find out which one.  It's recommended to match against","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244020,"byte_end":244086,"line_start":962,"line_end":962,"column_start":5,"column_end":71}},{"value":"/ an `Option<String>` so that you do not need to use `from_pattern`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244091,"byte_end":244160,"line_start":963,"line_end":963,"column_start":5,"column_end":74}},{"value":"/ to figure out if a pattern was set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244165,"byte_end":244204,"line_start":964,"line_end":964,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245747,"byte_end":245758,"line_start":1005,"line_end":1005,"column_start":8,"column_end":19},"name":"transaction","qualname":"::connection::transaction","value":"pub fn transaction<C: ConnectionLike, K: ToRedisArgs, T,\n                   F: FnMut(&mut C, &mut Pipeline) ->\n                   RedisResult<Option<T>>>(&mut C, &[K], F) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" This function simplifies transaction management slightly.  What it\n does is automatically watching keys and then going into a transaction\n loop util it succeeds.  Once it goes through the results are\n returned.","sig":null,"attributes":[{"value":"/ This function simplifies transaction management slightly.  What it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244421,"byte_end":244491,"line_start":973,"line_end":973,"column_start":1,"column_end":71}},{"value":"/ does is automatically watching keys and then going into a transaction","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244492,"byte_end":244565,"line_start":974,"line_end":974,"column_start":1,"column_end":74}},{"value":"/ loop util it succeeds.  Once it goes through the results are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244566,"byte_end":244630,"line_start":975,"line_end":975,"column_start":1,"column_end":65}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244631,"byte_end":244644,"line_start":976,"line_end":976,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244645,"byte_end":244648,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ To use the transaction two pieces of information are needed: a list","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244649,"byte_end":244720,"line_start":978,"line_end":978,"column_start":1,"column_end":72}},{"value":"/ of all the keys that need to be watched for modifications and a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244721,"byte_end":244788,"line_start":979,"line_end":979,"column_start":1,"column_end":68}},{"value":"/ closure with the code that should be execute in the context of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244789,"byte_end":244859,"line_start":980,"line_end":980,"column_start":1,"column_end":71}},{"value":"/ transaction.  The closure is invoked with a fresh pipeline in atomic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244860,"byte_end":244932,"line_start":981,"line_end":981,"column_start":1,"column_end":73}},{"value":"/ mode.  To use the transaction the function needs to return the result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":244933,"byte_end":245006,"line_start":982,"line_end":982,"column_start":1,"column_end":74}},{"value":"/ from querying the pipeline with the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245007,"byte_end":245058,"line_start":983,"line_end":983,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245059,"byte_end":245062,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ The end result of the transaction is then available as the return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245063,"byte_end":245132,"line_start":985,"line_end":985,"column_start":1,"column_end":70}},{"value":"/ value from the function call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245133,"byte_end":245166,"line_start":986,"line_end":986,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245167,"byte_end":245170,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245171,"byte_end":245183,"line_start":988,"line_end":988,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245184,"byte_end":245187,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245188,"byte_end":245206,"line_start":990,"line_end":990,"column_start":1,"column_end":19}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245207,"byte_end":245231,"line_start":991,"line_end":991,"column_start":1,"column_end":25}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245232,"byte_end":245283,"line_start":992,"line_end":992,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245284,"byte_end":245354,"line_start":993,"line_end":993,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245355,"byte_end":245408,"line_start":994,"line_end":994,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245409,"byte_end":245433,"line_start":995,"line_end":995,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245434,"byte_end":245516,"line_start":996,"line_end":996,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245517,"byte_end":245561,"line_start":997,"line_end":997,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245562,"byte_end":245574,"line_start":998,"line_end":998,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245575,"byte_end":245618,"line_start":999,"line_end":999,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245619,"byte_end":245651,"line_start":1000,"line_end":1000,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245652,"byte_end":245660,"line_start":1001,"line_end":1001,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245661,"byte_end":245716,"line_start":1002,"line_end":1002,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245717,"byte_end":245731,"line_start":1003,"line_end":1003,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":245732,"byte_end":245739,"line_start":1004,"line_end":1004,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":256747,"byte_end":256770,"line_start":210,"line_end":210,"column_start":18,"column_end":41},"name":"parse_redis_value_async","qualname":"::parser::aio_support::parse_redis_value_async","value":"pub async fn parse_redis_value_async<R, '_,\n                                     '_>(&'_ mut combine::stream::Decoder<AnySendSyncPartialState,\n                                                                          PointerOffset<[u8]>>,\n                                         &'_ mut R) -> /*impl Trait*/ where\nR: AsyncRead + std::marker::Unpin","parent":null,"children":[],"decl_id":null,"docs":" Parses a redis value asynchronously.\n","sig":null,"attributes":[{"value":"/ Parses a redis value asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":256689,"byte_end":256729,"line_start":209,"line_end":209,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":257892,"byte_end":257898,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":919}],"decl_id":null,"docs":" The internal redis response parser.\n","sig":null,"attributes":[{"value":"/ The internal redis response parser.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":257841,"byte_end":257880,"line_start":240,"line_end":240,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258627,"byte_end":258630,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser that parses the data behind the reader.  More\n than one value can be behind the reader in which case the parser can\n be invoked multiple times.  In other words: the stream does not have\n to be terminated.\n","sig":null,"attributes":[{"value":"/ Creates a new parser that parses the data behind the reader.  More","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258365,"byte_end":258435,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ than one value can be behind the reader in which case the parser can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258440,"byte_end":258512,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ be invoked multiple times.  In other words: the stream does not have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258517,"byte_end":258589,"line_start":258,"line_end":258,"column_start":5,"column_end":77}},{"value":"/ to be terminated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258594,"byte_end":258615,"line_start":259,"line_end":259,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258838,"byte_end":258849,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"parse_value","qualname":"<Parser>::parse_value","value":"pub fn parse_value<T: Read>(&mut Self, T) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses synchronously into a single value from the reader.\n","sig":null,"attributes":[{"value":"/ Parses synchronously into a single value from the reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258765,"byte_end":258826,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":259888,"byte_end":259905,"line_start":294,"line_end":294,"column_start":8,"column_end":25},"name":"parse_redis_value","qualname":"::parser::parse_redis_value","value":"pub fn parse_redis_value(&[u8]) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses bytes into a redis value.","sig":null,"attributes":[{"value":"/ Parses bytes into a redis value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":259706,"byte_end":259742,"line_start":290,"line_end":290,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":259743,"byte_end":259746,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This is the most straightforward way to parse something into a low","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":259747,"byte_end":259817,"line_start":292,"line_end":292,"column_start":1,"column_end":71}},{"value":"/ level redis value instead of having to use a whole parser.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":259818,"byte_end":259880,"line_start":293,"line_end":293,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260256,"byte_end":260262,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Script","qualname":"::script::Script","value":"Script {  }","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4763}],"decl_id":null,"docs":" Represents a lua script.\n","sig":null,"attributes":[{"value":"/ Represents a lua script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260192,"byte_end":260220,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260949,"byte_end":260952,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Script>::new","value":"pub fn new(&str) -> Script","parent":null,"children":[],"decl_id":null,"docs":" Creates a new script object.\n","sig":null,"attributes":[{"value":"/ Creates a new script object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260905,"byte_end":260937,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261239,"byte_end":261247,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<Script>::get_hash","value":"pub fn get_hash(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the script's SHA1 hash in hexadecimal format.\n","sig":null,"attributes":[{"value":"/ Returns the script's SHA1 hash in hexadecimal format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261170,"byte_end":261227,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261381,"byte_end":261384,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<Script>::key","value":"pub fn key<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with a key filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with a key filled in.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261295,"byte_end":261355,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261360,"byte_end":261369,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261673,"byte_end":261676,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"arg","qualname":"<Script>::arg","value":"pub fn arg<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with an argument filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with an argument filled in.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261581,"byte_end":261647,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261652,"byte_end":261661,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262116,"byte_end":262130,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"prepare_invoke","qualname":"<Script>::prepare_invoke","value":"pub fn prepare_invoke(&Self) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty script invocation object.  This is primarily useful\n for programmatically adding arguments and keys because the type will\n not change.  Normally you can use `arg` and `key` directly.\n","sig":null,"attributes":[{"value":"/ Returns an empty script invocation object.  This is primarily useful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261873,"byte_end":261945,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ for programmatically adding arguments and keys because the type will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":261950,"byte_end":262022,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ not change.  Normally you can use `arg` and `key` directly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262027,"byte_end":262090,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262095,"byte_end":262104,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262366,"byte_end":262372,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"invoke","qualname":"<Script>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script directly without arguments.\n","sig":null,"attributes":[{"value":"/ Invokes the script directly without arguments.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262290,"byte_end":262340,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262345,"byte_end":262354,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262644,"byte_end":262660,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"ScriptInvocation","qualname":"::script::ScriptInvocation","value":"ScriptInvocation {  }","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" Represents a prepared script call.\n","sig":null,"attributes":[{"value":"/ Represents a prepared script call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":262594,"byte_end":262632,"line_start":90,"line_end":90,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263154,"byte_end":263157,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"arg","qualname":"<ScriptInvocation>::arg","value":"pub fn arg<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a regular argument to the invocation.  This ends up as `ARGV[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a regular argument to the invocation.  This ends up as `ARGV[i]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263032,"byte_end":263105,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263110,"byte_end":263128,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263133,"byte_end":263142,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263452,"byte_end":263455,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"key","qualname":"<ScriptInvocation>::key","value":"pub fn key<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a key argument to the invocation.  This ends up as `KEYS[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a key argument to the invocation.  This ends up as `KEYS[i]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263334,"byte_end":263403,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263408,"byte_end":263426,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263431,"byte_end":263440,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263704,"byte_end":263710,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"invoke","qualname":"<ScriptInvocation>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script and returns the result.\n","sig":null,"attributes":[{"value":"/ Invokes the script and returns the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263632,"byte_end":263678,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263683,"byte_end":263692,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":264654,"byte_end":264666,"line_start":155,"line_end":155,"column_start":18,"column_end":30},"name":"invoke_async","qualname":"<ScriptInvocation>::invoke_async","value":"pub async fn invoke_async<C, T, '_, '_>(&'_ Self, &'_ mut C) -> /*impl Trait*/\nwhere C: crate::aio::ConnectionLike, T: FromRedisValue","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously invokes the script and returns the result.\n","sig":null,"attributes":[{"value":"/ Asynchronously invokes the script and returns the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":264533,"byte_end":264594,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":264599,"byte_end":264608,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":264613,"byte_end":264636,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4769},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266557,"byte_end":266567,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::types::NumericBehavior::NonNumeric","value":"NumericBehavior::NonNumeric","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":" This argument is not numeric.\n","sig":null,"attributes":[{"value":"/ This argument is not numeric.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266519,"byte_end":266552,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266610,"byte_end":266625,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"NumberIsInteger","qualname":"::types::NumericBehavior::NumberIsInteger","value":"NumericBehavior::NumberIsInteger","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":" This argument is an integer.\n","sig":null,"attributes":[{"value":"/ This argument is an integer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266573,"byte_end":266605,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266680,"byte_end":266693,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"NumberIsFloat","qualname":"::types::NumericBehavior::NumberIsFloat","value":"NumericBehavior::NumberIsFloat","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":" This argument is a floating point value.\n","sig":null,"attributes":[{"value":"/ This argument is a floating point value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266631,"byte_end":266675,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":4768},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266497,"byte_end":266512,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"name":"NumericBehavior","qualname":"::types::NumericBehavior","value":"pub enum NumericBehavior {\n\n    /// This argument is not numeric.\n    NonNumeric,\n\n    /// This argument is an integer.\n    NumberIsInteger,\n\n    /// This argument is a floating point value.\n    NumberIsFloat,\n}","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4773}],"decl_id":null,"docs":" Helper enum that is used in some situations to describe\n the behavior of arguments in a numeric context.\n","sig":null,"attributes":[{"value":"/ Helper enum that is used in some situations to describe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266331,"byte_end":266390,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ the behavior of arguments in a numeric context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266391,"byte_end":266442,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266850,"byte_end":266863,"line_start":44,"line_end":44,"column_start":5,"column_end":18},"name":"ResponseError","qualname":"::types::ErrorKind::ResponseError","value":"ErrorKind::ResponseError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" The server generated an invalid response.\n","sig":null,"attributes":[{"value":"/ The server generated an invalid response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266800,"byte_end":266845,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266920,"byte_end":266940,"line_start":46,"line_end":46,"column_start":5,"column_end":25},"name":"AuthenticationFailed","qualname":"::types::ErrorKind::AuthenticationFailed","value":"ErrorKind::AuthenticationFailed","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" The authentication with the server failed.\n","sig":null,"attributes":[{"value":"/ The authentication with the server failed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266869,"byte_end":266915,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266999,"byte_end":267008,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"TypeError","qualname":"::types::ErrorKind::TypeError","value":"ErrorKind::TypeError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Operation failed because of a type mismatch.\n","sig":null,"attributes":[{"value":"/ Operation failed because of a type mismatch.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266946,"byte_end":266994,"line_start":47,"line_end":47,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267054,"byte_end":267068,"line_start":50,"line_end":50,"column_start":5,"column_end":19},"name":"ExecAbortError","qualname":"::types::ErrorKind::ExecAbortError","value":"ErrorKind::ExecAbortError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" A script execution was aborted.\n","sig":null,"attributes":[{"value":"/ A script execution was aborted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267014,"byte_end":267049,"line_start":49,"line_end":49,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267138,"byte_end":267154,"line_start":52,"line_end":52,"column_start":5,"column_end":21},"name":"BusyLoadingError","qualname":"::types::ErrorKind::BusyLoadingError","value":"ErrorKind::BusyLoadingError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" The server cannot response because it's loading a dump.\n","sig":null,"attributes":[{"value":"/ The server cannot response because it's loading a dump.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267074,"byte_end":267133,"line_start":51,"line_end":51,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4797},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267221,"byte_end":267234,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"NoScriptError","qualname":"::types::ErrorKind::NoScriptError","value":"ErrorKind::NoScriptError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" A script that was requested does not actually exist.\n","sig":null,"attributes":[{"value":"/ A script that was requested does not actually exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267160,"byte_end":267216,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4799},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267329,"byte_end":267348,"line_start":57,"line_end":57,"column_start":5,"column_end":24},"name":"InvalidClientConfig","qualname":"::types::ErrorKind::InvalidClientConfig","value":"ErrorKind::InvalidClientConfig","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" An error that was caused because the parameter to the\n client were wrong.\n","sig":null,"attributes":[{"value":"/ An error that was caused because the parameter to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267240,"byte_end":267297,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ client were wrong.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267302,"byte_end":267324,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4801},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267405,"byte_end":267410,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Moved","qualname":"::types::ErrorKind::Moved","value":"ErrorKind::Moved","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267354,"byte_end":267400,"line_start":58,"line_end":58,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267486,"byte_end":267489,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Ask","qualname":"::types::ErrorKind::Ask","value":"ErrorKind::Ask","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node but we need to ask.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node but we need to ask.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267416,"byte_end":267481,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267544,"byte_end":267552,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"TryAgain","qualname":"::types::ErrorKind::TryAgain","value":"ErrorKind::TryAgain","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Raised if a request needs to be retried.\n","sig":null,"attributes":[{"value":"/ Raised if a request needs to be retried.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267495,"byte_end":267539,"line_start":62,"line_end":62,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267601,"byte_end":267612,"line_start":65,"line_end":65,"column_start":5,"column_end":16},"name":"ClusterDown","qualname":"::types::ErrorKind::ClusterDown","value":"ErrorKind::ClusterDown","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Raised if a redis cluster is down.\n","sig":null,"attributes":[{"value":"/ Raised if a redis cluster is down.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267558,"byte_end":267596,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267657,"byte_end":267666,"line_start":67,"line_end":67,"column_start":5,"column_end":14},"name":"CrossSlot","qualname":"::types::ErrorKind::CrossSlot","value":"ErrorKind::CrossSlot","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" A request spans multiple slots\n","sig":null,"attributes":[{"value":"/ A request spans multiple slots","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267618,"byte_end":267652,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267713,"byte_end":267723,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"MasterDown","qualname":"::types::ErrorKind::MasterDown","value":"ErrorKind::MasterDown","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" A cluster master is unavailable.\n","sig":null,"attributes":[{"value":"/ A cluster master is unavailable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267672,"byte_end":267708,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267892,"byte_end":267899,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"IoError","qualname":"::types::ErrorKind::IoError","value":"ErrorKind::IoError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" This kind is returned if the redis error is one that is\n not native to the system.  This is usually the case if\n the cause is another error.\n","sig":null,"attributes":[{"value":"/ This kind is returned if the redis error is one that is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267729,"byte_end":267788,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ not native to the system.  This is usually the case if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267793,"byte_end":267851,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/ the cause is another error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267856,"byte_end":267887,"line_start":72,"line_end":72,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267981,"byte_end":267992,"line_start":75,"line_end":75,"column_start":5,"column_end":16},"name":"ClientError","qualname":"::types::ErrorKind::ClientError","value":"ErrorKind::ClientError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" An error raised that was identified on the client before execution.\n","sig":null,"attributes":[{"value":"/ An error raised that was identified on the client before execution.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267905,"byte_end":267976,"line_start":74,"line_end":74,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268122,"byte_end":268136,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"ExtensionError","qualname":"::types::ErrorKind::ExtensionError","value":"ErrorKind::ExtensionError","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" An extension error.  This is an error created by the server\n that is not directly understood by the library.\n","sig":null,"attributes":[{"value":"/ An extension error.  This is an error created by the server","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":267998,"byte_end":268061,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ that is not directly understood by the library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268066,"byte_end":268117,"line_start":77,"line_end":77,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266784,"byte_end":266793,"line_start":42,"line_end":42,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::types::ErrorKind","value":"pub enum ErrorKind {\n\n    /// The server generated an invalid response.\n    ResponseError,\n\n    /// The authentication with the server failed.\n    AuthenticationFailed,\n\n    /// Operation failed because of a type mismatch.\n    TypeError,\n\n    /// A script execution was aborted.\n    ExecAbortError,\n\n    /// The server cannot response because it's loading a dump.\n    BusyLoadingError,\n\n    /// A script that was requested does not actually exist.\n    NoScriptError,\n\n    /// An error that was caused because the parameter to the\n    /// client were wrong.\n    InvalidClientConfig,\n\n    /// Raised if a key moved to a different node.\n    Moved,\n\n    /// Raised if a key moved to a different node but we need to ask.\n    Ask,\n\n    /// Raised if a request needs to be retried.\n    TryAgain,\n\n    /// Raised if a redis cluster is down.\n    ClusterDown,\n\n    /// A request spans multiple slots\n    CrossSlot,\n\n    /// A cluster master is unavailable.\n    MasterDown,\n\n    /// This kind is returned if the redis error is one that is\n    /// not native to the system.  This is usually the case if\n    /// the cause is another error.\n    IoError,\n\n    /// An error raised that was identified on the client before execution.\n    ClientError,\n\n    /// An extension error.  This is an error created by the server\n    /// that is not directly understood by the library.\n    ExtensionError,\n}","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":4789},{"krate":0,"index":4791},{"krate":0,"index":4793},{"krate":0,"index":4795},{"krate":0,"index":4797},{"krate":0,"index":4799},{"krate":0,"index":4801},{"krate":0,"index":4803},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4809},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817}],"decl_id":null,"docs":" An enum of all error kinds.\n","sig":null,"attributes":[{"value":"/ An enum of all error kinds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":266698,"byte_end":266729,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4831},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268275,"byte_end":268278,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"Nil","qualname":"::types::Value::Nil","value":"Value::Nil","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" A nil response from the server.\n","sig":null,"attributes":[{"value":"/ A nil response from the server.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268235,"byte_end":268270,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268531,"byte_end":268534,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Int","qualname":"::types::Value::Int","value":"Value::Int(i64)","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" An integer response.  Note that there are a few situations\n in which redis actually returns a string for an integer which\n is why this library generally treats integers and strings\n the same for all numeric responses.\n","sig":null,"attributes":[{"value":"/ An integer response.  Note that there are a few situations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268284,"byte_end":268346,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ in which redis actually returns a string for an integer which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268351,"byte_end":268416,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/ is why this library generally treats integers and strings","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268421,"byte_end":268482,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ the same for all numeric responses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268487,"byte_end":268526,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4836},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268578,"byte_end":268582,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Data","qualname":"::types::Value::Data","value":"Value::Data(Vec<u8>)","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" An arbitary binary data.\n","sig":null,"attributes":[{"value":"/ An arbitary binary data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268545,"byte_end":268573,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268706,"byte_end":268710,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Bulk","qualname":"::types::Value::Bulk","value":"Value::Bulk(Vec<Value>)","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" A bulk response of more data.  This is generally used by redis\n to express nested structures.\n","sig":null,"attributes":[{"value":"/ A bulk response of more data.  This is generally used by redis","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268597,"byte_end":268663,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ to express nested structures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268668,"byte_end":268701,"line_start":94,"line_end":94,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4842},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268755,"byte_end":268761,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Status","qualname":"::types::Value::Status","value":"Value::Status(String)","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" A status response.\n","sig":null,"attributes":[{"value":"/ A status response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268728,"byte_end":268750,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4845},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268835,"byte_end":268839,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Okay","qualname":"::types::Value::Okay","value":"Value::Okay","parent":{"krate":0,"index":4830},"children":[],"decl_id":null,"docs":" A status response which represents the string \"OK\".\n","sig":null,"attributes":[{"value":"/ A status response which represents the string \"OK\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268775,"byte_end":268830,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":4830},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268223,"byte_end":268228,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::Value","value":"pub enum Value {\n\n    /// A nil response from the server.\n    Nil,\n\n    /// An integer response.  Note that there are a few situations\n    /// in which redis actually returns a string for an integer which\n    /// is why this library generally treats integers and strings\n    /// the same for all numeric responses.\n    Int(i64),\n\n    /// An arbitary binary data.\n    Data(Vec<u8>),\n\n    /// A bulk response of more data.  This is generally used by redis\n    /// to express nested structures.\n    Bulk(Vec<Value>),\n\n    /// A status response.\n    Status(String),\n\n    /// A status response which represents the string \"OK\".\n    Okay,\n}","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4836},{"krate":0,"index":4839},{"krate":0,"index":4842},{"krate":0,"index":4845}],"decl_id":null,"docs":" Internal low-level redis value enum.\n","sig":null,"attributes":[{"value":"/ Internal low-level redis value enum.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268141,"byte_end":268181,"line_start":81,"line_end":81,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268855,"byte_end":268862,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"MapIter","qualname":"::types::MapIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269822,"byte_end":269839,"line_start":129,"line_end":129,"column_start":12,"column_end":29},"name":"looks_like_cursor","qualname":"<Value>::looks_like_cursor","value":"pub fn looks_like_cursor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the return value looks like it fulfils the cursor\n protocol.  That means the result is a bulk item of length\n two with the first one being a cursor and the second a\n bulk response.\n","sig":null,"attributes":[{"value":"/ Checks if the return value looks like it fulfils the cursor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269595,"byte_end":269658,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ protocol.  That means the result is a bulk item of length","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269663,"byte_end":269724,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ two with the first one being a cursor and the second a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269729,"byte_end":269787,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ bulk response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269792,"byte_end":269810,"line_start":128,"line_end":128,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":270530,"byte_end":270541,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"as_sequence","qualname":"<Value>::as_sequence","value":"pub fn as_sequence(&Self) -> Option<&[Value]>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `&[Value]` if `self` is compatible with a sequence type\n","sig":null,"attributes":[{"value":"/ Returns an `&[Value]` if `self` is compatible with a sequence type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":270448,"byte_end":270518,"line_start":153,"line_end":153,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":270822,"byte_end":270833,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"as_map_iter","qualname":"<Value>::as_map_iter","value":"pub fn as_map_iter(&Self) -> Option<MapIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type\n","sig":null,"attributes":[{"value":"/ Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":270725,"byte_end":270810,"line_start":162,"line_end":162,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":272123,"byte_end":272133,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"RedisError","qualname":"::types::RedisError","value":"RedisError {  }","parent":null,"children":[{"krate":0,"index":1006}],"decl_id":null,"docs":" Represents a redis error.  For the most part you should be using\n the Error trait to interact with this rather than the actual\n struct.\n","sig":null,"attributes":[{"value":"/ Represents a redis error.  For the most part you should be using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":271966,"byte_end":272034,"line_start":198,"line_end":198,"column_start":1,"column_end":69}},{"value":"/ the Error trait to interact with this rather than the actual","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":272035,"byte_end":272099,"line_start":199,"line_end":199,"column_start":1,"column_end":65}},{"value":"/ struct.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":272100,"byte_end":272111,"line_start":200,"line_end":200,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275796,"byte_end":275800,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"kind","qualname":"<RedisError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of the error.\n","sig":null,"attributes":[{"value":"/ Returns the kind of the error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275750,"byte_end":275784,"line_start":326,"line_end":326,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":276168,"byte_end":276174,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"detail","qualname":"<RedisError>::detail","value":"pub fn detail(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error detail.\n","sig":null,"attributes":[{"value":"/ Returns the error detail.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":276127,"byte_end":276156,"line_start":336,"line_end":336,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":276497,"byte_end":276501,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"code","qualname":"<RedisError>::code","value":"pub fn code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw error code if available.\n","sig":null,"attributes":[{"value":"/ Returns the raw error code if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":276441,"byte_end":276485,"line_start":345,"line_end":345,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":277345,"byte_end":277353,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"category","qualname":"<RedisError>::category","value":"pub fn category(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the error category for display purposes.\n","sig":null,"attributes":[{"value":"/ Returns the name of the error category for display purposes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":277269,"byte_end":277333,"line_start":365,"line_end":365,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":278372,"byte_end":278383,"line_start":388,"line_end":388,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<RedisError>::is_io_error","value":"pub fn is_io_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this failure is an IO failure.\n","sig":null,"attributes":[{"value":"/ Indicates that this failure is an IO failure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":278311,"byte_end":278360,"line_start":387,"line_end":387,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":278743,"byte_end":278759,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"is_cluster_error","qualname":"<RedisError>::is_cluster_error","value":"pub fn is_cluster_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this is a cluster error.\n","sig":null,"attributes":[{"value":"/ Indicates that this is a cluster error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":278688,"byte_end":278731,"line_start":402,"line_end":402,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279231,"byte_end":279252,"line_start":416,"line_end":416,"column_start":12,"column_end":33},"name":"is_connection_refusal","qualname":"<RedisError>::is_connection_refusal","value":"pub fn is_connection_refusal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error indicates that the connection was\n refused.  You should generally not rely much on this function\n unless you are writing unit tests that want to detect if a\n local server is available.\n","sig":null,"attributes":[{"value":"/ Returns true if this error indicates that the connection was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":278983,"byte_end":279047,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ refused.  You should generally not rely much on this function","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279052,"byte_end":279117,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/ unless you are writing unit tests that want to detect if a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279122,"byte_end":279184,"line_start":414,"line_end":414,"column_start":5,"column_end":67}},{"value":"/ local server is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279189,"byte_end":279219,"line_start":415,"line_end":415,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279932,"byte_end":279942,"line_start":434,"line_end":434,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<RedisError>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by I/O time out.\n Note that this may not be accurate depending on platform.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by I/O time out.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279801,"byte_end":279854,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/ Note that this may not be accurate depending on platform.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":279859,"byte_end":279920,"line_start":433,"line_end":433,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280309,"byte_end":280330,"line_start":446,"line_end":446,"column_start":12,"column_end":33},"name":"is_connection_dropped","qualname":"<RedisError>::is_connection_dropped","value":"pub fn is_connection_dropped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by a dropped connection.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by a dropped connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280236,"byte_end":280297,"line_start":445,"line_end":445,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280709,"byte_end":280722,"line_start":459,"line_end":459,"column_start":12,"column_end":25},"name":"redirect_node","qualname":"<RedisError>::redirect_node","value":"pub fn redirect_node(&Self) -> Option<(&str, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the node the error refers to.","sig":null,"attributes":[{"value":"/ Returns the node the error refers to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280608,"byte_end":280649,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280654,"byte_end":280657,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This returns `(addr, slot_id)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":280662,"byte_end":280697,"line_start":458,"line_end":458,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281327,"byte_end":281347,"line_start":475,"line_end":475,"column_start":12,"column_end":32},"name":"extension_error_code","qualname":"<RedisError>::extension_error_code","value":"pub fn extension_error_code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the extension error code.","sig":null,"attributes":[{"value":"/ Returns the extension error code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281026,"byte_end":281063,"line_start":469,"line_end":469,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281068,"byte_end":281071,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This method should not be used because every time the redis library","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281076,"byte_end":281147,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/ adds support for a new error code it would disappear form this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281152,"byte_end":281226,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ `code()` always returns the code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281231,"byte_end":281268,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"deprecated(note = \"use code() instead\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":281273,"byte_end":281315,"line_start":474,"line_end":474,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283046,"byte_end":283057,"line_start":521,"line_end":521,"column_start":10,"column_end":21},"name":"RedisResult","qualname":"::types::RedisResult","value":"Result<T, RedisError>","parent":null,"children":[],"decl_id":null,"docs":" Library generic result type.\n","sig":null,"attributes":[{"value":"/ Library generic result type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283004,"byte_end":283036,"line_start":520,"line_end":520,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283153,"byte_end":283164,"line_start":525,"line_end":525,"column_start":10,"column_end":21},"name":"RedisFuture","qualname":"::types::RedisFuture","value":"futures_util::future::BoxFuture","parent":null,"children":[],"decl_id":null,"docs":" Library generic future type.\n","sig":null,"attributes":[{"value":"/ Library generic future type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283087,"byte_end":283119,"line_start":523,"line_end":523,"column_start":1,"column_end":33}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283120,"byte_end":283143,"line_start":524,"line_end":524,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4875},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283285,"byte_end":283293,"line_start":529,"line_end":529,"column_start":12,"column_end":20},"name":"InfoDict","qualname":"::types::InfoDict","value":"InfoDict {  }","parent":null,"children":[{"krate":0,"index":4876}],"decl_id":null,"docs":" An info dictionary type.\n","sig":null,"attributes":[{"value":"/ An info dictionary type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":283228,"byte_end":283256,"line_start":527,"line_end":527,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284271,"byte_end":284274,"line_start":554,"line_end":554,"column_start":12,"column_end":15},"name":"new","qualname":"<InfoDict>::new","value":"pub fn new(&str) -> InfoDict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new info dictionary from a string in the response of\n the INFO command.  Each line is a key, value pair with the\n key and value separated by a colon (`:`).  Lines starting with a\n hash (`#`) are ignored.\n","sig":null,"attributes":[{"value":"/ Creates a new info dictionary from a string in the response of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284021,"byte_end":284087,"line_start":550,"line_end":550,"column_start":5,"column_end":71}},{"value":"/ the INFO command.  Each line is a key, value pair with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284092,"byte_end":284154,"line_start":551,"line_end":551,"column_start":5,"column_end":67}},{"value":"/ key and value separated by a colon (`:`).  Lines starting with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284159,"byte_end":284227,"line_start":552,"line_end":552,"column_start":5,"column_end":73}},{"value":"/ hash (`#`) are ignored.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284232,"byte_end":284259,"line_start":553,"line_end":553,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284879,"byte_end":284882,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"get","qualname":"<InfoDict>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a value by key and converts it into the given type.\n Typical types are `String`, `bool` and integer types.\n","sig":null,"attributes":[{"value":"/ Fetches a value by key and converts it into the given type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284742,"byte_end":284805,"line_start":568,"line_end":568,"column_start":5,"column_end":68}},{"value":"/ Typical types are `String`, `bool` and integer types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284810,"byte_end":284867,"line_start":569,"line_end":569,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285116,"byte_end":285120,"line_start":578,"line_end":578,"column_start":12,"column_end":16},"name":"find","qualname":"<InfoDict>::find","value":"pub fn find(&Self, &&str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a key in the info dict.\n","sig":null,"attributes":[{"value":"/ Looks up a key in the info dict.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285068,"byte_end":285104,"line_start":577,"line_end":577,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285260,"byte_end":285272,"line_start":583,"line_end":583,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<InfoDict>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a key is contained in the info dicf.\n","sig":null,"attributes":[{"value":"/ Checks if a key is contained in the info dicf.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285198,"byte_end":285248,"line_start":582,"line_end":582,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285396,"byte_end":285399,"line_start":588,"line_end":588,"column_start":12,"column_end":15},"name":"len","qualname":"<InfoDict>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the info dict.\n","sig":null,"attributes":[{"value":"/ Returns the size of the info dict.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285346,"byte_end":285384,"line_start":587,"line_end":587,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285496,"byte_end":285504,"line_start":593,"line_end":593,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InfoDict>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the dict is empty.\n","sig":null,"attributes":[{"value":"/ Checks if the dict is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285452,"byte_end":285484,"line_start":592,"line_end":592,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285623,"byte_end":285633,"line_start":599,"line_end":599,"column_start":11,"column_end":21},"name":"RedisWrite","qualname":"::types::RedisWrite","value":"RedisWrite","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"decl_id":null,"docs":" Abstraction trait for redis command abstractions.\n","sig":null,"attributes":[{"value":"/ Abstraction trait for redis command abstractions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285559,"byte_end":285612,"line_start":598,"line_end":598,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285687,"byte_end":285696,"line_start":601,"line_end":601,"column_start":8,"column_end":17},"name":"write_arg","qualname":"::types::RedisWrite::write_arg","value":"pub fn write_arg(&mut Self, &[u8])","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285640,"byte_end":285679,"line_start":600,"line_end":600,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285773,"byte_end":285786,"line_start":604,"line_end":604,"column_start":8,"column_end":21},"name":"write_arg_fmt","qualname":"::types::RedisWrite::write_arg_fmt","value":"pub fn write_arg_fmt<impl fmt::Display: fmt::Display>(&mut Self,\n                                                      impl fmt::Display)","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285726,"byte_end":285765,"line_start":603,"line_end":603,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286317,"byte_end":286328,"line_start":622,"line_end":622,"column_start":11,"column_end":22},"name":"ToRedisArgs","qualname":"::types::ToRedisArgs","value":"ToRedisArgs: Sized","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1073}],"decl_id":null,"docs":" Used to convert a value into one or multiple redis argument\n strings.  Most values will produce exactly one item but in\n some cases it might make sense to produce more than one.\n","sig":null,"attributes":[{"value":"/ Used to convert a value into one or multiple redis argument","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286119,"byte_end":286182,"line_start":619,"line_end":619,"column_start":1,"column_end":64}},{"value":"/ strings.  Most values will produce exactly one item but in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286183,"byte_end":286245,"line_start":620,"line_end":620,"column_start":1,"column_end":63}},{"value":"/ some cases it might make sense to produce more than one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286246,"byte_end":286306,"line_start":621,"line_end":621,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286573,"byte_end":286586,"line_start":628,"line_end":628,"column_start":8,"column_end":21},"name":"to_redis_args","qualname":"::types::ToRedisArgs::to_redis_args","value":"pub fn to_redis_args(&Self) -> Vec<Vec<u8>>","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" This converts the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a vector of a\n single item.","sig":null,"attributes":[{"value":"/ This converts the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286342,"byte_end":286404,"line_start":623,"line_end":623,"column_start":5,"column_end":67}},{"value":"/ is a single argument.  Most items generate a vector of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286409,"byte_end":286469,"line_start":624,"line_end":624,"column_start":5,"column_end":65}},{"value":"/ single item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286474,"byte_end":286490,"line_start":625,"line_end":625,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286495,"byte_end":286498,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286503,"byte_end":286565,"line_start":627,"line_end":627,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286919,"byte_end":286935,"line_start":638,"line_end":638,"column_start":8,"column_end":24},"name":"write_redis_args","qualname":"::types::ToRedisArgs::write_redis_args","value":"pub fn write_redis_args<W: ?Sized>(&Self, &mut W) where W: RedisWrite","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" This writes the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a single item.","sig":null,"attributes":[{"value":"/ This writes the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286710,"byte_end":286770,"line_start":634,"line_end":634,"column_start":5,"column_end":65}},{"value":"/ is a single argument.  Most items generate a single item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286775,"byte_end":286836,"line_start":635,"line_end":635,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286841,"byte_end":286844,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286849,"byte_end":286911,"line_start":637,"line_end":637,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287293,"byte_end":287318,"line_start":646,"line_end":646,"column_start":8,"column_end":33},"name":"describe_numeric_behavior","qualname":"::types::ToRedisArgs::describe_numeric_behavior","value":"pub fn describe_numeric_behavior(&Self) -> NumericBehavior","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" Returns an information about the contained value with regards\n to it's numeric behavior in a redis context.  This is used in\n some high level concepts to switch between different implementations\n of redis functions (for instance `INCR` vs `INCRBYFLOAT`).\n","sig":null,"attributes":[{"value":"/ Returns an information about the contained value with regards","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287006,"byte_end":287071,"line_start":642,"line_end":642,"column_start":5,"column_end":70}},{"value":"/ to it's numeric behavior in a redis context.  This is used in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287076,"byte_end":287141,"line_start":643,"line_end":643,"column_start":5,"column_end":70}},{"value":"/ some high level concepts to switch between different implementations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287146,"byte_end":287218,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ of redis functions (for instance `INCR` vs `INCRBYFLOAT`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287223,"byte_end":287285,"line_start":645,"line_end":645,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287651,"byte_end":287664,"line_start":654,"line_end":654,"column_start":8,"column_end":21},"name":"is_single_arg","qualname":"::types::ToRedisArgs::is_single_arg","value":"pub fn is_single_arg(&Self) -> bool","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" Returns an indiciation if the value contained is exactly one\n argument.  It returns false if it's zero or more than one.  This\n is used in some high level functions to intelligently switch\n between `GET` and `MGET` variants.\n","sig":null,"attributes":[{"value":"/ Returns an indiciation if the value contained is exactly one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287394,"byte_end":287458,"line_start":650,"line_end":650,"column_start":5,"column_end":69}},{"value":"/ argument.  It returns false if it's zero or more than one.  This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287463,"byte_end":287531,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/ is used in some high level functions to intelligently switch","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287536,"byte_end":287600,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ between `GET` and `MGET` variants.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287605,"byte_end":287643,"line_start":653,"line_end":653,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287820,"byte_end":287832,"line_start":661,"line_end":661,"column_start":8,"column_end":20},"name":"make_arg_vec","qualname":"::types::ToRedisArgs::make_arg_vec","value":"pub fn make_arg_vec<W: ?Sized>(&[Self], &mut W) where W: RedisWrite","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287706,"byte_end":287769,"line_start":658,"line_end":658,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":287774,"byte_end":287793,"line_start":659,"line_end":659,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":288123,"byte_end":288140,"line_start":673,"line_end":673,"column_start":8,"column_end":25},"name":"make_arg_iter_ref","qualname":"::types::ToRedisArgs::make_arg_iter_ref","value":"pub fn make_arg_iter_ref<'a, I, W: ?Sized>(I, &mut W) where W: RedisWrite,\nI: Iterator<Item = &'a Self>, Self: 'a","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":288009,"byte_end":288072,"line_start":670,"line_end":670,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":288077,"byte_end":288096,"line_start":671,"line_end":671,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":288389,"byte_end":288406,"line_start":685,"line_end":685,"column_start":8,"column_end":25},"name":"is_single_vec_arg","qualname":"::types::ToRedisArgs::is_single_vec_arg","value":"pub fn is_single_vec_arg(&[Self]) -> bool","parent":{"krate":0,"index":1061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296702,"byte_end":296716,"line_start":972,"line_end":972,"column_start":11,"column_end":25},"name":"FromRedisValue","qualname":"::types::FromRedisValue","value":"FromRedisValue: Sized","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1138}],"decl_id":null,"docs":" This trait is used to convert a redis value into a more appropriate\n type.  While a redis `Value` can represent any response that comes\n back from the redis server, usually you want to map this into something\n that works better in rust.  For instance you might want to convert the\n return value into a `String` or an integer.","sig":null,"attributes":[{"value":"/ This trait is used to convert a redis value into a more appropriate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296103,"byte_end":296174,"line_start":961,"line_end":961,"column_start":1,"column_end":72}},{"value":"/ type.  While a redis `Value` can represent any response that comes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296175,"byte_end":296245,"line_start":962,"line_end":962,"column_start":1,"column_end":71}},{"value":"/ back from the redis server, usually you want to map this into something","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296246,"byte_end":296321,"line_start":963,"line_end":963,"column_start":1,"column_end":76}},{"value":"/ that works better in rust.  For instance you might want to convert the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296322,"byte_end":296396,"line_start":964,"line_end":964,"column_start":1,"column_end":75}},{"value":"/ return value into a `String` or an integer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296397,"byte_end":296444,"line_start":965,"line_end":965,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296445,"byte_end":296448,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ This trait is well supported throughout the library and you can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296449,"byte_end":296516,"line_start":967,"line_end":967,"column_start":1,"column_end":68}},{"value":"/ implement it for your own types if you want.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296517,"byte_end":296565,"line_start":968,"line_end":968,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296566,"byte_end":296569,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ In addition to what you can see from the docs, this is also implemented","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296570,"byte_end":296645,"line_start":970,"line_end":970,"column_start":1,"column_end":76}},{"value":"/ for tuples up to size 12 and for Vec<u8>.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296646,"byte_end":296691,"line_start":971,"line_end":971,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296918,"byte_end":296934,"line_start":976,"line_end":976,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::FromRedisValue::from_redis_value","value":"pub fn from_redis_value(&Value) -> RedisResult<Self>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Given a redis `Value` this attempts to convert it into the given\n destination type.  If that fails because it's not compatible an\n appropriate error is generated.\n","sig":null,"attributes":[{"value":"/ Given a redis `Value` this attempts to convert it into the given","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296730,"byte_end":296798,"line_start":973,"line_end":973,"column_start":5,"column_end":73}},{"value":"/ destination type.  If that fails because it's not compatible an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296803,"byte_end":296870,"line_start":974,"line_end":974,"column_start":5,"column_end":72}},{"value":"/ appropriate error is generated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296875,"byte_end":296910,"line_start":975,"line_end":975,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297179,"byte_end":297196,"line_start":981,"line_end":981,"column_start":8,"column_end":25},"name":"from_redis_values","qualname":"::types::FromRedisValue::from_redis_values","value":"pub fn from_redis_values(&[Value]) -> RedisResult<Vec<Self>>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Similar to `from_redis_value` but constructs a vector of objects\n from another vector of values.  This primarily exists internally\n to customize the behavior for vectors of tuples.\n","sig":null,"attributes":[{"value":"/ Similar to `from_redis_value` but constructs a vector of objects","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296973,"byte_end":297041,"line_start":978,"line_end":978,"column_start":5,"column_end":73}},{"value":"/ from another vector of values.  This primarily exists internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297046,"byte_end":297114,"line_start":979,"line_end":979,"column_start":5,"column_end":73}},{"value":"/ to customize the behavior for vectors of tuples.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297119,"byte_end":297171,"line_start":980,"line_end":980,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297504,"byte_end":297517,"line_start":991,"line_end":991,"column_start":8,"column_end":21},"name":"from_byte_vec","qualname":"::types::FromRedisValue::from_byte_vec","value":"pub fn from_byte_vec(&[u8]) -> Option<Vec<Self>>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297390,"byte_end":297453,"line_start":988,"line_end":988,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":297458,"byte_end":297477,"line_start":989,"line_end":989,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305857,"byte_end":305873,"line_start":1232,"line_end":1232,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::from_redis_value","value":"pub fn from_redis_value<T: FromRedisValue>(&Value) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut function to invoke `FromRedisValue::from_redis_value`\n to make the API slightly nicer.\n","sig":null,"attributes":[{"value":"/ A shortcut function to invoke `FromRedisValue::from_redis_value`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305745,"byte_end":305813,"line_start":1230,"line_end":1230,"column_start":1,"column_end":69}},{"value":"/ to make the API slightly nicer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305814,"byte_end":305849,"line_start":1231,"line_end":1231,"column_start":1,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16710,"byte_end":16714,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19578,"byte_end":19585,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":28122,"byte_end":28127,"line_start":88,"line_end":88,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":30363,"byte_end":30379,"line_start":148,"line_end":148,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":33263,"byte_end":33279,"line_start":211,"line_end":211,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34353,"byte_end":34359,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":37334,"byte_end":37344,"line_start":329,"line_end":329,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44703,"byte_end":44713,"line_start":547,"line_end":547,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":46705,"byte_end":46713,"line_start":617,"line_end":617,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":46987,"byte_end":46999,"line_start":632,"line_end":632,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":49121,"byte_end":49133,"line_start":690,"line_end":690,"column_start":67,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":51434,"byte_end":51442,"line_start":770,"line_end":770,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":292},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":53592,"byte_end":53613,"line_start":839,"line_end":839,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":57457,"byte_end":57478,"line_start":933,"line_end":933,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":68546,"byte_end":68570,"line_start":26,"line_end":26,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":69294,"byte_end":69318,"line_start":50,"line_end":50,"column_start":20,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":71842,"byte_end":71850,"line_start":136,"line_end":136,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73806,"byte_end":73810,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74631,"byte_end":74636,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74883,"byte_end":74888,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75433,"byte_end":75438,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76195,"byte_end":76206,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77249,"byte_end":77262,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78632,"byte_end":78645,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":80068,"byte_end":80086,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":80775,"byte_end":80793,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83814,"byte_end":83826,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84728,"byte_end":84746,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85512,"byte_end":85530,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86984,"byte_end":87001,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":88150,"byte_end":88167,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90848,"byte_end":90866,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90958,"byte_end":90976,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96345,"byte_end":96353,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97638,"byte_end":97653,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":98276,"byte_end":98292,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":98680,"byte_end":98696,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":99191,"byte_end":99209,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":100538,"byte_end":100561,"line_start":561,"line_end":561,"column_start":25,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":102421,"byte_end":102442,"line_start":603,"line_end":603,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":103383,"byte_end":103407,"line_start":629,"line_end":629,"column_start":25,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":104122,"byte_end":104143,"line_start":651,"line_end":651,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105768,"byte_end":105774,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":113648,"byte_end":113654,"line_start":213,"line_end":213,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115591,"byte_end":115595,"line_start":42,"line_end":42,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":116980,"byte_end":116989,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":121424,"byte_end":121427,"line_start":244,"line_end":244,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":121788,"byte_end":121791,"line_start":257,"line_end":257,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":122751,"byte_end":122754,"line_start":290,"line_end":290,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130723,"byte_end":130731,"line_start":509,"line_end":509,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131781,"byte_end":131789,"line_start":536,"line_end":536,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":650},{"krate":0,"index":654},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209588,"byte_end":209589,"line_start":1972,"line_end":1972,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209668,"byte_end":209669,"line_start":1975,"line_end":1975,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209749,"byte_end":209759,"line_start":1977,"line_end":1977,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212697,"byte_end":212711,"line_start":64,"line_end":64,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213374,"byte_end":213388,"line_start":81,"line_end":81,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214261,"byte_end":214275,"line_start":104,"line_end":104,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214760,"byte_end":214774,"line_start":120,"line_end":120,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":215530,"byte_end":215536,"line_start":149,"line_end":149,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":219088,"byte_end":219091,"line_start":253,"line_end":253,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220547,"byte_end":220563,"line_start":317,"line_end":317,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232144,"byte_end":232154,"line_start":623,"line_end":623,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":238163,"byte_end":238173,"line_start":772,"line_end":772,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":239776,"byte_end":239782,"line_start":836,"line_end":836,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241587,"byte_end":241593,"line_start":887,"line_end":887,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241796,"byte_end":241799,"line_start":895,"line_end":895,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":250299,"byte_end":250311,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":250456,"byte_end":250468,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":255260,"byte_end":255270,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":255506,"byte_end":255516,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258015,"byte_end":258021,"line_start":245,"line_end":245,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258352,"byte_end":258358,"line_start":255,"line_end":255,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260892,"byte_end":260898,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263005,"byte_end":263021,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268920,"byte_end":268927,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269583,"byte_end":269588,"line_start":124,"line_end":124,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":271012,"byte_end":271017,"line_start":171,"line_end":171,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":272385,"byte_end":272395,"line_start":213,"line_end":213,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273018,"byte_end":273028,"line_start":231,"line_end":231,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273183,"byte_end":273193,"line_start":239,"line_end":239,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273631,"byte_end":273641,"line_start":256,"line_end":256,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273868,"byte_end":273878,"line_start":264,"line_end":264,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274097,"byte_end":274107,"line_start":272,"line_end":272,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274332,"byte_end":274342,"line_start":280,"line_end":280,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274919,"byte_end":274929,"line_start":299,"line_end":299,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275549,"byte_end":275559,"line_start":318,"line_end":318,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275733,"byte_end":275743,"line_start":325,"line_end":325,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284006,"byte_end":284014,"line_start":549,"line_end":549,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285905,"byte_end":285908,"line_start":609,"line_end":609,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":290925,"byte_end":290931,"line_start":772,"line_end":772,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":291473,"byte_end":291476,"line_start":799,"line_end":799,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":292055,"byte_end":292061,"line_start":825,"line_end":825,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":292835,"byte_end":292842,"line_start":853,"line_end":853,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":293284,"byte_end":293292,"line_start":869,"line_end":869,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":293815,"byte_end":293823,"line_start":886,"line_end":886,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":299747,"byte_end":299753,"line_start":1066,"line_end":1066,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":300159,"byte_end":300162,"line_start":1077,"line_end":1077,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":300930,"byte_end":300937,"line_start":1094,"line_end":1094,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":301323,"byte_end":301331,"line_start":1104,"line_end":1104,"column_start":75,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":301738,"byte_end":301745,"line_start":1116,"line_end":1116,"column_start":82,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":302099,"byte_end":302107,"line_start":1125,"line_end":1125,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":302444,"byte_end":302449,"line_start":1137,"line_end":1137,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305349,"byte_end":305357,"line_start":1214,"line_end":1214,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305550,"byte_end":305556,"line_start":1221,"line_end":1221,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13189,"byte_end":13192,"line_start":391,"line_end":391,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13274,"byte_end":13277,"line_start":395,"line_end":395,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13421,"byte_end":13434,"line_start":400,"line_end":400,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":329}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13530,"byte_end":13533,"line_start":404,"line_end":404,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":352}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\lib.rs","byte_start":13804,"byte_end":13811,"line_start":416,"line_end":416,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":415}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":16710,"byte_end":16714,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1188},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\acl.rs","byte_start":19578,"byte_end":19585,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":28122,"byte_end":28127,"line_start":88,"line_end":88,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":1257}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":30363,"byte_end":30379,"line_start":148,"line_end":148,"column_start":21,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":139},"to":{"krate":26,"index":244}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":33263,"byte_end":33279,"line_start":211,"line_end":211,"column_start":20,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":139},"to":{"krate":26,"index":188}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":34353,"byte_end":34359,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":37334,"byte_end":37344,"line_start":329,"line_end":329,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":44703,"byte_end":44713,"line_start":547,"line_end":547,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":46705,"byte_end":46713,"line_start":617,"line_end":617,"column_start":32,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":46987,"byte_end":46999,"line_start":632,"line_end":632,"column_start":15,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":49121,"byte_end":49133,"line_start":690,"line_end":690,"column_start":67,"column_end":79},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1264},"to":{"krate":22,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":51434,"byte_end":51442,"line_start":770,"line_end":770,"column_start":22,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":53592,"byte_end":53613,"line_start":839,"line_end":839,"column_start":6,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio.rs","byte_start":57457,"byte_end":57478,"line_start":933,"line_end":933,"column_start":25,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":68546,"byte_end":68570,"line_start":26,"line_end":26,"column_start":21,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":341},"to":{"krate":26,"index":244}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":69294,"byte_end":69318,"line_start":50,"line_end":50,"column_start":20,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":341},"to":{"krate":26,"index":188}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\aio_async_std.rs","byte_start":71842,"byte_end":71850,"line_start":136,"line_end":136,"column_start":18,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":350},"to":{"krate":0,"index":1257}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":73806,"byte_end":73810,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":362},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74631,"byte_end":74636,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":74883,"byte_end":74888,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":75433,"byte_end":75438,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":76195,"byte_end":76206,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":77249,"byte_end":77262,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":78632,"byte_end":78645,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1345},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":80068,"byte_end":80086,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":407},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\geo.rs","byte_start":80775,"byte_end":80793,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":83814,"byte_end":83826,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1354},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":84728,"byte_end":84746,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":85512,"byte_end":85530,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1373},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":86984,"byte_end":87001,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":88150,"byte_end":88167,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90848,"byte_end":90866,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":90958,"byte_end":90976,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":96345,"byte_end":96353,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":97638,"byte_end":97653,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1392},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":98276,"byte_end":98292,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":98680,"byte_end":98696,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1408},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":99191,"byte_end":99209,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1416},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":100538,"byte_end":100561,"line_start":561,"line_end":561,"column_start":25,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1437},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":102421,"byte_end":102442,"line_start":603,"line_end":603,"column_start":25,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1445},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":103383,"byte_end":103407,"line_start":629,"line_end":629,"column_start":25,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1458},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\streams.rs","byte_start":104122,"byte_end":104143,"line_start":651,"line_end":651,"column_start":25,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1466},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":105768,"byte_end":105774,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\client.rs","byte_start":113648,"byte_end":113654,"line_start":213,"line_end":213,"column_start":25,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1524},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":115591,"byte_end":115595,"line_start":42,"line_end":42,"column_start":42,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":116980,"byte_end":116989,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":121424,"byte_end":121427,"line_start":244,"line_end":244,"column_start":21,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":1053}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":121788,"byte_end":121791,"line_start":257,"line_end":257,"column_start":18,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":122751,"byte_end":122754,"line_start":290,"line_end":290,"column_start":6,"column_end":9},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":130723,"byte_end":130731,"line_start":509,"line_end":509,"column_start":18,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1547},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\cmd.rs","byte_start":131781,"byte_end":131789,"line_start":536,"line_end":536,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":208587,"byte_end":208592,"line_start":1948,"line_end":1948,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":690}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209588,"byte_end":209589,"line_start":1972,"line_end":1972,"column_start":22,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":700},"to":{"krate":0,"index":1552}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209668,"byte_end":209669,"line_start":1975,"line_end":1975,"column_start":27,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":702},"to":{"krate":0,"index":3015}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\commands.rs","byte_start":209749,"byte_end":209759,"line_start":1977,"line_end":1977,"column_start":25,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":690}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":212697,"byte_end":212711,"line_start":64,"line_end":64,"column_start":6,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":213374,"byte_end":213388,"line_start":81,"line_end":81,"column_start":23,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4655},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214261,"byte_end":214275,"line_start":104,"line_end":104,"column_start":18,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":9028}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":214760,"byte_end":214774,"line_start":120,"line_end":120,"column_start":29,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":215530,"byte_end":215536,"line_start":149,"line_end":149,"column_start":29,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":219088,"byte_end":219091,"line_start":253,"line_end":253,"column_start":34,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":69,"index":723},"to":{"krate":0,"index":748}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":220547,"byte_end":220563,"line_start":317,"line_end":317,"column_start":6,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":232144,"byte_end":232154,"line_start":623,"line_end":623,"column_start":6,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":238163,"byte_end":238173,"line_start":772,"line_end":772,"column_start":25,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":239776,"byte_end":239782,"line_start":836,"line_end":836,"column_start":10,"column_end":16},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241587,"byte_end":241593,"line_start":887,"line_end":887,"column_start":19,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\connection.rs","byte_start":241796,"byte_end":241799,"line_start":895,"line_end":895,"column_start":6,"column_end":9},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":250299,"byte_end":250311,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":250456,"byte_end":250468,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":255260,"byte_end":255270,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4753},"to":{"krate":43,"index":44}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":255506,"byte_end":255516,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4753},"to":{"krate":43,"index":33}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258015,"byte_end":258021,"line_start":245,"line_end":245,"column_start":18,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\parser.rs","byte_start":258352,"byte_end":258358,"line_start":255,"line_end":255,"column_start":6,"column_end":12},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":260892,"byte_end":260898,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\script.rs","byte_start":263005,"byte_end":263021,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":268920,"byte_end":268927,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":269583,"byte_end":269588,"line_start":124,"line_end":124,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":271012,"byte_end":271017,"line_start":171,"line_end":171,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4830},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":272385,"byte_end":272395,"line_start":213,"line_end":213,"column_start":20,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273018,"byte_end":273028,"line_start":231,"line_end":231,"column_start":26,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273183,"byte_end":273193,"line_start":239,"line_end":239,"column_start":26,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273631,"byte_end":273641,"line_start":256,"line_end":256,"column_start":30,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":273868,"byte_end":273878,"line_start":264,"line_end":264,"column_start":42,"column_end":52},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274097,"byte_end":274107,"line_start":272,"line_end":272,"column_start":50,"column_end":60},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274332,"byte_end":274342,"line_start":280,"line_end":280,"column_start":23,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1005},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":274919,"byte_end":274929,"line_start":299,"line_end":299,"column_start":23,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275549,"byte_end":275559,"line_start":318,"line_end":318,"column_start":21,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":275733,"byte_end":275743,"line_start":325,"line_end":325,"column_start":6,"column_end":16},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":284006,"byte_end":284014,"line_start":549,"line_end":549,"column_start":6,"column_end":14},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":285905,"byte_end":285908,"line_start":609,"line_end":609,"column_start":21,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1053}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":286330,"byte_end":286335,"line_start":622,"line_end":622,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":290925,"byte_end":290931,"line_start":772,"line_end":772,"column_start":22,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":291473,"byte_end":291476,"line_start":799,"line_end":799,"column_start":38,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":292055,"byte_end":292061,"line_start":825,"line_end":825,"column_start":38,"column_end":44},"kind":{"Impl":{"id":104}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":292835,"byte_end":292842,"line_start":853,"line_end":853,"column_start":76,"column_end":83},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":293284,"byte_end":293292,"line_start":869,"line_end":869,"column_start":56,"column_end":64},"kind":{"Impl":{"id":106}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":293815,"byte_end":293823,"line_start":886,"line_end":886,"column_start":72,"column_end":80},"kind":{"Impl":{"id":107}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":1061}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":296718,"byte_end":296723,"line_start":972,"line_end":972,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":299747,"byte_end":299753,"line_start":1066,"line_end":1066,"column_start":25,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":300159,"byte_end":300162,"line_start":1077,"line_end":1077,"column_start":44,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":300930,"byte_end":300937,"line_start":1094,"line_end":1094,"column_start":9,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":617},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":301323,"byte_end":301331,"line_start":1104,"line_end":1104,"column_start":75,"column_end":83},"kind":{"Impl":{"id":124}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":301738,"byte_end":301745,"line_start":1116,"line_end":1116,"column_start":82,"column_end":89},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":302099,"byte_end":302107,"line_start":1125,"line_end":1125,"column_start":56,"column_end":64},"kind":{"Impl":{"id":126}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":302444,"byte_end":302449,"line_start":1137,"line_end":1137,"column_start":25,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4830},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305349,"byte_end":305357,"line_start":1214,"line_end":1214,"column_start":25,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4875},"to":{"krate":0,"index":1134}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.17.0\\src\\types.rs","byte_start":305550,"byte_end":305556,"line_start":1221,"line_end":1221,"column_start":44,"column_end":50},"kind":{"Impl":{"id":129}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1134}}]}